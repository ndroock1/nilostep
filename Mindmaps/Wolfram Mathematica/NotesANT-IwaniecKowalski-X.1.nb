(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    880792,      19767]
NotebookOptionsPosition[    836553,      19032]
NotebookOutlinePosition[    837277,      19055]
CellTagsIndexPosition[    837234,      19052]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Pre-amble", "Section",ExpressionUUID->"584864ba-1211-47c1-96bd-09b055380762"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{
   "$Path", ",", 
    "\"\<C:\\\\Users\\\\deroo\\\\__DATA\\\\MEGA\\\\DATA\\\\git\\\\MFDSNT\\\\\
Mathematica Notebooks\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "BKPNumberTheory`"}]}], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"0dff1cfb-3f9f-456d-93b9-e60cdbe2bc42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nCollatz", "[", "23", "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"720ab3c7-4c2b-42ad-98c1-8661b1045d5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "23", ",", "70", ",", "35", ",", "106", ",", "53", ",", "160", ",", "80", 
   ",", "40", ",", "20", ",", "10", ",", "5", ",", "16", ",", "8", ",", "4", 
   ",", "2", ",", "1"}], "}"}]], "Output",
 CellLabel->"Out[3]=",ExpressionUUID->"b036b63a-8f3e-4507-ba80-fe47b6d02919"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Topic", "Section",
 CellChangeTimes->{{3.7832737703729143`*^9, 3.7832737842442713`*^9}, {
  3.7832739024677706`*^9, 3.7832739104188433`*^9}, {3.7832739717708426`*^9, 
  3.783273973717634*^9}, {3.7853374065365705`*^9, 3.7853374175281563`*^9}, {
  3.7853377031963477`*^9, 
  3.7853377048362412`*^9}},ExpressionUUID->"a73767dc-da7f-4f30-b355-\
4465af181835"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Definition / Theorem ",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.7826654768540397`*^9, 3.782665485158893*^9}, 
   3.782715887476343*^9, {3.782716848474037*^9, 3.782716871121205*^9}, {
   3.7827173361574907`*^9, 3.7827173415799327`*^9}, {3.7828031783556767`*^9, 
   3.78280318145585*^9}, {3.7828034538688183`*^9, 3.7828034574366493`*^9}, {
   3.7833530768548527`*^9, 3.7833530903994584`*^9}, {3.783358080038978*^9, 
   3.7833580879180937`*^9}, {3.7853375280890074`*^9, 
   3.7853375294890585`*^9}, {3.7853377669291077`*^9, 3.785337780886693*^9}},
 FontColor->GrayLevel[
  0],ExpressionUUID->"647ffe1f-34c1-4183-b04e-b4fa274fb19d"],

Cell["This is text.", "Text",
 CellChangeTimes->{{3.7853375391106453`*^9, 
  3.785337545415392*^9}},ExpressionUUID->"ca7ae836-4645-4cb2-b244-\
e563110366b9"],

Cell[TextData[StyleBox["Example",
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.5019607843137255, 0.5019607843137255, 
   0.5019607843137255]]], "Subsubsection",
 CellChangeTimes->{{3.7828068396307926`*^9, 
  3.782806841526989*^9}},ExpressionUUID->"741ce6e3-3daf-4cc1-810c-\
8d6edfec343d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Gamma Function( TBD: ALERT )", "Section",ExpressionUUID->"0326ce91-758f-41a0-aae5-cff164eae16d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "gamma", "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"gamma", "[", "s_", "]"}], ":=", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"s", "-", "1"}]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma", "[", "x_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["t", 
      RowBox[{"x", "-", "1"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", "t", "]"}], ">", "1"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma2", "[", "x_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "x"], 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["t", "x"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "t"}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Log", "[", 
  RowBox[{"10.", ",", 
   RowBox[{"Gamma", "[", "70", "]"}]}], "]"}]}], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"b7ae3260-04ee-4041-8e28-9b197ef485c2"],

Cell[BoxData["98.23330699566571`"], "Output",
 CellLabel->"Out[28]=",ExpressionUUID->"3f691aaa-3baf-4718-9d9e-c2449c3f2fe2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gamma", "[", "3.25", "]"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma2", "[", "3.25", "]"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{"gamma", "[", "6", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gamma", "[", "3.25", "]"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Gamma", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellLabel->"In[29]:=",ExpressionUUID->"1ac237ff-0f75-4693-aae5-52c914e56818"],

Cell[BoxData["2.5492569667185294`"], "Output",
 CellLabel->"Out[29]=",ExpressionUUID->"711b6916-c7bb-47cc-8067-5818ece31b33"],

Cell[BoxData["2.5492569667185285`"], "Output",
 CellLabel->"Out[30]=",ExpressionUUID->"59aaf7dd-b7cb-4915-b367-603305f5225f"],

Cell[BoxData["120"], "Output",
 CellLabel->"Out[31]=",ExpressionUUID->"7a80c0a6-796f-4b0b-bb4d-dfcd1326ab58"],

Cell[BoxData["2.5492569667185294`"], "Output",
 CellLabel->"Out[32]=",ExpressionUUID->"4dd0c498-b035-44e7-b6e2-9ade032a8a25"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
E/////8fNCHEjQ==
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
b9b0MvCy7qGwfyyV4deCzMVYw8BkuWJf+kdlsIguGh9+yMAl6WUU4bQyBLVW
P1C5ycAWTkyovdVs4IZ8NjyQykCRgN4flDEb5J5oqiruZWDXHrs+y2Mq4Clj
3mrnzUAjrXoP5XsqkLF9aepedwYa5OccOv9TBfSEvqSqJQzcgLnvEnargtXq
HMYOWQZ+G5+ZdOGoGoSlPyg7J6ZjZupQhXa15L04QDtSyqBjdeCg8ddpNXBK
7BmY2UvHmW/chjxz1SH5y2jB/A46JskbnFg+rg4fzIU7vd/SkWrYx3+1RgN8
/tPtvF9BR3aiLdWIqQE5upZX2u/R8VvgR/aqTZrQd8xxgzCXjtONO5xiH2vC
IeXdDZ5JdJy62mWkGKkFZ7wLqtg76fi5PIrjv1Ib6u+W/au/iY4uFLnUa8+0
gczFBe4udEy1+FuYuEwHLuX8uJNnRcccP728YjddaB+d3NtkQkdpu22nw7t0
QdNxpt6UNh2jlLYO2gTpQWGfQaazFB0DzH2HWI/mwi+rxZuC+FMoU9lW0uIz
Dyzi1ihmT0zhHD8N9Xlkfag03pcw2j2FWU7JswUv9YEbdmK1eusUfj9C6FeZ
GcCKpnjRyoYpbL7Ourcv3QDeHL4Tll46hV45cW9NIgxB/nmVde3tKQx1GuIo
Mw3BS6Hx76/sKdRPORd096QRdJf+ClgWP4WUhdcsFdONoTJLsYwTO/X//5//
AQfvoV0=
       "]], LineBox[CompressedData["
1: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
u/8DHZjLww==
       "]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$69666#1"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-4, 4}, {-8.734286831402727, 10.347931368528442`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[33]=",ExpressionUUID->"a3fe39ee-8546-41c1-893b-ac50c057c6a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gamma", "[", "z_", "]"}], ":=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["t", 
      RowBox[{"z", "-", "1"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gamma", "[", "z", "]"}]}], "Input",
 CellLabel->
  "In[308]:=",ExpressionUUID->"ac287134-2008-4c16-b543-79dfbc8814ed"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"Gamma", "[", "z", "]"}], 
   RowBox[{
     RowBox[{"Re", "[", "z", "]"}], ">", "0"}]},
  "ConditionalExpression"]], "Output",
 CellLabel->
  "Out[309]=",ExpressionUUID->"c1a4b972-3c65-4e7b-a153-81bb9bf52b63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["t", 
      RowBox[{"z", "-", "1"}]], "-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}], "+", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]], 
     RowBox[{"(", 
      RowBox[{"z", "-", "1"}], ")"}], 
     SuperscriptBox["t", 
      RowBox[{"z", "-", "2"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[310]:=",ExpressionUUID->"5cd75846-691b-4d73-8aca-9e1491c70eae"],

Cell[BoxData[
 TemplateBox[{
  "Integrate", "idiv", 
   "\"Integral of \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", SuperscriptBox[\\\"\
\[ExponentialE]\\\", RowBox[{\\\"-\\\", \\\"t\\\"}]]}], \\\"+\\\", \
SuperscriptBox[\\\"t\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\"+\\\", \
\\\"z\\\"}]]}]\\) does not converge on \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\
\"0\\\", \\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}]\\).\"", 2, 310, 16, 
   23036982251002784152, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[310]:=",ExpressionUUID->"56d20de7-72f1-47f3-b9ad-5efba512291e"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     RowBox[{"Gamma", "[", "z", "]"}], "+", 
     RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
       RowBox[{
         RowBox[{"(", 
           RowBox[{
             RowBox[{"-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", "t"}]]}], "+", 
             SuperscriptBox["t", 
              RowBox[{
                RowBox[{"-", "1"}], "+", "z"}]]}], ")"}], 
         RowBox[{"\[DifferentialD]", "t"}]}]}]}], 
   RowBox[{
     RowBox[{"Re", "[", "z", "]"}], ">", "1"}]},
  "ConditionalExpression"]], "Output",
 CellLabel->
  "Out[310]=",ExpressionUUID->"ec268519-a476-4be4-85f4-1530c0a27913"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "6"], "-", 
  FractionBox["5", "66"]}]], "Input",
 CellLabel->
  "In[311]:=",ExpressionUUID->"7e8a5835-e206-4623-8261-9777b8b8c283"],

Cell[BoxData[
 FractionBox["1", "11"]], "Output",
 CellLabel->
  "Out[311]=",ExpressionUUID->"c88b7af2-b975-4f81-b8cd-55196293e3e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "x"}], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], "+", 
     RowBox[{"Sin", "[", "x", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1"}], "}"}]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellLabel->
  "In[320]:=",ExpressionUUID->"9596d7ac-d487-4767-b904-c325a3bdf6e3"],

Cell[BoxData[
 RowBox[{"x", " ", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellLabel->
  "Out[320]=",ExpressionUUID->"cd5272bb-7c8e-451f-be0b-fc12e644fc55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Gamma", "[", "z", "]"}], ",", "z"}], "]"}]], "Input",
 CellLabel->
  "In[321]:=",ExpressionUUID->"9b4a6c88-d32f-4553-9bdc-b7f40ecf33d6"],

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   RowBox[{"Gamma", "[", "z", "]"}], 
   RowBox[{"\[DifferentialD]", "z"}]}]}]], "Output",
 CellLabel->
  "Out[321]=",ExpressionUUID->"f48ba2ca-d188-4819-ae71-e50706813c4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "a"}], " ", 
     SuperscriptBox["u", "2"]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[323]:=",ExpressionUUID->"88ca9cfe-2362-4da3-8e20-7941a81014d9"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    SqrtBox["\[Pi]"], 
    RowBox[{"2", " ", 
      SqrtBox["a"]}]], 
   RowBox[{
     RowBox[{"Re", "[", "a", "]"}], ">", "0"}]},
  "ConditionalExpression"]], "Output",
 CellLabel->
  "Out[323]=",ExpressionUUID->"aa2f76ff-9f36-4b47-a748-f60a34bc5679"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"z", "-", "1"}], ")"}], 
      RowBox[{"Log", "[", "t", "]"}]}], "-", "t"}]], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[324]:=",ExpressionUUID->"86dd371d-85e2-4d38-86a8-d1b20e4dde39"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"Gamma", "[", "z", "]"}], 
   RowBox[{
     RowBox[{"Re", "[", "z", "]"}], ">", "0"}]},
  "ConditionalExpression"]], "Output",
 CellLabel->
  "Out[324]=",ExpressionUUID->"8f121505-44b2-4f57-9225-bb01670a20ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"x", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"5", "x"}]]}], ",", "x"}], "]"}]], "Input",
 CellLabel->
  "In[325]:=",ExpressionUUID->"4fafe670-b9f7-4823-81c7-a16f0c08df38"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"5", " ", "x"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "25"]}], "+", 
    FractionBox["x", "5"]}], ")"}]}]], "Output",
 CellLabel->
  "Out[325]=",ExpressionUUID->"57daae23-8684-4d2a-9ef1-29f86a450005"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Gamma", "[", "I", "]"}], "//", "N"}]], "Input",
 CellLabel->
  "In[327]:=",ExpressionUUID->"e140e244-de09-4888-a7b9-fb0f99bc3344"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.15494982830181064`"}], "-", 
  RowBox[{"0.49801566811835657`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellLabel->
  "Out[327]=",ExpressionUUID->"ebbefae4-ec2f-4c3a-9d4a-c684e0cebc9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["t", 
      RowBox[{"z", "-", "1"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}], "/.", 
  RowBox[{"z", ":>", "5"}]}]], "Input",
 CellLabel->
  "In[335]:=",ExpressionUUID->"d7c301ec-d1e4-4de9-9adb-f57aa719c5cf"],

Cell[BoxData["24"], "Output",
 CellLabel->
  "Out[335]=",ExpressionUUID->"79a84c16-fc40-4697-9050-2d6aa22f6fed"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "[", "t_", "]"}], ":=", 
  SuperscriptBox["t", 
   RowBox[{"z", "-", "1"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "[", "t_", "]"}], ":=", "1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "[", "t_", "]"}], ":=", 
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "t"}]]}]}]}], "Input",
 CellLabel->
  "In[363]:=",ExpressionUUID->"64049060-7a39-4660-960e-f48101b2b778"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"u", "[", "t", "]"}], 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"v", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"v", "[", "t", "]"}], 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"u", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], "Input",
 CellLabel->
  "In[373]:=",ExpressionUUID->"083d051a-5c79-4e0a-942c-8d83e1d8c252"],

Cell[BoxData["1"], "Output",
 CellLabel->
  "Out[373]=",ExpressionUUID->"e7247c61-6e0f-461d-9ec8-8a0213f5404d"],

Cell[BoxData["0"], "Output",
 CellLabel->
  "Out[374]=",ExpressionUUID->"17010872-3b2e-4d00-a923-2f79f232ed3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"x", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"5", "x"}]]}], ",", "x"}], "]"}]], "Input",
 CellLabel->
  "In[375]:=",ExpressionUUID->"ded7dbf9-b1e7-4063-92da-40c94c40dfef"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"5", " ", "x"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "25"]}], "+", 
    FractionBox["x", "5"]}], ")"}]}]], "Output",
 CellLabel->
  "Out[375]=",ExpressionUUID->"4949267a-c437-4ca6-ae79-5821fc225c06"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "t"}]], 
    SuperscriptBox["t", 
     RowBox[{"x", "-", "1"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[391]:=",ExpressionUUID->"dccdab2e-6748-43db-b3c7-ad3850268872"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Gamma", "'''"}], "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "t"}]], " ", 
    SuperscriptBox["t", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "x"}]], " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", "t", "]"}], "3"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], "Input",
 CellLabel->
  "In[393]:=",ExpressionUUID->"4d8751b1-39b7-41ae-bd46-381f58372774"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Gamma", "[", "x", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"PolyGamma", "[", 
     RowBox[{"0", ",", "x"}], "]"}], "3"]}], "+", 
  RowBox[{"3", " ", 
   RowBox[{"Gamma", "[", "x", "]"}], " ", 
   RowBox[{"PolyGamma", "[", 
    RowBox[{"0", ",", "x"}], "]"}], " ", 
   RowBox[{"PolyGamma", "[", 
    RowBox[{"1", ",", "x"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"Gamma", "[", "x", "]"}], " ", 
   RowBox[{"PolyGamma", "[", 
    RowBox[{"2", ",", "x"}], "]"}]}]}]], "Output",
 CellLabel->
  "Out[393]=",ExpressionUUID->"ba644b2f-279c-4d5d-b4bc-f02694fffe0c"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"-", 
     FractionBox[
      RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "t"}]], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "t", "]"}], "2"]}], "t"]}], 
   RowBox[{
     RowBox[{"Re", "[", 
       RowBox[{"Log", "[", "t", "]"}], "]"}], "<", "0"}]},
  "ConditionalExpression"]], "Output",
 CellLabel->
  "Out[394]=",ExpressionUUID->"09691b5a-6873-41b1-be51-90e3d8c68154"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"240", "*", ".35"}]], "Input",
 CellLabel->
  "In[377]:=",ExpressionUUID->"25e5cd1a-b9c3-4649-a85c-9b8599fda9dc"],

Cell[BoxData["84.`"], "Output",
 CellLabel->
  "Out[377]=",ExpressionUUID->"73711718-4916-409a-a660-c01dfa8d42ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Gamma", "'"}], "[", "x", "]"}], "==", "1"}], "}"}], ",", "x"}],
   "]"}]], "Input",
 CellLabel->
  "In[379]:=",ExpressionUUID->"779d66d8-30e6-4b1c-b1e1-047e56e96164"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "nsmet", 
   "\"This system cannot be solved with the methods available to Solve.\"", 2,
    379, 28, 23036982251002784152, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"7aea61a5-ffc8-4d53-9a91-2b8e3638753a"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Gamma", "[", "x", "]"}], " ", 
      RowBox[{"PolyGamma", "[", 
       RowBox[{"0", ",", "x"}], "]"}]}], "\[Equal]", "1"}], "}"}], ",", "x"}],
   "]"}]], "Output",
 CellLabel->
  "Out[379]=",ExpressionUUID->"edbea09b-eb90-4030-bc5b-770513ecf7f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "y_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"x", " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], ",", "x"}], "]"}], "/.", 
   RowBox[{"x", ":>", "y"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "\[Pi]", "]"}], "-", 
  RowBox[{"f", "[", "0", "]"}]}]}], "Input",
 CellLabel->
  "In[387]:=",ExpressionUUID->"7bd96b07-665b-4bbc-80ab-5b15046b702a"],

Cell[BoxData[
 RowBox[{"-", "2"}]], "Output",
 CellLabel->
  "Out[388]=",ExpressionUUID->"4c71b703-0ce3-4160-99f3-cb3474d3e874"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"x", " ", 
    RowBox[{"Cos", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[389]:=",ExpressionUUID->"ec0cbcdb-27fd-4e2c-a2ea-549432a98043"],

Cell[BoxData[
 RowBox[{"-", "2"}]], "Output",
 CellLabel->
  "Out[389]=",ExpressionUUID->"a0e40d86-4a00-4e2c-acd1-632edd0e3c66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Residue", "[", 
    RowBox[{
     RowBox[{"Gamma", "[", "z", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "k"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[400]:=",ExpressionUUID->"01e1cf50-f174-4cda-92e9-19ad6568fd17"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   FractionBox["1", "2"], ",", 
   RowBox[{"-", 
    FractionBox["1", "6"]}], ",", 
   FractionBox["1", "24"], ",", 
   RowBox[{"-", 
    FractionBox["1", "120"]}], ",", 
   FractionBox["1", "720"], ",", 
   RowBox[{"-", 
    FractionBox["1", "5040"]}]}], "}"}]], "Output",
 CellLabel->
  "Out[400]=",ExpressionUUID->"4229e90f-a56a-4ad6-80eb-328419d6e5cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    RowBox[{"Gamma", "[", "z", "]"}], 
    RowBox[{"Gamma", "[", 
     RowBox[{"1", "-", "z"}], "]"}]}]], "//", "FullSimplify"}]], "Input",
 CellLabel->
  "In[402]:=",ExpressionUUID->"9f417635-745d-48c9-8b60-780950ad399e"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Sin", "[", 
   RowBox[{"\[Pi]", " ", "z"}], "]"}], "\[Pi]"]], "Output",
 CellLabel->
  "Out[402]=",ExpressionUUID->"6ec8ed15-2647-4453-9ba8-37ab8df89b05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", " ", "z"}], "]"}], "\[Pi]"], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[404]:=",ExpressionUUID->"3ea92ef2-07c4-425b-a5df-cbf7cb897058"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"z", "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Pi]", "2"], " ", 
     SuperscriptBox["z", "3"]}], "6"], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Pi]", "4"], " ", 
     SuperscriptBox["z", "5"]}], "120"], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Pi]", "6"], " ", 
     SuperscriptBox["z", "7"]}], "5040"], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Pi]", "8"], " ", 
     SuperscriptBox["z", "9"]}], "362880"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "z", "]"}], "10"],
    SeriesData[$CellContext`z, 0, {}, 1, 10, 1],
    Editable->False]}],
  SeriesData[$CellContext`z, 0, {
   1, 0, Rational[-1, 6] Pi^2, 0, Rational[1, 120] Pi^4, 0, 
    Rational[-1, 5040] Pi^6, 0, Rational[1, 362880] Pi^8}, 1, 10, 1],
  Editable->False]], "Output",
 CellLabel->
  "Out[404]=",ExpressionUUID->"4ab4762b-2733-4d92-b535-85b02ee76f46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Zeta", "[", "2", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Denominator", "[", 
  RowBox[{"Zeta", "[", "6", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"5040", "/", "945"}]}], "Input",
 CellLabel->
  "In[432]:=",ExpressionUUID->"85471d26-a5f2-438a-b931-18f957d9a35a"],

Cell[BoxData["945"], "Output",
 CellLabel->
  "Out[433]=",ExpressionUUID->"bc2278de-c9e7-465d-a485-8a5b33d6e934"],

Cell[BoxData[
 FractionBox["16", "3"]], "Output",
 CellLabel->
  "Out[434]=",ExpressionUUID->"388c437b-141a-430c-bc55-be7f8f4e3128"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Zeta", "[", "4", "]"}], "\[IndentingNewLine]", 
 RowBox[{"120", "/", "90"}]}], "Input",
 CellLabel->
  "In[426]:=",ExpressionUUID->"bfd7a74a-858f-43ba-ae2d-9ab276c70321"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[Pi]", "4"], "90"]], "Output",
 CellLabel->
  "Out[426]=",ExpressionUUID->"7183ae8c-a0b2-4af3-b704-f73d62cc03c3"],

Cell[BoxData[
 FractionBox["4", "3"]], "Output",
 CellLabel->
  "Out[427]=",ExpressionUUID->"6b5f7caa-9760-4f9a-b0c3-f3acbfe99da9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Zeta", "[", "8", "]"}], "\[IndentingNewLine]", 
 RowBox[{"362880", "/", "9450"}]}], "Input",
 CellLabel->
  "In[430]:=",ExpressionUUID->"2e911e57-88df-410f-af7a-f8f69a2c0ebe"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[Pi]", "8"], "9450"]], "Output",
 CellLabel->
  "Out[430]=",ExpressionUUID->"97d86518-7a3f-4f5c-b02f-ffc1fae6ec60"],

Cell[BoxData[
 FractionBox["192", "5"]], "Output",
 CellLabel->
  "Out[431]=",ExpressionUUID->"4ee6b835-43d7-4750-be4e-89a32f24e990"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["t", 
     RowBox[{"n", "-", "1"}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "t"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"n", " ", ">", "1"}], " ", "&&", " ", 
     RowBox[{"Element", "[", 
      RowBox[{"n", ",", "Integers"}], "]"}]}]}]}], "]"}]], "Input",
 CellLabel->
  "In[441]:=",ExpressionUUID->"f98355b3-fd4c-424b-a69e-5e5c1f9fe928"],

Cell[BoxData[
 RowBox[{"Gamma", "[", "n", "]"}]], "Output",
 CellLabel->
  "Out[441]=",ExpressionUUID->"8b0d9128-91be-425f-9197-71cffb57bd60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   SuperscriptBox["t", 
    RowBox[{"n", "-", "1"}]], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[444]:=",ExpressionUUID->"28c8c72f-ed22-48a0-957d-065ecaab78c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}], ")"}], " ", 
  SuperscriptBox["t", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "n"}]]}]], "Output",
 CellLabel->
  "Out[444]=",ExpressionUUID->"20993d3c-461b-4735-86d0-7db013b359d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     SuperscriptBox["t", 
      RowBox[{"n", "-", "1"}]], ")"}]}], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "t"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"g", "[", "n", "]"}], "-", 
    RowBox[{"g", "[", "0", "]"}]}], ",", 
   RowBox[{"n", "->", "Infinity"}]}], "]"}]}], "Input",
 CellLabel->
  "In[448]:=",ExpressionUUID->"43423d68-2578-4b06-9d54-3942d507ed8c"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "t"}]], "t"], 
   RowBox[{
     RowBox[{
       RowBox[{"(", 
         RowBox[{
           FractionBox[
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "t"}]], "t"], "|", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "t"}]]}], ")"}], "\[Element]", 
       TemplateBox[{}, "Reals"]}], "&&", 
     RowBox[{
       RowBox[{"Log", "[", "t", "]"}], "<", "0"}]}]},
  "ConditionalExpression"]], "Output",
 CellLabel->
  "Out[449]=",ExpressionUUID->"7b7fc21b-8b8c-4d14-8dae-f6a7e8d6cdd7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["t", 
     RowBox[{"1", "-", "1"}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "t"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["t", 
     RowBox[{"2", "-", "1"}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "t"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["t", 
     RowBox[{"3", "-", "1"}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "t"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["t", 
     RowBox[{"4", "-", "1"}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "t"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], "Input",
 CellLabel->
  "In[463]:=",ExpressionUUID->"c0ab7b56-4d96-47a8-89de-ae17b3e05428"],

Cell[BoxData["1"], "Output",
 CellLabel->
  "Out[463]=",ExpressionUUID->"d23f283c-1b6b-4fcc-8914-2129bd41a8ed"],

Cell[BoxData["1"], "Output",
 CellLabel->
  "Out[464]=",ExpressionUUID->"af919311-dedc-42b8-83e0-1c5bfb1eb703"],

Cell[BoxData["2"], "Output",
 CellLabel->
  "Out[465]=",ExpressionUUID->"e1ae996e-5135-4b91-a5a8-afdd7a4e0cab"],

Cell[BoxData["6"], "Output",
 CellLabel->
  "Out[466]=",ExpressionUUID->"f61329b5-8e1b-4269-8f83-169a2f70c298"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["t", "4"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "t"}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[478]:=",ExpressionUUID->"9a8c3251-e05f-4083-a6e7-1de48a2e198d"],

Cell[BoxData["24"], "Output",
 CellLabel->
  "Out[478]=",ExpressionUUID->"7a6b0099-ed3c-4170-baea-4b65889f53ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "m"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "m"}]]}], "+", "1"}], ")"}], ",", 
   RowBox[{"m", "->", "Infinity"}]}], "]"}]], "Input",
 CellLabel->
  "In[479]:=",ExpressionUUID->"270e24e4-a9b9-4d67-8f5f-8c2b215af650"],

Cell[BoxData["1"], "Output",
 CellLabel->
  "Out[479]=",ExpressionUUID->"63a37529-1cdc-4aa2-94bc-59f1b30ab9a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Product", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", "k", " ", "2", "k"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "k"}], "-", "1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "k"}], "+", "1"}], ")"}]}]], " ", ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[480]:=",ExpressionUUID->"7ab464c1-2bf4-49b0-99cb-082f7c552ce4"],

Cell[BoxData[
 FractionBox["\[Pi]", "2"]], "Output",
 CellLabel->
  "Out[480]=",ExpressionUUID->"3c66d35c-cc20-48e5-9afc-362ea50b7138"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"Gamma", "'"}], "[", "z", "]"}], 
  RowBox[{"Gamma", "[", "z", "]"}]]], "Input",
 CellLabel->
  "In[481]:=",ExpressionUUID->"865d2f04-e2d7-44a1-a103-cedc03faa908"],

Cell[BoxData[
 RowBox[{"PolyGamma", "[", 
  RowBox[{"0", ",", "z"}], "]"}]], "Output",
 CellLabel->
  "Out[481]=",ExpressionUUID->"0952126f-6180-4531-815d-0f1a4bb046ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"PolyGamma", "[", 
    RowBox[{"0", ",", "z"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[487]:=",ExpressionUUID->"fddf72ad-e166-4fab-b381-b64c66edeea4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "z"]}], "-", "EulerGamma", "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Pi]", "2"], " ", "z"}], "6"], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"PolyGamma", "[", 
     RowBox[{"2", ",", "1"}], "]"}], " ", 
    SuperscriptBox["z", "2"]}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Pi]", "4"], " ", 
     SuperscriptBox["z", "3"]}], "90"], "+", 
   RowBox[{
    FractionBox["1", "24"], " ", 
    RowBox[{"PolyGamma", "[", 
     RowBox[{"4", ",", "1"}], "]"}], " ", 
    SuperscriptBox["z", "4"]}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Pi]", "6"], " ", 
     SuperscriptBox["z", "5"]}], "945"], "+", 
   RowBox[{
    FractionBox["1", "720"], " ", 
    RowBox[{"PolyGamma", "[", 
     RowBox[{"6", ",", "1"}], "]"}], " ", 
    SuperscriptBox["z", "6"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "z", "]"}], "7"],
    SeriesData[$CellContext`z, 0, {}, -1, 7, 1],
    Editable->False]}],
  SeriesData[$CellContext`z, 
   0, {-1, -EulerGamma, Rational[1, 6] Pi^2, Rational[1, 2] PolyGamma[2, 1], 
    Rational[1, 90] Pi^4, Rational[1, 24] PolyGamma[4, 1], Rational[1, 945] 
    Pi^6, Rational[1, 720] PolyGamma[6, 1]}, -1, 7, 1],
  Editable->False]], "Output",
 CellLabel->
  "Out[487]=",ExpressionUUID->"2997e2c6-1c4d-422f-874a-4e9564cd3573"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"PolyGamma", "[", 
    RowBox[{"1", ",", "z"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[488]:=",ExpressionUUID->"4bbcb6b6-3263-4d95-8628-86eba7d4aee4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["z", "2"]], "+", 
   FractionBox[
    SuperscriptBox["\[Pi]", "2"], "6"], "+", 
   RowBox[{
    RowBox[{"PolyGamma", "[", 
     RowBox[{"2", ",", "1"}], "]"}], " ", "z"}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Pi]", "4"], " ", 
     SuperscriptBox["z", "2"]}], "30"], "+", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    RowBox[{"PolyGamma", "[", 
     RowBox[{"4", ",", "1"}], "]"}], " ", 
    SuperscriptBox["z", "3"]}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Pi]", "6"], " ", 
     SuperscriptBox["z", "4"]}], "189"], "+", 
   RowBox[{
    FractionBox["1", "120"], " ", 
    RowBox[{"PolyGamma", "[", 
     RowBox[{"6", ",", "1"}], "]"}], " ", 
    SuperscriptBox["z", "5"]}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[Pi]", "8"], " ", 
     SuperscriptBox["z", "6"]}], "1350"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "z", "]"}], "7"],
    SeriesData[$CellContext`z, 0, {}, -2, 7, 1],
    Editable->False]}],
  SeriesData[$CellContext`z, 0, {1, 0, Rational[1, 6] Pi^2, 
    PolyGamma[2, 1], Rational[1, 30] Pi^4, Rational[1, 6] PolyGamma[4, 1], 
    Rational[1, 189] Pi^6, Rational[1, 120] PolyGamma[6, 1], 
    Rational[1, 1350] Pi^8}, -2, 7, 1],
  Editable->False]], "Output",
 CellLabel->
  "Out[488]=",ExpressionUUID->"4175c346-8e76-46c1-af5a-472bc95f4846"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Gamma", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[491]:=",ExpressionUUID->"226c22b6-05bb-47d0-af7a-9cfffb28c3f5"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
4xYJqba6jXJVdDRboeCvlkCCTrVRJ6WMjgOefa4Tj0hAk10/povp6GLpNxiT
RUKrtvvs/hw6en9LPSZdRoI715fZlknH6GvPBodrSBhfdE2xlkvHT06Vi6MF
JMjRUtYU3qNju6l86sJpEh4GZhpm36EjQ1N1gbho3rTH35pyI+m4723chC2L
BxY99fa3guiomf0xd6kqD5rtu1yuX6bjP8ddifuaPHCrGT550ZeO01pPHc/r
8uBqMS346HE6li84FbB3Ow9k9BSj9x+lo80yqfn2NjxIydC4v8uRjuMZThYl
jjwoiDd6ZbCbjpdPUx8X+vJgzMdXwNhAR0rCz9ZzGTwIs4jucl9Pxw6NkIDs
NzxYqv68t3wNHf0NXfeYlfPAtqF3MHApHV9Xhdtf6+LBa33bv/8x6Pg1ebGJ
mwofrOaeEnIIOmY5TN+P0uZDf3/4zHNxOp6NS01VEumJ0r2Pku5/aOjTMpW8
9wgfLk3pyrQJaBhSKDFwO4MPcg1W8za00FDMbWqyp5gPmVkeCnfrafjh43jc
o1qRfjk+VuZ8pmHink9pR4R8YJfIapXl0FB6UElHeXcNSNwYNcm6TsO5zyX1
2uRFeuvINKMF0nB007t/I9fWwnp9zR1uF2lIuNPCyyxqwaX/kJXaCRq6ZGkp
VV0V6bE5/0DsPhoGhnjF+07WgtPSH45ju2n42GKR3G2lOvgrJI5YWdLw7obb
H7YY1oFmFvsY1YSG24dv51++WAfh0i/O+K2k4ddwd79IyXrQ6K8816JBwyHO
ueSCFfVQ9P7bRX1VGhbN8tdJsKyH4VOLr4zOo2H1d0rqadF7w6mPiHCZoaKC
as8r5oYGkE/w5FrWULHkBG3c/1EjFDkNDK2toqLOTkep8qZGOLrMVX9eGRX7
hU/N17Ka4NUrp08tb6jI+aS/INy/CazJ3d/dHlBxu/M5BSPvLzB+h7fO4h4V
Oz4nOflnfYGUAzsvrblDxa7I7w1Lhr7Az/6tjN/BVAy2EyiWn26GMAnDNUEn
qPgq2v3Ho9stoFuZ5+viTsWQva76m9taoOXWOlFuKtq2R5jFa7WC5uJV1tJ2
VJwlH6pWUdkK5QYqPklARULl7+e0JW3gJZb0LsCAiueibEs6/NpAvlxRwnkd
FaXaTVP2t7aBs43sHc1lVLR5VGrJud8O4t5z8vOZVCynmadZpQjg6fqgmQSC
ihtpETJSTQKwFs6Y+YlT8VFvtNr6uR2QcvNv05bfFIwu5quuCe6ATY8HJ/hf
KejJlR41DumEbvdjJrmNFNyYWVCzn+yEsLW9oXf5FDx+xFfOQ74LmovaFzp+
pGBCTmVZ1dMuOPelZvNgBgXdd87MlhrqBpWUXTfINAoGq7Pjj2ztgXKXKjI7
hYLd3bQGv5QekP/10el8DAUzDGN1Tzr0QtFb4ycHIihoeeqhQTj2wtHA4hEI
puCbKsfJEY1v8Ir55sqcSxScKBDc15/+Bgfq11f2n6EgN2TJw1PefTA7MVu2
2puCPqHp8mndfcBZkfE4+ggF559bJlbV0g9DJsllKuYU3JcgKHgxexAeemhK
eZhSUKfWyXs6ahBs7uSa5YMIXz93c+SSH/C6t7Jipy4Ffww02aTt+wnurL2U
+NUUrH537wtv6ics1O/c3r2cgm+rs6nB6UMQcHP884VFFDwhPNsWd3MYdLKD
aGXzKbh7k/zGmf5h6G5mWsyVoWBxj4NkmOUIbFupXs2dI8LPuG/SUh+FCZsX
jDExCq6+uK6sMW4UMi5vsNw8SWBRImVPO2sMpElrsm6IwLjXuSU35v6Ckj+t
LJUBAlUbDz6RSPwFp1XcrI53Ezgp7kCJW/UfNJ3048/6IoofGDls4PYbQhIo
MjtrCVxSfis9QuYPbPwQw7lbTeBmtZfmwWV/IEXuWe3qEgIrJjiGPMu/wNmk
J3ehgECF2YHb5NQnQMLlvc3HPAKddBrODhOTkBdhcUf6JYEJTrpRuZOT4Jbf
WG//jEAjjuymjmkhKAkOy3NTCcyOelaoLjcNVcRP29FkAse54eY+m2ZAe79E
U3AMgYUq2wU5A2LsziuRCnURBN51d6VXP57FjnmmtG/xTQLlxqpabnqJs7fW
pca7BxEo6VIq92v7bPa4ULs597IIb/zB8LSBBPupeoHSrHME1saflusDSfYB
SzN7i1MEmtR2Dxc7zWEzfWvuxXkQ6Dwpu0w9RYqNyQ6tnS6ieA7r6KrZFPap
ir6Fqw8RqK8SIKMSRWUvHfFxOG9PYLD11mf1lnR2g+JMUukeAt2SVDQ3bWey
g41D2lhWBO5W3cVmbJVmGx6ft9h+B4E6L6ecmDFz2YPRKY5pWwgMynodVKwo
y75foJUyspnAkdwu6tZeObZ1T55gowGBYS/tA/jM+WwJprFq8DoCByn6CWMv
Fdl5etWHalcRWBMvW+47tZDt5mj3UHk5gcmtzRfuJaqwtQo8WnOWEv//P/0f
VP4uQg==
       "]], LineBox[CompressedData["
1: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
5F8M/BIQq/kmnYk5esMKaa5MDN76w+3VTSb268oPGNxlotIyk5T8RCZ2aEwZ
svqZ6NA7LJ91jolTcglp98NZyC233XrnLBMdGZqcF3UsjL13/2JKKBOtZ8vL
fDXZWL7HhYg7wsRbWVEVNiIeeP753CzmABOliEBfFPGSoTrn1Bkvkf0I4fFD
0QSu+4SCACcm7h4d3a1mS+ITW52eXaZMnKxYJ/xT1I/aLo74w2EtE1cYVuo1
ivrUXs4X982rmNhZTM13mxb1dWWXW4wXMZHv8zApREIcIb1PYbUmE42EThHF
N8XR9ZTlNj01JpoKpx2slkvgDaOx/zRkmPipNuN012FJNFDaxlEVZ+L77nrL
XhUpbBh9aDGXzUQbpVsz82qlUCp3Twk5xkBuGKnpZi+N2ZcKx2Z4DHQ0kbeo
VpfBjX/LGwj7GRi/0ahYRSiD4QsqHvV3MDC2zK7nSK8sqrM1+rpaGNj32nvh
Y185LP4avKC9gYErPCwl9vLk0Pn1x71NNQw0NCGdDMLlUfDPslt1FQwMsHSw
/qE8F68Gn/tciQwsmDZ9u6FkLq5w+qZUVszANudu3c2+Cvi3/PXLL54wsDk2
enHaT0WkeIPVj7MYOOWTviCmWAkzaq3FHtxl4HRqSrXDrXlonnPX6nYqA/Pe
jqU1JCpjx/mp8JtJDLSwurJJN00FQ/fvKr2awMAJrYINra9UUdkqb/xirAhL
t2S9EahhgaaEYXQUA02l+EZutup4YCRx+dRZxv/PS/8DKOjlcw==
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
mi0mH+mVrP7/f/df+ts3OQ==
       "]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$437503#1"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-5, 4}, {-7.477406371424416, 9.150043554754532}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[491]=",ExpressionUUID->"e514af60-d55c-4a6b-b6c7-70a230697419"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"Residue", "[", 
       RowBox[{
        RowBox[{"Gamma", "[", "z", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", 
          RowBox[{"-", "k"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "7"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellLabel->
  "In[501]:=",ExpressionUUID->"40bde131-f95f-46e2-bc4e-9b243d4e075c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", 
     RowBox[{"-", "1"}]},
    {"2", 
     FractionBox["1", "2"]},
    {"3", 
     RowBox[{"-", 
      FractionBox["1", "6"]}]},
    {"4", 
     FractionBox["1", "24"]},
    {"5", 
     RowBox[{"-", 
      FractionBox["1", "120"]}]},
    {"6", 
     FractionBox["1", "720"]},
    {"7", 
     RowBox[{"-", 
      FractionBox["1", "5040"]}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[501]//TableForm=",ExpressionUUID->"16ebe500-3242-436c-992a-\
401753a84df6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "n_", "]"}], ":=", 
  RowBox[{"Product", "[", 
   RowBox[{
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        FractionBox["1", "k"]}], ")"}], "n"], 
     RowBox[{"1", "+", 
      FractionBox["n", "k"]}]], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[505]:=",ExpressionUUID->"01a5c0ad-3bec-48e4-a270-e47b2bd79e28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "[", "4", "]"}]], "Input",
 CellLabel->
  "In[507]:=",ExpressionUUID->"eeb3da70-fbe1-431e-b889-96ecb94ee51d"],

Cell[BoxData["24"], "Output",
 CellLabel->
  "Out[507]=",ExpressionUUID->"7843c3f3-18a8-4b46-9580-9436cbead7b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["\[Pi]", "2"], "6"], "//", "N"}]], "Input",
 CellLabel->
  "In[509]:=",ExpressionUUID->"b52a10c0-b23a-4831-b07f-1434f6774508"],

Cell[BoxData["1.6449340668482262`"], "Output",
 CellLabel->
  "Out[509]=",ExpressionUUID->"ae16ba4b-a608-44c9-8a02-86d5cf56cfd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["x", "2"]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[510]:=",ExpressionUUID->"68b0b153-8cb4-4a88-a15f-b5654ecfbebc"],

Cell[BoxData["1"], "Output",
 CellLabel->
  "Out[510]=",ExpressionUUID->"40d484b6-b044-4aed-8144-ac343581dac3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["k", "2"]], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "Infinity"}], "}"}]}], "]"}], "//", 
  "N"}]], "Input",
 CellLabel->
  "In[511]:=",ExpressionUUID->"aa2364c5-936e-4ca5-b1a4-8327d1d54ce7"],

Cell[BoxData["1.6449340668482262`"], "Output",
 CellLabel->
  "Out[511]=",ExpressionUUID->"a9d6e4b4-1653-4132-a730-d6c1c03f26cb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["*Table of Arithmetical Functions ( -under construction- )", "Section",
 CellChangeTimes->{{3.7971443454340277`*^9, 3.7971443807461643`*^9}, {
  3.797237164033742*^9, 
  3.797237184536951*^9}},ExpressionUUID->"4a28bc01-1314-4d89-86b1-\
d25783421b8d"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Definition",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.7826654768540397`*^9, 3.782665485158893*^9}, 
   3.782715887476343*^9, {3.782716848474037*^9, 3.782716871121205*^9}, {
   3.7827173361574907`*^9, 3.7827173415799327`*^9}, {3.7828031783556767`*^9, 
   3.78280318145585*^9}, {3.7828034538688183`*^9, 3.7828034574366493`*^9}, {
   3.7833530768548527`*^9, 3.7833530903994584`*^9}, {3.783358080038978*^9, 
   3.7833580879180937`*^9}, {3.7853375280890074`*^9, 
   3.7853375294890585`*^9}, {3.7853377669291077`*^9, 3.785337780886693*^9}, {
   3.785589310595995*^9, 3.785589311435477*^9}},
 FontColor->GrayLevel[
  0],ExpressionUUID->"ae085fba-bac2-41a1-b588-c3ceca0da615"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Table",
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.5019607843137255, 0.5019607843137255, 
   0.5019607843137255]]], "Subsubsection",
 CellChangeTimes->{{3.7828068396307926`*^9, 3.782806841526989*^9}, {
  3.7979508055149355`*^9, 
  3.7979508261551304`*^9}},ExpressionUUID->"0737d7a8-f14f-4786-b6fc-\
075c458198cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*Cell[\"I\",ExpressionUUID->\"77878252-9a1d-4b58-b066-\
202a47535308\"]\)\>\"", ",", "\"\<-\>\"", ",", "\"\<Floor[1/n]\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<CM\>\"", ",", "\"\<I\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<1\>\"", ",", "\"\<1\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<1\>\"", ",", "\"\<-\>\"", ",", "\"\<1\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<CM\>\"", ",", "\"\<\[Mu]\>\"", ",", "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{"1", ",", "n", ",", "s"}], "]"}], "//", "TraditionalForm"}], 
       ",", "\"\<1/(1-x)\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<N\>\"", ",", "\"\<-\>\"", ",", "\"\<n\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<CM\>\"", ",", "\"\<\[Mu]N\>\"", ",", "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{"n", ",", "n", ",", "s"}], "]"}], "//", "TraditionalForm"}], 
       ",", "\"\<1/(1-px)\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[\(N\), \(a\)]\)\>\"", ",", 
       "\"\<a\[GreaterSlantEqual]0\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(n\), \(a\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(a\)]\)*\[Mu] ; \
\!\(\*SubscriptBox[\(J\), \(a\)]\)*1\>\"", ",", "\"\<CM\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(\[Mu]N\), \(a\)]\)\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(x\), \(a + \
1\)]\)/(a+1)+O(\!\(\*SuperscriptBox[\(x\), \(a\)]\))\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          SuperscriptBox["n", "a"], ",", "n", ",", "s"}], "]"}], "//", 
        "TraditionalForm"}], ",", 
       "\"\<1/(1-\!\(\*SuperscriptBox[\(p\), \(a\)]\)x)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Mu]\>\"", ",", "\"\<Sum of primitive\\nn-th roots of unity\>\"", 
       ",", "\"\<MoebiusMu[n]\>\"", ",", "\"\<-\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<1\>\"", ",", "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"MoebiusMu", "[", "n", "]"}], ",", "n", ",", "s"}], "]"}], "//",
         "TraditionalForm"}], ",", "\"\<1-x\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[Mu]\), \(k\)]\)\>\"", ",", 
       "\"\<M\[ODoubleDot]bius function of order k\>\"", ",", 
       "\"\<nMoebiusMu[k,n]\>\"", ",", "\"\<-\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Phi]\>\"", ",", "\"\<Euler Totient function\>\"", ",", 
       "\"\<EulerPhi[n]\>\"", ",", "\"\<\[Mu]*N\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\[Mu]N*1\>\"", ",", 
       "\"\<3/\!\(\*SuperscriptBox[\(\[Pi]\), \(2\)]\) \
\!\(\*SuperscriptBox[\(x\), \(2\)]\) + O(x Log[x])\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"EulerPhi", "[", "n", "]"}], ",", "n", ",", "s"}], "]"}], "//",
         "TraditionalForm"}], ",", "\"\<(1-x)/(1-px)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(J\), \(k\)]\)\>\"", ",", 
       "\"\<Jordan Totient function\>\"", ",", "\"\<nJordanTotient[k,n]\>\"", 
       ",", "\"\<\[Mu]*\!\(\*SuperscriptBox[\(N\), \(k\)]\) ; \
\!\(\*SubscriptBox[\(\[Sigma]\), \(k\)]\)*\[Mu]*\[Mu]\>\"", ",", "\"\<M\>\"", 
       ",", "\"\<\!\(\*SuperscriptBox[\(\[Mu]N\), \(k\)]\)*1\>\"", ",", 
       "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"DirichletConvolve", "[", 
           RowBox[{
            SuperscriptBox["j", "k"], ",", 
            RowBox[{"MoebiusMu", "[", "j", "]"}], ",", "j", ",", "n"}], "]"}],
           ",", "n", ",", "s"}], "]"}], "//", "TraditionalForm"}], ",", 
       "\"\<(\!\(\*SuperscriptBox[\(p\), \(k\)]\)-1)/(1-\!\(\*SuperscriptBox[\
\(p\), \(k\)]\)x)\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Tau]\>\"", ",", "\"\<-\>\"", ",", "\"\<DivisorSigma[0,n]\>\"", 
       ",", "\"\<1*1\>\"", ",", "\"\<M\>\"", ",", "\"\<\[Mu]*\[Mu]\>\"", ",", 
       "\"\<x Log[x]+(2\[Gamma]-1)x+O(\!\(\*SqrtBox[\(x\)]\))\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"DivisorSigma", "[", 
           RowBox[{"0", ",", "n"}], "]"}], ",", "n", ",", "s"}], "]"}], "//", 
        "TraditionalForm"}], ",", 
       "\"\<1/(1-x\!\(\*SuperscriptBox[\()\), \(2\)]\)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[\(\[Tau]\), \((k)\)]\)\>\"", ",", 
       "\"\<The number of ways of expressing n\\nas a product of k positive \
factors\>\"", ",", "\"\<nDirichletPower\\n[DivisorSigma[0,#]&,k][n]\>\"", 
       ",", "\"\<\!\(\*SuperscriptBox[\(1\), \((k + 1)\)]\)\>\"", ",", 
       "\"\<M\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \((k + 1)\)]\)\>\"", ",", 
       "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Sigma]\>\"", ",", "\"\<-\>\"", ",", "\"\<DivisorSigma[1,n]\>\"", 
       ",", "\"\<N*1 ; \[Sigma]=\[Phi]*\[Tau]\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\[Mu]*\[Mu]N\>\"", ",", 
       "\"\<\[Zeta](2)/2 \!\(\*SuperscriptBox[\(x\), \(2\)]\)+O(x \
Log[x])\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"DivisorSigma", "[", 
           RowBox[{"1", ",", "n"}], "]"}], ",", "n", ",", "s"}], "]"}], "//", 
        "TraditionalForm"}], ",", "\"\<1/((1-px)(1-x))\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(a\)]\)\>\"", ",", 
       "\"\<a\[GreaterEqual]2\>\"", ",", "\"\<DivisorSigma[a,n]\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(N\), \(a\)]\)*1 ; \!\(\*SubscriptBox[\(\
\[Sigma]\), \(1\)]\)=\[Phi]*\[Tau]\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\[Mu]*\!\(\*SuperscriptBox[\(\[Mu]N\), \(a\)]\)\>\"", ",", 
       "\"\<\[Zeta](a+1)/(a+1)\!\(\*SuperscriptBox[\(x\), \(a + 1\)]\)+O(\!\(\
\*SuperscriptBox[\(x\), \(a\)]\))\>\"", ",", 
       "\"\<\!\(\*TagBox[FormBox[RowBox[{TemplateBox[{
RowBox[{\"s\", \"-\", \"a\"}]},\"Zeta\"], \" \", \
TemplateBox[{\"s\"},\"Zeta\"]}],TraditionalForm],TraditionalForm,Editable->\
True]\)\>\"", ",", 
       "\"\<1/((1-\!\(\*SuperscriptBox[\(p\), \(a\)]\)x)(1-x))\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(GCD\), \(k\)]\)\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<GCD[k,n]\>\"", ",", "\"\<-\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Mu]GCD\), \(k\)]\)\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Gamma]\>\"", ",", "\"\<Core\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<M\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<(1-(1-p)x)/(1-x)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Lambda]\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<LiouvilleLambda[n]\\n(-1\!\(\*SuperscriptBox[\()\), \
\(PrimeOmega[n]\)]\)\>\"", ",", "\"\<-\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \(2\)]\) ; |\[Mu]|\>\"", ",", 
       "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"LiouvilleLambda", "[", "n", "]"}], ",", "n", ",", "s"}], 
         "]"}], "//", "TraditionalForm"}], ",", "\"\<1/(1+x)\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \(2\)]\)\>\"", ",", 
       "\"\<1 if squarefree, 0 otherwise\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<M\>\"", ",", "\"\<\[Lambda]\>\"", ",", 
       "\"\<?\>\"", ",", "\"\<\[Zeta](s)/\[Zeta](2s)\>\"", ",", 
       "\"\<1+x\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Lambda]*1\>\"", ",", "\"\<1 if square, 0 otherwise\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<-\>\"", ",", "\"\<M\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \(2\)]\)*\[Mu]\>\"", ",", 
       "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[\(\[Mu]\), \(2\)]\)*1\>\"", ",", 
       "\"\<Number of square-free divisors\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(2\), \(PrimeNu[n]\)]\)\>\"", ",", 
       "\"\<|\[Mu]|*1\>\"", ",", "\"\<M\>\"", ",", "\"\<\[Lambda]*\[Mu]\>\"", 
       ",", "\"\<?\>\"", ",", 
       RowBox[{
        RowBox[{"DirichletTransform", "[", 
         RowBox[{
          RowBox[{"DirichletConvolve", "[", 
           RowBox[{"1", ",", 
            RowBox[{"Abs", "[", 
             RowBox[{"MoebiusMu", "[", "j", "]"}], "]"}], ",", "j", ",", 
            "n"}], "]"}], ",", "n", ",", "s"}], "]"}], "//", 
        "TraditionalForm"}], ",", "\"\<(1+x)/(1-x)\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<a\>\"", ",", "\"\<Number of abelian groups\>\"", ",", 
       "\"\<FiniteAbelianGroupCount[n]\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<M\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(k\)]\)\>\"", ",", 
       "\"\<Euler Totient function of order k\>\"", ",", 
       "\"\<nEulerPhi[k,n]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(Faulhaber\), \
\(k\)]\)*\!\(\*SuperscriptBox[\(\[Mu]N\), \(k\)]\)\>\"", ",", "\"\<-\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", 
       "\"\<?\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Nu]\>\"", ",", "\"\<-\>\"", ",", "\"\<PrimeNu[n]\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<A\>\"", ",", "\"\<None\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[CapitalOmega]\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<PrimeOmega[n]\>\"", ",", "\"\<-\>\"", ",", "\"\<CA\>\"", ",", 
       "\"\<None\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[CapitalLambda]\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<MangoldtLambda[n]\>\"", ",", "\"\<-\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<None\>\"", ",", "\"\<?\>\"", ",", 
       "\"\<-\[Zeta]'(s)/\[Zeta](s)\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<L\>\"", ",", "\"\<-\>\"", ",", "\"\<Log[n]\>\"", ",", 
       "\"\<\[CapitalLambda]*1\>\"", ",", "\"\<CA\>\"", ",", "\"\<None\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Nu]*\[Mu]\>\"", ",", "\"\<1 if prime, 0 otherwise\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<-\>\"", ",", "\"\<?\>\"", ",", "\"\<None\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<?\>\"", ",", "\"\<1 if k-th-powerfree, 0 otherwise\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<-\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<\[Zeta](s)/\[Zeta](ks)\>\"", ",", 
       "\"\<?\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<?\>\"", ",", "\"\<Von Sterneck function\>\"", ",", "\"\<-\>\"", 
       ",", "\"\<-\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"",
        ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<?\>\"", ",", "\"\<Lehmer Divisor function\>\"", ",", "\"\<-\>\"", 
       ",", "\"\<-\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"",
        ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<?\>\"", ",", "\"\<Ramanujan sum\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<-\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\"", ",", "\"\<?\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(M\), \(k\)]\)\>\"", ",", 
       "\"\<Lehmer Inverse\>\"", ",", "\"\<-\>\"", ",", "\"\<-\>\"", ",", 
       "\"\<M\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<S\>\"", ",", 
       "\"\<Number of divisors of \!\(\*SuperscriptBox[\(n\), \(2\)]\)\>\"", 
       ",", "\"\<-\>\"", ",", 
       "\"\<1*\!\(\*SuperscriptBox[\(2\), \(PrimeNu\)]\)\>\"", ",", 
       "\"\<M\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", ",", "\"\<?\>\"", 
       ",", "\"\<?\>\""}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<ARF\>\"", ",", "\"\<Remark\>\"", ",", " ", "\"\<Mathematica\>\"", 
        ",", "\"\<Alt. Def.\>\"", ",", "\"\<(C)M/A/-\>\"", ",", 
        "\"\<Inverse\>\"", ",", 
        "\"\<Asymptotic \!\(\*UnderscriptBox[\(\[Sum]\), \(n \
\[LessSlantEqual] x\)]\)\>\"", ",", " ", "\"\<Dirichlet Series\>\"", ",", 
        " ", "\"\<Bell Series\>\""}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7972367655373945`*^9, 3.797236884803892*^9}, {
   3.797236970117671*^9, 3.7972370049302177`*^9}, {3.797237037066684*^9, 
   3.797237040523458*^9}, {3.797237072980253*^9, 3.7972371450179987`*^9}, {
   3.797237210675645*^9, 3.797237284144663*^9}, {3.7972378562419376`*^9, 
   3.7972379472652473`*^9}, {3.7972379903724394`*^9, 3.797238017913464*^9}, {
   3.7972380531228695`*^9, 3.7972381171997576`*^9}, {3.797238183322748*^9, 
   3.7972382285513644`*^9}, 3.797238356823968*^9, {3.7972383969222074`*^9, 
   3.7972384030612307`*^9}, 3.797238458764307*^9, {3.797238598255804*^9, 
   3.7972386293702965`*^9}, {3.7972387374107122`*^9, 3.797238754921446*^9}, {
   3.7972389178876357`*^9, 3.797238949423573*^9}, {3.797239060577543*^9, 
   3.7972390609339514`*^9}, {3.7972390979742804`*^9, 3.797239122901398*^9}, 
   3.7972391788704824`*^9, {3.797242734660542*^9, 3.797242779289898*^9}, {
   3.797323991593075*^9, 3.797324131251282*^9}, {3.797324252907699*^9, 
   3.797324255809094*^9}, {3.7973242888115635`*^9, 3.7973242922008677`*^9}, {
   3.797324573056706*^9, 3.797324573462454*^9}, {3.797327727746457*^9, 
   3.79732783940443*^9}, {3.7973278971165967`*^9, 3.7973279717548532`*^9}, {
   3.797328113339966*^9, 3.7973282567672048`*^9}, {3.797328490029185*^9, 
   3.7973284909894905`*^9}, {3.7973285234672165`*^9, 
   3.7973285777076435`*^9}, {3.7973292156547227`*^9, 
   3.7973292524828587`*^9}, {3.7973293559723253`*^9, 3.797329356617699*^9}, {
   3.797329413107662*^9, 3.797329457592304*^9}, {3.7973295400368423`*^9, 
   3.797329540408251*^9}, {3.7973295735138516`*^9, 3.797329665908766*^9}, {
   3.7973297044323797`*^9, 3.797329720429721*^9}, {3.797329751068718*^9, 
   3.7973297539246745`*^9}, {3.7973297977087297`*^9, 
   3.7973299356867294`*^9}, {3.797330035978756*^9, 3.7973301211516714`*^9}, {
   3.7973303470779085`*^9, 3.7973303675405397`*^9}, {3.797330522302568*^9, 
   3.797330539811192*^9}, {3.7973321056111946`*^9, 3.7973321094799967`*^9}, 
   3.797332281006474*^9, {3.797332347814085*^9, 3.7973325129633102`*^9}, {
   3.7973348040823927`*^9, 3.7973348093500853`*^9}, {3.7973416926729665`*^9, 
   3.797341767228052*^9}, {3.797343372346616*^9, 3.7973434264144735`*^9}, {
   3.797406466857822*^9, 3.797406508471693*^9}, {3.797575956435258*^9, 
   3.797575995455349*^9}, {3.7975767506637173`*^9, 3.79757676868353*^9}, {
   3.79757886912611*^9, 3.797578919530611*^9}, {3.7975789686225386`*^9, 
   3.797578968922269*^9}, {3.7975797053214827`*^9, 3.797579716749736*^9}, {
   3.7975824827606363`*^9, 3.79758248371721*^9}, {3.7975829924337406`*^9, 
   3.79758299654786*^9}, {3.7975830554248776`*^9, 3.797583056045585*^9}, {
   3.7975848986971245`*^9, 3.797584903752351*^9}, {3.7975883843324237`*^9, 
   3.7975883919303493`*^9}, {3.7976569429783444`*^9, 
   3.7976570042996683`*^9}, {3.797657165388465*^9, 3.7976572258337955`*^9}, {
   3.797657285619481*^9, 3.7976572911691465`*^9}, {3.797657556408805*^9, 
   3.7976575744632664`*^9}, {3.7976576086390066`*^9, 3.797657686651658*^9}, {
   3.7977520465798955`*^9, 3.797752050296607*^9}, {3.7980153847742295`*^9, 
   3.7980155257197857`*^9}, {3.798015592061627*^9, 3.7980157048176703`*^9}, {
   3.798015751586655*^9, 3.7980157526250114`*^9}, {3.7980164618869767`*^9, 
   3.7980164665850677`*^9}, {3.798016642195405*^9, 3.7980166607419014`*^9}, {
   3.7984624816202517`*^9, 3.7984624981609917`*^9}, {3.7984626148795795`*^9, 
   3.7984626355907288`*^9}, {3.7993834908450165`*^9, 3.7993835000575457`*^9}, 
   3.7993836064999237`*^9, {3.7993836368872895`*^9, 3.799383637349717*^9}, {
   3.7994055436381555`*^9, 3.799405550404771*^9}, {3.7994055909409084`*^9, 
   3.799405662995284*^9}, {3.7994062368248634`*^9, 3.799406238557459*^9}, {
   3.7994063057432985`*^9, 3.799406318116599*^9}, {3.7994066727568*^9, 
   3.7994066730179186`*^9}, {3.7994067086889353`*^9, 3.799406731263775*^9}, {
   3.7994068161621804`*^9, 3.7994068279988422`*^9}, {3.7994068891478405`*^9, 
   3.7994068922308016`*^9}, {3.7994070560638123`*^9, 3.7994070929481*^9}, {
   3.7994795609054623`*^9, 3.7994795790061803`*^9}, {3.7994796729366817`*^9, 
   3.7994796730367975`*^9}, {3.799482093396386*^9, 3.799482123927994*^9}, 
   3.79948249014421*^9, {3.79948286612393*^9, 3.799482891886905*^9}, {
   3.7994829360811777`*^9, 3.7994829382940946`*^9}, {3.7994830094967427`*^9, 
   3.7994830556177883`*^9}, {3.7995691354180326`*^9, 3.799569142041932*^9}, 
   3.7995692083548827`*^9, {3.799572736566614*^9, 3.799572744953421*^9}, {
   3.7996445855010777`*^9, 3.7996447289313045`*^9}, {3.7996448244601808`*^9, 
   3.7996448298488455`*^9}, {3.7996448945937757`*^9, 
   3.7996449039200068`*^9}, {3.7996449537051888`*^9, 
   3.7996450359523706`*^9}, {3.7996472555331087`*^9, 
   3.7996472609200754`*^9}, {3.799653647000885*^9, 3.7996536516070356`*^9}, 
   3.799654136779707*^9, 3.7996541713263226`*^9, {3.79965420645058*^9, 
   3.799654264343746*^9}, {3.799655275614562*^9, 3.7996552804695573`*^9}, {
   3.799655326542037*^9, 3.799655331052244*^9}, {3.7996553692146206`*^9, 
   3.7996554076068554`*^9}, {3.7996554989413185`*^9, 3.7996555023632*^9}, {
   3.79965790230407*^9, 3.7996579079762697`*^9}, {3.7996579582074385`*^9, 
   3.7996579641461997`*^9}, {3.7996580055364485`*^9, 
   3.7996580116005154`*^9}, {3.799658075090721*^9, 3.7996580828340993`*^9}, {
   3.799666154008635*^9, 3.799666194167477*^9}, {3.799666237744564*^9, 
   3.7996662743828087`*^9}, {3.799759330692809*^9, 3.7997594220600576`*^9}, {
   3.79977808521562*^9, 3.7997781370135546`*^9}, {3.799812072557211*^9, 
   3.7998120730569*^9}, 3.7998297904328756`*^9, {3.7998440733226166`*^9, 
   3.7998440775979714`*^9}, {3.8008639471437216`*^9, 
   3.8008640554350276`*^9}, {3.8008641095725136`*^9, 
   3.8008641442130747`*^9}, {3.800941932296118*^9, 3.8009419557535973`*^9}, {
   3.8009419955619535`*^9, 3.800942082461163*^9}, {3.8009422119679966`*^9, 
   3.800942257202996*^9}, {3.8013802348310843`*^9, 3.801380295396325*^9}, {
   3.801380344870739*^9, 3.8013803561876817`*^9}, {3.801380714066635*^9, 
   3.801380740225103*^9}, {3.8013864534965563`*^9, 3.8013864539496665`*^9}, 
   3.801390578760848*^9, {3.8013946144372606`*^9, 3.801394670513377*^9}, {
   3.8014589659385414`*^9, 3.80145902748678*^9}, {3.8014590641327944`*^9, 
   3.8014590787652507`*^9}, {3.8014591463201933`*^9, 
   3.8014591806760483`*^9}, {3.801459880436472*^9, 3.8014598857004457`*^9}, {
   3.801459967303751*^9, 3.8014599843596754`*^9}, {3.801476855920661*^9, 
   3.8014768699200163`*^9}, {3.8014783034273243`*^9, 3.801478309120784*^9}, {
   3.8016538907459345`*^9, 3.8016539071894183`*^9}, {3.801667966470323*^9, 
   3.8016679960325394`*^9}, {3.8016680960828958`*^9, 3.801668099890047*^9}, {
   3.801749478861636*^9, 3.801749494420245*^9}, {3.80175117497995*^9, 
   3.8017511844322414`*^9}, {3.801751228902465*^9, 3.8017512623012056`*^9}, {
   3.8017522138750534`*^9, 3.8017522423041487`*^9}, 3.8017522739682684`*^9, {
   3.801752319399583*^9, 3.8017523200477123`*^9}, {3.801801451795803*^9, 
   3.801801464393262*^9}, {3.801801648193982*^9, 3.8018016753408055`*^9}, {
   3.801814910366765*^9, 3.8018150146983156`*^9}, {3.8018152516728635`*^9, 
   3.801815269406106*^9}, {3.801978108477476*^9, 3.8019781672573338`*^9}, {
   3.8019782601026554`*^9, 3.8019782840402327`*^9}, {3.8019824563345847`*^9, 
   3.801982492013088*^9}, {3.801982528068801*^9, 3.801982579360976*^9}, {
   3.801982613404452*^9, 3.8019826288193345`*^9}, {3.8019843954135733`*^9, 
   3.8019844331538687`*^9}, {3.8019844652047615`*^9, 
   3.8019844716410756`*^9}, {3.8019847797354937`*^9, 
   3.8019847810921755`*^9}, {3.8019848439684277`*^9, 
   3.8019849405550227`*^9}, {3.801985472079074*^9, 3.8019855106861687`*^9}, {
   3.8019856132054815`*^9, 3.801985675082782*^9}, {3.801986695104598*^9, 
   3.8019867540613146`*^9}, {3.802062970951729*^9, 3.802062993635459*^9}, {
   3.8020633847844734`*^9, 3.8020634264723563`*^9}, {3.802069974958353*^9, 
   3.802069978809571*^9}, {3.8022575633228273`*^9, 3.8022575783212256`*^9}, {
   3.8024049973271284`*^9, 3.802405009260539*^9}, {3.802416357386174*^9, 
   3.802416379801156*^9}, {3.802419272340622*^9, 3.8024192994360957`*^9}, {
   3.8024198018225513`*^9, 3.8024198327711897`*^9}, {3.802695974541159*^9, 
   3.802695978417035*^9}, 3.802777969227388*^9, {3.802778121702602*^9, 
   3.8027781492364655`*^9}, {3.8033549214715633`*^9, 3.803354932812893*^9}, {
   3.803705851380985*^9, 3.803705857473088*^9}, {3.803705894288554*^9, 
   3.8037059382630725`*^9}, {3.8037059711032953`*^9, 3.803705996336035*^9}, 
   3.803706051634448*^9, {3.8037060827860484`*^9, 3.8037060918766813`*^9}, {
   3.803706162539256*^9, 3.8037061653958964`*^9}},
 CellLabel->
  "In[587]:=",ExpressionUUID->"163d618f-dec4-431f-9d2a-074390a020dd"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"ARF\"\>",
       HoldForm], 
      TagBox["\<\"Remark\"\>",
       HoldForm], 
      TagBox["\<\"Mathematica\"\>",
       HoldForm], 
      TagBox["\<\"Alt. Def.\"\>",
       HoldForm], 
      TagBox["\<\"(C)M/A/-\"\>",
       HoldForm], 
      TagBox["\<\"Inverse\"\>",
       HoldForm], 
      TagBox["\<\"Asymptotic \\!\\(\\*UnderscriptBox[\\(\[Sum]\\), \\(n \
\[LessSlantEqual] x\\)]\\)\"\>",
       HoldForm], 
      TagBox["\<\"Dirichlet Series\"\>",
       HoldForm], 
      TagBox["\<\"Bell Series\"\>",
       HoldForm]},
     {"\<\"\\!\\(\\*Cell[\\\"I\\\"]\\)\"\>", "\<\"-\"\>", \
"\<\"Floor[1/n]\"\>", "\<\"-\"\>", "\<\"CM\"\>", "\<\"I\"\>", "\<\"?\"\>", \
"\<\"1\"\>", "\<\"1\"\>"},
     {"\<\"1\"\>", "\<\"-\"\>", "\<\"1\"\>", "\<\"-\"\>", "\<\"CM\"\>", "\<\"\
\[Mu]\"\>", "\<\"?\"\>", 
      TagBox[
       FormBox[
        TemplateBox[{"s"},
         "Zeta"],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"1/(1-x)\"\>"},
     {"\<\"N\"\>", "\<\"-\"\>", "\<\"n\"\>", "\<\"-\"\>", "\<\"CM\"\>", "\<\"\
\[Mu]N\"\>", "\<\"?\"\>", 
      TagBox[
       FormBox[
        TemplateBox[{
          RowBox[{"s", "-", "1"}]},
         "Zeta"],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"1/(1-px)\"\>"},
     {"\<\"\\!\\(\\*SuperscriptBox[\\(N\\), \\(a\\)]\\)\"\>", "\<\"a\
\[GreaterSlantEqual]0\"\>", "\<\"\\!\\(\\*SuperscriptBox[\\(n\\), \\(a\\)]\\)\
\"\>", "\<\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(a\\)]\\)*\[Mu] ; \
\\!\\(\\*SubscriptBox[\\(J\\), \\(a\\)]\\)*1\"\>", "\<\"CM\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]N\\), \\(a\\)]\\)\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(x\\), \\(a + \
1\\)]\\)/(a+1)+O(\\!\\(\\*SuperscriptBox[\\(x\\), \\(a\\)]\\))\"\>", 
      TagBox[
       FormBox[
        TemplateBox[{
          RowBox[{"s", "-", "a"}]},
         "Zeta"],
        TraditionalForm],
       TraditionalForm,
       Editable->
        True], "\<\"1/(1-\\!\\(\\*SuperscriptBox[\\(p\\), \\(a\\)]\\)x)\"\>"},
     {"\<\"\[Mu]\"\>", "\<\"Sum of primitive\\nn-th roots of unity\"\>", \
"\<\"MoebiusMu[n]\"\>", "\<\"-\"\>", "\<\"M\"\>", "\<\"1\"\>", "\<\"?\"\>", 
      TagBox[
       FormBox[
        FractionBox["1", 
         TemplateBox[{"s"},
          "Zeta"]],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"1-x\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(\[Mu]\\), \\(k\\)]\\)\"\>", "\<\"M\
\[ODoubleDot]bius function of order k\"\>", "\<\"nMoebiusMu[k,n]\"\>", "\<\"-\
\"\>", "\<\"M\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[Phi]\"\>", "\<\"Euler Totient function\"\>", \
"\<\"EulerPhi[n]\"\>", "\<\"\[Mu]*N\"\>", "\<\"M\"\>", "\<\"\[Mu]N*1\"\>", \
"\<\"3/\\!\\(\\*SuperscriptBox[\\(\[Pi]\\), \\(2\\)]\\) \
\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\) + O(x Log[x])\"\>", 
      TagBox[
       FormBox[
        FractionBox[
         TemplateBox[{
           RowBox[{"s", "-", "1"}]},
          "Zeta"], 
         TemplateBox[{"s"},
          "Zeta"]],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"(1-x)/(1-px)\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(J\\), \\(k\\)]\\)\"\>", "\<\"Jordan \
Totient function\"\>", "\<\"nJordanTotient[k,n]\"\>", \
"\<\"\[Mu]*\\!\\(\\*SuperscriptBox[\\(N\\), \\(k\\)]\\) ; \
\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(k\\)]\\)*\[Mu]*\[Mu]\"\>", \
"\<\"M\"\>", "\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]N\\), \\(k\\)]\\)*1\"\>", "\
\<\"?\"\>", 
      TagBox[
       FormBox[
        FractionBox[
         TemplateBox[{
           RowBox[{"s", "-", "k"}]},
          "Zeta"], 
         TemplateBox[{"s"},
          "Zeta"]],
        TraditionalForm],
       TraditionalForm,
       Editable->
        True], "\<\"(\\!\\(\\*SuperscriptBox[\\(p\\), \
\\(k\\)]\\)-1)/(1-\\!\\(\\*SuperscriptBox[\\(p\\), \\(k\\)]\\)x)\"\>"},
     {"\<\"\[Tau]\"\>", "\<\"-\"\>", "\<\"DivisorSigma[0,n]\"\>", \
"\<\"1*1\"\>", "\<\"M\"\>", "\<\"\[Mu]*\[Mu]\"\>", "\<\"x \
Log[x]+(2\[Gamma]-1)x+O(\\!\\(\\*SqrtBox[\\(x\\)]\\))\"\>", 
      TagBox[
       FormBox[
        SuperscriptBox[
         TemplateBox[{"s"},
          "Zeta"], "2"],
        TraditionalForm],
       TraditionalForm,
       Editable->
        True], "\<\"1/(1-x\\!\\(\\*SuperscriptBox[\\()\\), \\(2\\)]\\)\"\>"},
     {"\<\"\\!\\(\\*SuperscriptBox[\\(\[Tau]\\), \\((k)\\)]\\)\"\>", "\<\"The \
number of ways of expressing n\\nas a product of k positive factors\"\>", "\<\
\"nDirichletPower\\n[DivisorSigma[0,#]&,k][n]\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(1\\), \\((k + 1)\\)]\\)\"\>", "\<\"M\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]\\), \\((k + 1)\\)]\\)\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[Sigma]\"\>", "\<\"-\"\>", "\<\"DivisorSigma[1,n]\"\>", "\<\"N*1 \
; \[Sigma]=\[Phi]*\[Tau]\"\>", "\<\"M\"\>", "\<\"\[Mu]*\[Mu]N\"\>", "\<\"\
\[Zeta](2)/2 \\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)+O(x Log[x])\"\>", 
      TagBox[
       FormBox[
        RowBox[{
         TemplateBox[{
           RowBox[{"s", "-", "1"}]},
          "Zeta"], " ", 
         TemplateBox[{"s"},
          "Zeta"]}],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"1/((1-px)(1-x))\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(a\\)]\\)\"\>", "\<\"a\
\[GreaterEqual]2\"\>", "\<\"DivisorSigma[a,n]\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(N\\), \\(a\\)]\\)*1 ; \
\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(1\\)]\\)=\[Phi]*\[Tau]\"\>", \
"\<\"M\"\>", "\<\"\[Mu]*\\!\\(\\*SuperscriptBox[\\(\[Mu]N\\), \
\\(a\\)]\\)\"\>", "\<\"\[Zeta](a+1)/(a+1)\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(a + 1\\)]\\)+O(\\!\\(\\*SuperscriptBox[\\(x\\), \\(a\\)]\\))\"\>", \
"\<\"\\!\\(\\*TagBox[FormBox[RowBox[{TemplateBox[{RowBox[{\\\"s\\\", \
\\\"-\\\", \\\"a\\\"}]},\\\"Zeta\\\"], \\\" \\\", \
TemplateBox[{\\\"s\\\"},\\\"Zeta\\\"]}],TraditionalForm],TraditionalForm,\
Editable->True]\\)\"\>", "\<\"1/((1-\\!\\(\\*SuperscriptBox[\\(p\\), \\(a\\)]\
\\)x)(1-x))\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(GCD\\), \\(k\\)]\\)\"\>", "\<\"-\"\>", \
"\<\"GCD[k,n]\"\>", "\<\"-\"\>", "\<\"M\"\>", "\<\"\\!\\(\\*SubscriptBox[\\(\
\[Mu]GCD\\), \\(k\\)]\\)\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[Gamma]\"\>", "\<\"Core\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"M\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", \
"\<\"(1-(1-p)x)/(1-x)\"\>"},
     {"\<\"\[Lambda]\"\>", "\<\"-\"\>", \
"\<\"LiouvilleLambda[n]\\n(-1\\!\\(\\*SuperscriptBox[\\()\\), \
\\(PrimeOmega[n]\\)]\\)\"\>", "\<\"-\"\>", "\<\"M\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]\\), \\(2\\)]\\) ; |\[Mu]|\"\>", \
"\<\"?\"\>", 
      TagBox[
       FormBox[
        FractionBox[
         TemplateBox[{
           RowBox[{"2", " ", "s"}]},
          "Zeta"], 
         TemplateBox[{"s"},
          "Zeta"]],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"1/(1+x)\"\>"},
     {"\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]\\), \\(2\\)]\\)\"\>", "\<\"1 if \
squarefree, 0 otherwise\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"M\"\>", "\<\"\
\[Lambda]\"\>", "\<\"?\"\>", "\<\"\[Zeta](s)/\[Zeta](2s)\"\>", "\<\"1+x\"\>"},
     {"\<\"\[Lambda]*1\"\>", "\<\"1 if square, 0 otherwise\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"M\"\>", "\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]\\), \
\\(2\\)]\\)*\[Mu]\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\\!\\(\\*SuperscriptBox[\\(\[Mu]\\), \\(2\\)]\\)*1\"\>", \
"\<\"Number of square-free divisors\"\>", \
"\<\"\\!\\(\\*SuperscriptBox[\\(2\\), \\(PrimeNu[n]\\)]\\)\"\>", \
"\<\"|\[Mu]|*1\"\>", "\<\"M\"\>", "\<\"\[Lambda]*\[Mu]\"\>", "\<\"?\"\>", 
      TagBox[
       FormBox[
        FractionBox[
         SuperscriptBox[
          TemplateBox[{"s"},
           "Zeta"], "2"], 
         TemplateBox[{
           RowBox[{"2", " ", "s"}]},
          "Zeta"]],
        TraditionalForm],
       TraditionalForm,
       Editable->True], "\<\"(1+x)/(1-x)\"\>"},
     {"\<\"a\"\>", "\<\"Number of abelian groups\"\>", \
"\<\"FiniteAbelianGroupCount[n]\"\>", "\<\"-\"\>", "\<\"M\"\>", "\<\"?\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(k\\)]\\)\"\>", "\<\"Euler \
Totient function of order k\"\>", "\<\"nEulerPhi[k,n]\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(Faulhaber\\), \
\\(k\\)]\\)*\\!\\(\\*SuperscriptBox[\\(\[Mu]N\\), \\(k\\)]\\)\"\>", \
"\<\"-\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[Nu]\"\>", "\<\"-\"\>", "\<\"PrimeNu[n]\"\>", "\<\"-\"\>", "\<\"A\
\"\>", "\<\"None\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[CapitalOmega]\"\>", "\<\"-\"\>", "\<\"PrimeOmega[n]\"\>", "\<\"-\
\"\>", "\<\"CA\"\>", "\<\"None\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[CapitalLambda]\"\>", "\<\"-\"\>", "\<\"MangoldtLambda[n]\"\>", "\
\<\"-\"\>", "\<\"-\"\>", "\<\"None\"\>", "\<\"?\"\>", "\<\"-\[Zeta]'(s)/\
\[Zeta](s)\"\>", "\<\"?\"\>"},
     {"\<\"L\"\>", "\<\"-\"\>", "\<\"Log[n]\"\>", \
"\<\"\[CapitalLambda]*1\"\>", "\<\"CA\"\>", "\<\"None\"\>", "\<\"?\"\>", \
"\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\[Nu]*\[Mu]\"\>", "\<\"1 if prime, 0 otherwise\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"?\"\>", "\<\"None\"\>", "\<\"?\"\>", "\<\"?\"\>", \
"\<\"?\"\>"},
     {"\<\"?\"\>", "\<\"1 if k-th-powerfree, 0 otherwise\"\>", "\<\"-\"\>", "\
\<\"-\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", \
"\<\"\[Zeta](s)/\[Zeta](ks)\"\>", "\<\"?\"\>"},
     {"\<\"?\"\>", "\<\"Von Sterneck function\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"?\"\>", "\<\"Lehmer Divisor function\"\>", "\<\"-\"\>", \
"\<\"-\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"?\"\>", "\<\"Ramanujan sum\"\>", "\<\"-\"\>", "\<\"-\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"\\!\\(\\*SubscriptBox[\\(M\\), \\(k\\)]\\)\"\>", "\<\"Lehmer \
Inverse\"\>", "\<\"-\"\>", "\<\"-\"\>", "\<\"M\"\>", "\<\"?\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"},
     {"\<\"S\"\>", "\<\"Number of divisors of \
\\!\\(\\*SuperscriptBox[\\(n\\), \\(2\\)]\\)\"\>", "\<\"-\"\>", "\<\"1*\\!\\(\
\\*SuperscriptBox[\\(2\\), \\(PrimeNu\\)]\\)\"\>", "\<\"M\"\>", "\<\"?\"\>", \
"\<\"?\"\>", "\<\"?\"\>", "\<\"?\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"ARF", "Remark", "Mathematica", "Alt. Def.", "(C)M/A/-", 
       "Inverse", 
       "Asymptotic \!\(\*UnderscriptBox[\(\[Sum]\), \(n \[LessSlantEqual] \
x\)]\)", "Dirichlet Series", "Bell Series"}}]]]], "Output",
 CellChangeTimes->{
  3.801653928705162*^9, 3.8016680020892267`*^9, 3.8016681042460833`*^9, 
   3.8017495021461854`*^9, 3.8017512850271235`*^9, 3.801752331203334*^9, 
   3.8018014708504624`*^9, 3.8018016799844437`*^9, 3.801815020077207*^9, 
   3.8018152741208963`*^9, 3.8019781718562155`*^9, 3.801978291034566*^9, 
   3.8019825855468807`*^9, 3.801982636688262*^9, 3.801984441095993*^9, 
   3.8019844764709177`*^9, 3.8019847848978853`*^9, {3.8019848952370677`*^9, 
   3.8019849108942413`*^9}, 3.8019849459062505`*^9, 3.8019855260044584`*^9, 
   3.8019856886637955`*^9, 3.801986763456809*^9, 3.8020630901578236`*^9, 
   3.802063440071601*^9, 3.802069981098548*^9, 3.8022575888088226`*^9, 
   3.8024050163776765`*^9, 3.8024163850319138`*^9, 3.8024193017593575`*^9, 
   3.802419806699851*^9, 3.8024198374912567`*^9, 3.8026959860412626`*^9, 
   3.8027779742401257`*^9, 3.802778152611266*^9, 3.803354943036064*^9, 
   3.803706011171733*^9, 3.803706058738119*^9, 3.8037060987977514`*^9, 
   3.803706170881019*^9},
 CellLabel->
  "Out[587]//TableForm=",ExpressionUUID->"6b6c944c-597e-46c7-8ef9-\
4e3301a0ab9c"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Example-1",
 FontWeight->"Bold",
 FontColor->RGBColor[
  0.5019607843137255, 0.5019607843137255, 
   0.5019607843137255]]], "Subsubsection",
 CellChangeTimes->{{3.7828068396307926`*^9, 3.782806841526989*^9}, {
  3.7997366854379716`*^9, 
  3.7997366854849415`*^9}},ExpressionUUID->"09a9c9df-99fe-4e36-b5fe-\
3c176165071a"],

Cell[TextData[{
 "So...: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     UnderscriptBox["\[Product]", 
      RowBox[{"d", "|", "n"}]], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"\[CapitalOmega]", "(", "d", ")"}]], 
      SuperscriptBox[
       RowBox[{"\[Mu]", "(", 
        FractionBox["n", "d"], ")"}], "2"]}]}], "=", 
    StyleBox[
     RowBox[{"I", "(", "n", ")"}],
     FontSlant->"Plain"]}], TraditionalForm]],ExpressionUUID->
  "a878275e-13d3-4ca6-9684-f56d6766482d"],
 "?"
}], "Text",
 CellChangeTimes->{{3.7988983337908287`*^9, 
  3.798898478365624*^9}},ExpressionUUID->"14b53f8f-828b-4b9d-a344-\
a468ab54ad02"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"DirichletConvolve", "[", 
       RowBox[{
        RowBox[{"Floor", "[", 
         FractionBox["1", "k"], "]"}], ",", 
        RowBox[{"DirichletConvolve", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"PrimeOmega", "[", "j", "]"}]], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"MoebiusMu", "[", "j", "]"}], "]"}], ",", "j", ",", "k"}], 
         "]"}], ",", "k", ",", "n"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "8"}], "}"}]}], "]"}], "//", 
  "tf"}], "\[IndentingNewLine]", 
 RowBox[{"DirichletTransform", "[", 
  RowBox[{
   RowBox[{"DirichletConvolve", "[", 
    RowBox[{
     RowBox[{"DivisorSigma", "[", 
      RowBox[{"0", ",", "k"}], "]"}], ",", 
     RowBox[{"DirichletConvolve", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Abs", "[", 
        RowBox[{"MoebiusMu", "[", "j", "]"}], "]"}], ",", "j", ",", "k"}], 
      "]"}], ",", "k", ",", "n"}], "]"}], ",", "n", ",", "s"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7978336902073603`*^9, 3.797833715847153*^9}, {
   3.797860608433714*^9, 3.7978606233190327`*^9}, {3.7979179109785347`*^9, 
   3.797917941902741*^9}, {3.7981044441665125`*^9, 3.7981044511150384`*^9}, {
   3.7981713337204704`*^9, 3.798171392021165*^9}, {3.798898492929424*^9, 
   3.7988985119256024`*^9}, {3.799383555567053*^9, 3.7993835581505985`*^9}, {
   3.799482520451276*^9, 3.799482560922038*^9}, 3.799485206535454*^9, {
   3.7996470263390017`*^9, 3.799647027442378*^9}, 3.799653361245256*^9, 
   3.799653488629921*^9, {3.799653540620739*^9, 3.799653542762411*^9}, {
   3.799653769162269*^9, 3.7996538017520933`*^9}, {3.7996538556337404`*^9, 
   3.799653855927557*^9}, {3.799653908385085*^9, 3.7996539221745496`*^9}, {
   3.7996544092670326`*^9, 3.7996544267152367`*^9}, {3.79965449314611*^9, 
   3.799654493463915*^9}, {3.8020664396645255`*^9, 3.8020665714701333`*^9}, {
   3.8020674618550196`*^9, 3.8020674620597544`*^9}},
 CellLabel->
  "In[999]:=",ExpressionUUID->"a2698e06-8f3b-492f-bdf7-841b76d725dd"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1"},
    {"2", "0"},
    {"3", "0"},
    {"4", "0"},
    {"5", "0"},
    {"6", "0"},
    {"7", "0"},
    {"8", "0"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.799653472901656*^9, 3.7996534901040063`*^9}, 
   3.7996535434250007`*^9, {3.7996537854301977`*^9, 3.799653803138236*^9}, 
   3.799653857488592*^9, 3.7996539230210276`*^9, {3.7996544202102604`*^9, 
   3.7996544277386007`*^9}, 3.7996544945462437`*^9, 3.79973659510577*^9, 
   3.802066530245015*^9, 3.8020665745957146`*^9, 3.8020674637259235`*^9},
 CellLabel->
  "Out[999]//TableForm=",ExpressionUUID->"e5e52097-ff9a-461f-acc8-\
d06469462c55"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"Zeta", "[", "s", "]"}], "4"], 
  RowBox[{"Zeta", "[", 
   RowBox[{"2", " ", "s"}], "]"}]]], "Output",
 CellChangeTimes->{{3.799653472901656*^9, 3.7996534901040063`*^9}, 
   3.7996535434250007`*^9, {3.7996537854301977`*^9, 3.799653803138236*^9}, 
   3.799653857488592*^9, 3.7996539230210276`*^9, {3.7996544202102604`*^9, 
   3.7996544277386007`*^9}, 3.7996544945462437`*^9, 3.79973659510577*^9, 
   3.802066530245015*^9, 3.8020665745957146`*^9, 3.8020674637835193`*^9},
 CellLabel->
  "Out[1000]=",ExpressionUUID->"45afbba0-4ecf-4ebf-9a5a-a042f8a2ae49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      SuperscriptBox["2", 
       RowBox[{"PrimeNu", "[", "k", "]"}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "8"}], "}"}]}], "]"}], "//", "tf"}]], "Input",
 CellChangeTimes->{{3.802404843614329*^9, 
  3.8024049052691565`*^9}},ExpressionUUID->"caa3cf05-4d08-40ce-b637-\
14415b90bb10"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1"},
    {"2", "2"},
    {"3", "2"},
    {"4", "2"},
    {"5", "2"},
    {"6", "4"},
    {"7", "2"},
    {"8", "2"},
    {"9", "2"},
    {"10", "4"},
    {"11", "2"},
    {"12", "4"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.802404870724286*^9, 3.8024048932847853`*^9}},
 CellLabel->
  "Out[1936]//TableForm=",ExpressionUUID->"49f98c5a-c2b5-4b7e-89de-\
f76ac8a24934"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Bijection between \[DoubleStruckCapitalN] and \[DoubleStruckCapitalQ] \
", "Section",
 CellChangeTimes->{{3.794663636549914*^9, 3.794663637950187*^9}, {
   3.7960219696311207`*^9, 3.7960220475973544`*^9}, 
   3.798709029250471*^9},ExpressionUUID->"40d3c714-e711-4449-9662-\
b09cb735022c"],

Cell[CellGroupData[{

Cell["Experiments", "Subsection",
 CellChangeTimes->{{3.795012066409512*^9, 3.7950120719300947`*^9}, {
  3.79862816381929*^9, 3.798628203434038*^9}, {3.7987094250938845`*^9, 
  3.7987094273105125`*^9}},ExpressionUUID->"99b84f84-760f-4fba-96cd-\
a24c9c89b930"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"nNaturalToQuotient", "[", "k", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "101", ",", "111"}], "}"}]}], "]"}], "//", 
  "tf"}]], "Input",
 CellLabel->
  "In[422]:=",ExpressionUUID->"f5f9f753-db1e-4021-b7db-ee5a5913c6df"],

Cell[BoxData[
 TagBox[GridBox[{
    {"101", 
     FractionBox["5", "2"]},
    {"102", 
     RowBox[{"-", 
      FractionBox["1", "51"]}]},
    {"103", 
     FractionBox["1", "51"]},
    {"104", 
     RowBox[{"-", 
      FractionBox["2", "13"]}]},
    {"105", 
     FractionBox["2", "13"]},
    {"106", 
     RowBox[{"-", 
      FractionBox["1", "53"]}]},
    {"107", 
     FractionBox["1", "53"]},
    {"108", 
     RowBox[{"-", 
      FractionBox["1", "18"]}]},
    {"109", 
     FractionBox["1", "18"]},
    {"110", 
     RowBox[{"-", 
      FractionBox["1", "55"]}]},
    {"111", 
     FractionBox["1", "55"]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[422]//TableForm=",ExpressionUUID->"087080a2-b78b-4f99-9c2b-\
c07c093db6ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nQuotientToNatural", "[", 
  FractionBox["5", "2"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"nQuotientToNatural", "[", 
  FractionBox[
   RowBox[{"-", "1"}], "53"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"nQuotientToNatural", "[", 
  FractionBox["1", "55"], "]"}]}], "Input",
 CellLabel->
  "In[423]:=",ExpressionUUID->"c04f2df2-18ad-4078-b0f1-94be0edba2c9"],

Cell[BoxData["101"], "Output",
 CellLabel->
  "Out[423]=",ExpressionUUID->"4348722c-aba8-4505-9717-5d32dd29f10f"],

Cell[BoxData["106"], "Output",
 CellLabel->
  "Out[424]=",ExpressionUUID->"68f724ce-831a-4d9b-a7dd-0a096376ca89"],

Cell[BoxData["111"], "Output",
 CellLabel->
  "Out[425]=",ExpressionUUID->"67e4f9f8-ffbf-4e48-aaa8-6996e4f04bfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"nNaturalToQuotient", "[", "k", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "6606600", ",", "6606609"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[303]:=",ExpressionUUID->"204ba2ca-604e-4a1d-9db4-0884ac000498"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6606600", ",", 
     RowBox[{"-", 
      FractionBox["110", "273"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606601", ",", 
     FractionBox["110", "273"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606602", ",", 
     RowBox[{"-", 
      FractionBox["1", "3303301"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606603", ",", 
     FractionBox["1", "3303301"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606604", ",", 
     RowBox[{"-", 
      FractionBox["1", "3303302"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606605", ",", 
     FractionBox["1", "3303302"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606606", ",", 
     RowBox[{"-", 
      FractionBox["1", "3303303"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606607", ",", 
     FractionBox["1", "3303303"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606608", ",", 
     RowBox[{"-", 
      FractionBox["1", "1651652"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6606609", ",", 
     FractionBox["1", "1651652"]}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[303]=",ExpressionUUID->"ddbe29ae-c97e-4b17-a172-996bbe1f70f2"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Prime Distribution", "Section",ExpressionUUID->"2d041af1-b0cf-44a8-8ae5-18d7b740aa3f"],

Cell[CellGroupData[{

Cell["Prime-counting function \[Pi](x)", "Subsection",ExpressionUUID->"78eeb584-9c4d-4b2b-a886-0ec543cbefc6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"ListStepPlot", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"PrimePi", "[", "n", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "30"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellLabel->
  "In[512]:=",ExpressionUUID->"e653da25-f228-4601-866d-52aa88a4bb5c"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdz0mKAkEQheHCTbtTaEFBwXlq53kqNc/gEQTXfSHP5DXcunDlxiEjKgr/
hOLV48uBKB//D6dEEATh+/ukrNs++js//bKuy0X7Lp5/3Pe5pIv2iafc97m0
9av3X3jGRfeIZ61L5uB5eMHeES/i3ZL1u/cyvAKvwmvwOrxhc4g3MVcL3ob/
2ZziHczdhffgffgAPrT+8D6EjzQL6nGXHMPH8IlmST3uklP4FD6Dz+Bz+By+
0Kyox11yCV/CV/AVfA1fwzfwDTyEh/CtZk097pI79L31F3ke3dE=
       "]]}}, {{}, {}}}, {{}, 
    {Opacity[0], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7BlQgQOqOIcDqrgAGl/EAVWdBBpfBk2fAhpf
CY2vgsZXQ7NHA42vhWavDhpfD41vgMY3RHOnERrfGM3dJmh8UzS+GRrfHEor
QWkLNL4lGt8KjW+NxrdB49tCaVi42cH5AHdvGd8=
      "]]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 31.}, {0, 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[512]=",ExpressionUUID->"50f2d3d4-4ae4-4435-9dab-5d2e9c2f0ead"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"PrimePi", "[", "n", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"ae0510dc-08c3-4391-bc6b-2bf4dedf0b0a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[14]=",ExpressionUUID->"f50a324f-8beb-4936-85e6-097ece6aa0fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"primePi2", "[", "n_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"n", "==", "1"}], ",", 
    RowBox[{"Log", "[", 
     RowBox[{"2", "Pi"}], "]"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"PrimePowerQ", "[", "n", "]"}], ",", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"FactorInteger", "[", "n", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ",", "0"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"primePi2", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "12"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"189a88e2-3ff6-44b2-9edf-8f8c4de93e23"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"2", " ", "\[Pi]"}], "]"}], ",", 
   RowBox[{"Log", "[", "2", "]"}], ",", 
   RowBox[{"Log", "[", "3", "]"}], ",", 
   RowBox[{"Log", "[", "2", "]"}], ",", 
   RowBox[{"Log", "[", "5", "]"}], ",", "0", ",", 
   RowBox[{"Log", "[", "7", "]"}], ",", 
   RowBox[{"Log", "[", "2", "]"}], ",", 
   RowBox[{"Log", "[", "3", "]"}], ",", "0", ",", 
   RowBox[{"Log", "[", "11", "]"}], ",", "0"}], "}"}]], "Output",
 CellLabel->"Out[16]=",ExpressionUUID->"6b0830e3-25af-4dd5-a0cc-d9af31bc159c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prime-counting function J(x)", "Subsection",ExpressionUUID->"c15be270-ecfe-4a37-ae9c-a00d753600f5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"heavysideTheta", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "==", "0"}], ",", "1", ",", 
    RowBox[{"HeavisideTheta", "[", "x", "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plist", "[", "x_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{"y", ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Range", "[", "x", "]"}], ",", "PrimeQ"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 CellLabel->"In[64]:=",ExpressionUUID->"80b6c3fd-58b7-4654-bc60-ae5609678d02"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"j1", "[", "y_", "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "n"], 
     RowBox[{"PrimePi", "[", 
      SuperscriptBox["y", 
       FractionBox["1", "n"]], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", 
      RowBox[{"Ceiling", "[", 
       RowBox[{
        RowBox[{"Log", "[", "y", "]"}], "/", 
        RowBox[{"Log", "[", "2", "]"}]}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j2", "[", "x_", "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "n"], 
       RowBox[{"heavysideTheta", "[", 
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SuperscriptBox["p", "n"]}], ")"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Ceiling", "[", 
         RowBox[{
          RowBox[{"Log", "[", "x", "]"}], "/", 
          RowBox[{"Log", "[", "2", "]"}]}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", 
      RowBox[{"plist", "[", "x", "]"}]}], "}"}]}], "]"}]}]}], "Input",
 CellLabel->"In[66]:=",ExpressionUUID->"2dcf1744-fef0-4e8e-8cc5-c1edb738ac8e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"j1p", "[", "y_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "n"], 
     RowBox[{"PrimePi", "[", 
      SuperscriptBox["y", 
       FractionBox["1", "n"]], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", 
      RowBox[{"Ceiling", "[", 
       RowBox[{
        RowBox[{"Log", "[", "y", "]"}], "/", 
        RowBox[{"Log", "[", "2", "]"}]}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j2p", "[", "x_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "n"], 
       RowBox[{"heavysideTheta", "[", 
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SuperscriptBox["p", "n"]}], ")"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Ceiling", "[", 
         RowBox[{
          RowBox[{"Log", "[", "x", "]"}], "/", 
          RowBox[{"Log", "[", "2", "]"}]}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", 
      RowBox[{"plist", "[", "x", "]"}]}], "}"}]}], "]"}]}]}], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"3810d454-fa88-4171-b211-4f8cf25698e2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"j1p2", "[", "y_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", "n"], ",", 
      RowBox[{
       SuperscriptBox["y", 
        FractionBox["1", "n"]], "//", "N"}], ",", 
      RowBox[{"PrimePi", "[", 
       SuperscriptBox["y", 
        FractionBox["1", "n"]], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", 
      RowBox[{"Ceiling", "[", 
       RowBox[{
        RowBox[{"Log", "[", "y", "]"}], "/", 
        RowBox[{"Log", "[", "2", "]"}]}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j2p2", "[", "x_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox["1", "n"], ",", 
        RowBox[{"(", 
         RowBox[{"x", "-", 
          SuperscriptBox["p", "n"]}], ")"}], ",", 
        RowBox[{
         FractionBox["1", "n"], 
         RowBox[{"heavysideTheta", "[", 
          RowBox[{"(", 
           RowBox[{"x", "-", 
            SuperscriptBox["p", "n"]}], ")"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Ceiling", "[", 
         RowBox[{
          RowBox[{"Log", "[", "x", "]"}], "/", 
          RowBox[{"Log", "[", "2", "]"}]}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", 
      RowBox[{"plist", "[", "x", "]"}]}], "}"}]}], "]"}]}]}], "Input",
 CellLabel->"In[70]:=",ExpressionUUID->"b6a102b7-dfd7-4332-860d-5d3bcf09404f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"j1p", "[", "11", "]"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"j2p", "[", "11", "]"}], "//", "N"}]}], "Input",
 CellLabel->"In[72]:=",ExpressionUUID->"03b0d89d-50d7-45d0-84b2-880b996b561f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.`", ",", "1.`", ",", "0.3333333333333333`", ",", "0.`"}], 
  "}"}]], "Output",
 CellLabel->"Out[72]=",ExpressionUUID->"32851b1e-851a-499b-8b8d-9e17fee540e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.5`", ",", "0.3333333333333333`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.5`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[73]=",ExpressionUUID->"f61172a0-7e2d-43a4-a734-3c2374351077"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stan Wagon Interpretation", "Subsection",ExpressionUUID->"b9ca525e-555a-4bff-9120-23cd336a40d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pi0", "[", "x", "]"}], ":=", 
   RowBox[{
    RowBox[{"1", "/", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"PrimePi", "[", 
       RowBox[{"x", "+", "0.001"}], "]"}], "+", 
      RowBox[{"PrimePi", "[", 
       RowBox[{"x", "-", "0.001"}], "]"}]}], ")"}]}]}], ";"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"b07af943-56b3-4c72-9204-a1a6e95a5bcd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RiemannR", "[", "x", "]"}], ",", 
     RowBox[{"pi0", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "30"}], "}"}], ",", 
   RowBox[{"PlotPoints", "->", "30"}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", 
        RowBox[{"Lighter", "[", "Red", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Exclusions", "->", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "==", "#"}], "&"}], ")"}], "/@", 
     RowBox[{"Prime", "[", 
      RowBox[{"Range", "[", "10", "]"}], "]"}]}]}], ",", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Prime", "[", "i", "]"}], ",", 
           RowBox[{"i", "-", 
            RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"29c3da12-13d0-439c-9bc9-a288d2b25475"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 
       NCache[
        Rational[1, 3], 0.3333333333333333], 
       NCache[
        Rational[1, 3], 0.3333333333333333]], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAA6uxj0hFbsT7bqZ0JhfV9P7X64iRU
148/K/zjW79Lvj8lsZu4DtefP0ShmVGXf8Q/ePJirznhpz+EIhHWB7HIP10M
eALs1q8/OqE4YyJMzD8hk8YqT+azP9NpsOsSiM8/FCBRVCjhtz8aOSqKYkDR
P/k5Zqfa1r8/K8kcvTTy0z92Y3jo2ejBP8owY9KvMNU/76k9fUbmwz8cD6yv
cmHWP+I2yKYf4cc/lyM/Fmmh2D/HUN350dbPP7L0X60rvdw/oEtRRx/q0D/5
6YKIAbTdP93us5HV6NE/rvcc44ml3j9WNXkmQubTP35hiUouPeA/ScIDUBvh
1z9/B4QxB/rhPy7cGKPN1t8/Qx2XM9wr5T+2v732wWrgP3pn7wvKjOU/VBHv
Gx3q4D9A7f0CuOzlP5C0UWbT6OE/qQxfKL+p5j8K+xb7P+bjP084izZ/Geg/
/IehJBnh5z8Y3u8VNtbqP+KhtnfL1u8/Cmf0J+7m7z9upq6BbjDwP5BaQGVj
HfA/7PuBR3d18D/Nh018F0fwP+amKNOI//A/6FszNdyZ8D/c/HXqqxPyP2kj
EaH5PPE/yKgQGfI79D8vK+fSb3ryP54ARnZ+jPg/mA0cBwTY9D+x3NMIy73/
P3Pako9Nh/g/zJj7ag==
       "]], 
      LineBox[{{2.0161637931034484`, 1.5489664196144857`}, {
       2.9838362068965516`, 1.9975669666216889`}}], 
      LineBox[{{3.0161637931034484`, 2.0117757906844247`}, {4.068232543577511,
        2.4543413655368957`}, {4.983836206896552, 2.8149668220927957`}}], 
      LineBox[{{5.016163793103448, 2.827366939310971}, {6.138979536012785, 
       3.2464125578548275`}, {6.983836206896551, 3.548982127359212}}], 
      LineBox[{{7.0161637931034475`, 3.5603726523608596`}, {8.285871491637693,
        3.998256133975959}, {9.277958037542811, 4.329102310344008}, {
       10.353735996659132`, 4.678471213278707}, {10.983836206896552`, 
       4.879109086521022}}], 
      LineBox[{{11.016163793103448`, 4.889329245360494}, {12.342573051077101`,
        5.302944476226017}, {12.983836206896552`, 5.499199347978746}}], 
      LineBox[{{13.016163793103448`, 5.509033573351859}, {14.407555068684704`,
        5.927262426424405}, {15.487996990408757`, 6.245755645694852}, {
       16.54868204948194, 6.553638413204614}, {16.98383620689655, 
       6.678675183550944}}], 
      LineBox[{{17.01616379310345, 6.687935786962462}, {18.610781579675706`, 
       7.140113922546056}, {18.98383620689655, 7.244656466080683}}], 
      LineBox[{{19.01616379310345, 7.253694630748481}, {20.69730193512807, 
       7.719283816523225}, {21.762650956808987`, 8.010105486360738}, {
       22.756518977908, 8.27868566349819}, {22.98383620689655, 
       8.339762023083065}}], 
      LineBox[{{23.01616379310345, 8.348437489915648}, {24.840156845946527`, 
       8.833886513265721}, {25.826478417023974`, 9.093253801686341}, {
       26.89649140131262, 9.37230400630027}, {27.895023385019364`, 
       9.630639965140423}, {28.97724678193731, 9.908481460276667}, {
       28.983836206896548`, 9.910166560028163}}], LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAANMJyTyMEPUAqBF/IPNYjQC4XIjvn
Gj1AjsUZ0d/hI0Cco+udoTs9QFhG0EmX8iNAd7x+YxZ9PUB6pzi7+hMkQATu
168tgT1AIiDDcBAWJECSHzH8RIU9QHDeIBcmGCRAroLjlHONPUAkYmE2URwk
QORISMbQnT1AI85Ev6YkJEBS1REpi749QLp+BP1ONSRA4AZrdaLCPUA9yRHB
YzckQG44xMG5xj1A+Mgedng5JECJm3Za6M49QGrkQrOhPSRAwGHbi0XfPUD5
QAB680UkQE6TNNhc4z1A0fBXxgdIJEDcxI0kdOc9QMg3xQMcSiRA9ydAvaLv
PUA/a+tRRE4kQIRZmQm68z1AssWpYlhQJEASi/JV0fc9QBqTiGRsUiRAoLxL
ouj7PUBHiIpXgFQkQC7upO7//z1AHlmyO5RWJEDs+4oP
       "]]},
     Annotation[#, "Charting`Private`Tag$83407#1"]& ], {}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[0.01], 
    PointBox[
     NCache[{{2, 
        Rational[1, 2]}, {3, 
        Rational[3, 2]}, {5, 
        Rational[5, 2]}, {7, 
        Rational[7, 2]}, {11, 
        Rational[9, 2]}, {13, 
        Rational[11, 2]}, {17, 
        Rational[13, 2]}, {19, 
        Rational[15, 2]}, {23, 
        Rational[17, 2]}, {29, 
        Rational[19, 2]}}, {{2, 0.5}, {3, 1.5}, {5, 2.5}, {7, 3.5}, {
       11, 4.5}, {13, 5.5}, {17, 6.5}, {19, 7.5}, {23, 8.5}, {29, 9.5}}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 30}, {0., 10.169099679490099`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[19]=",ExpressionUUID->"8da89879-3d91-47be-8e89-aa32eb27458c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rho", "=", 
   RowBox[{"N", "[", 
    RowBox[{"ZetaZero", "[", 
     RowBox[{"Range", "[", "100", "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muValues", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MoebiusMu", "[", "n", "]"}], "/", "n"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "154"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muIndices", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Position", "[", 
     RowBox[{"muValues", ",", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "!=", "0"}], "&"}], ")"}]}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"muValues", "[", 
     RowBox[{"[", "muIndices", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "[", 
   RowBox[{"x_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"mu", ".", 
   RowBox[{"Re", "[", 
    RowBox[{"ExpIntegralEi", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"rho", "[", 
         RowBox[{"[", "k", "]"}], "]"}], 
        RowBox[{"Log", "[", 
         RowBox[{"N", "[", "x", "]"}], "]"}]}], ")"}], "/", "muIndices"}], 
     "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "T", "]"}], "=", "Listable"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"domain", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"12.", ",", "100", ",", 
     RowBox[{"88", "/", "200"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"T", "[", 
      RowBox[{"domain", ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "100"}], "}"}]}], "]"}]}], ";"}]}], "Input",Expression\
UUID->"2dd0203c-6d48-41cb-9855-10050a014663"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"domain", ",", 
        RowBox[{"TData", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"Axes", "->", "False"}], ",", 
     RowBox[{"PlotStyle", "->", "Thick"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "100", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[82]:=",ExpressionUUID->"7a4f667f-5add-4f62-b5a2-5dfb2a2d2856"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 100, 1}}, Typeset`size$$ = {
    360., {109., 113.10205752535714`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListLinePlot[
        Transpose[{$CellContext`domain, 
          Part[$CellContext`TData, $CellContext`i$$]}], Frame -> True, Axes -> 
        False, PlotStyle -> Thick, PlotRange -> {-0.5, 0.5}], 
      "Specifications" :> {{$CellContext`i$$, 1, 100, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{627., {139.134033203125, 144.865966796875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellLabel->"Out[82]=",ExpressionUUID->"f9f0fe41-d53c-4ce2-b1a5-f2c7314adbe3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RiemannData", "=", 
    RowBox[{
     RowBox[{"RiemannR", "[", "domain", "]"}], "+", 
     RowBox[{
      FractionBox["1", "\[Pi]"], 
      RowBox[{"ArcTan", "[", 
       RowBox[{"Pi", "/", 
        RowBox[{"Log", "[", "domain", "]"}]}], "]"}]}], "-", 
     RowBox[{"1", "/", 
      RowBox[{"Log", "[", "domain", "]"}]}]}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TDataEnhanced", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"domain", ",", "ss"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ss", ",", 
       RowBox[{"FoldList", "[", 
        RowBox[{"Plus", ",", "RiemannData", ",", "TData"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellLabel->"In[90]:=",ExpressionUUID->"e93fd0fb-85b3-44b8-9b1e-7417edb63205"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pi0Plot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pi0", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "100"}], "}"}], ",", 
     RowBox[{"PlotPoints", "->", "100"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}]}], ",", 
     RowBox[{"Exclusions", "->", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "==", "#"}], "&"}], ")"}], "/@", 
       RowBox[{"Prime", "[", 
        RowBox[{"Range", "[", "25", "]"}], "]"}]}]}], ",", 
     RowBox[{"Epilog", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", "Red", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Prime", "[", "i", "]"}], ",", 
             RowBox[{"i", "-", 
              RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "25"}], "}"}]}], "]"}], "]"}]}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[93]:=",ExpressionUUID->"006de8e4-704e-4654-8c89-d4ffc5e94bb6"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"pi0Plot", ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"TDataEnhanced", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Blue"}], "}"}]}]}], 
      "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Prime", "[", "i", "]"}], ",", 
             RowBox[{"i", "-", 
              RowBox[{"1", "/", "2"}]}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "25"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"20", ",", "100", ",", "10"}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"10", ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "27"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "->", 
      RowBox[{"{", 
       RowBox[{"10", ",", "5"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "50", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"2d0441b0-072a-48e0-b640-87704e2ae8c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"pi0Plot", ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"TDataEnhanced", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Blue"}], "}"}]}]}], 
      "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Prime", "[", "i", "]"}], ",", 
             RowBox[{"i", "-", 
              RowBox[{"1", "/", "2"}]}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "25"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"20", ",", "100", ",", "10"}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"10", ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "27"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "->", 
      RowBox[{"{", 
       RowBox[{"10", ",", "5"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "50", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[95]:=",ExpressionUUID->"508e8dfe-63c9-41d0-9886-59b1fa8a1bdd"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 39, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 50, 1}}, Typeset`size$$ = {
    360., {108., 113.1067732570761}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[$CellContext`pi0Plot, 
        ListLinePlot[
         Part[$CellContext`TDataEnhanced, $CellContext`i$$], PlotStyle -> {
           Thickness[0.005], Blue}], 
        Graphics[{
          PointSize[0.01], 
          Table[
           Point[{
             Prime[$CellContext`i$$], $CellContext`i$$ - 1/
             2}], {$CellContext`i$$, 25}]}], Ticks -> {
          Range[20, 100, 10], Automatic}, PlotRange -> {{10, 100}, {5, 27}}, 
        AxesOrigin -> {10, 5}], 
      "Specifications" :> {{$CellContext`i$$, 1, 50, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{627., {139.134033203125, 144.865966796875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellLabel->"Out[95]=",ExpressionUUID->"6cdb0267-1213-45cb-a930-89d179402e18"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Mellin Transformation", "Section",ExpressionUUID->"7b2cdd12-49ea-491f-ba1b-d79aeddc6944"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MellinTransform", "[", 
    RowBox[{
     RowBox[{"2", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]]}], ",", "x", ",", "s"}], "]"}], "+", 
   RowBox[{"MellinTransform", "[", 
    RowBox[{
     RowBox[{"3", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]]}], ",", "x", ",", "s"}], "]"}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{"MellinTransform", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "x"], "-", "1"}]], ",", "x", ",", 
   "s"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"InverseMellinTransform", "[", 
  RowBox[{
   RowBox[{"Gamma", "[", "s", "]"}], ",", "s", ",", "x"}], "]"}]}], "Input",
 CellLabel->"In[82]:=",ExpressionUUID->"ca043ac0-29e4-44aa-9480-30e49a76c93a"],

Cell[BoxData[
 RowBox[{"5", " ", 
  RowBox[{"Gamma", "[", "s", "]"}]}]], "Output",
 CellLabel->"Out[82]=",ExpressionUUID->"9a77618f-6de3-4b9c-b55a-4c8a656fa05c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Gamma", "[", "s", "]"}], " ", 
  RowBox[{"Zeta", "[", "s", "]"}]}]], "Output",
 CellLabel->"Out[83]=",ExpressionUUID->"96906a21-ff9c-4f3e-9873-190c0412aa4b"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", "x"}]]], "Output",
 CellLabel->"Out[84]=",ExpressionUUID->"a6b2e062-f129-4664-bd8f-8cd08a89c245"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseMellinTransform", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Gamma", "[", "s", "]"}], 
    RowBox[{"Zeta", "[", "s", "]"}]}], ",", "s", ",", "x"}], "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"2ec2cdca-ce70-4a99-9050-6cb2198fb64f"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["\[ExponentialE]", "x"]}]]], "Output",
 CellLabel->"Out[3]=",ExpressionUUID->"1744bbaf-cc49-418e-bed5-a4387b7ae7a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "x"}], " ", "n"}]], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[108]:=",ExpressionUUID->"270229c2-1416-4616-94bd-b0effca53762"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["\[ExponentialE]", "x"]}]]], "Output",
 CellLabel->
  "Out[108]=",ExpressionUUID->"0be69b9f-e030-405d-b2e2-c441baa63636"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{"s", "-", "1"}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Re", "[", "s", "]"}], ">", "0"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"MellinTransform", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], ",", "x", ",", "s"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"InverseMellinTransform", "[", 
  RowBox[{
   RowBox[{"Gamma", "[", "s", "]"}], ",", "s", ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]], 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{"-", "s"}]], " ", 
     RowBox[{"Gamma", "[", "s", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "Infinity"}], ",", 
      RowBox[{"\[ImaginaryI]", " ", "Infinity"}]}], "}"}]}], 
   "]"}]}]}], "Input",ExpressionUUID->"8252add3-77af-4399-b238-b9658f985984"],

Cell[BoxData[
 RowBox[{"Gamma", "[", "s", "]"}]], "Output",
 CellLabel->"Out[26]=",ExpressionUUID->"02e88974-b81d-4de6-a759-ca0584d9f07f"],

Cell[BoxData[
 RowBox[{"Gamma", "[", "s", "]"}]], "Output",
 CellLabel->"Out[27]=",ExpressionUUID->"ee2d7290-1ce0-4668-9a4f-3755c81c5874"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", "x"}]]], "Output",
 CellLabel->"Out[28]=",ExpressionUUID->"a56797e3-17f7-45a5-bfdd-5d2006d07cbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", "\[Pi]", " ", "\[ImaginaryI]"}]], 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{"-", "s"}]], " ", 
     RowBox[{"Gamma", "[", "s", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", 
      RowBox[{"1", "-", 
       RowBox[{"\[ImaginaryI]", " ", "Infinity"}]}], ",", 
      RowBox[{"1", "+", 
       RowBox[{"\[ImaginaryI]", " ", "Infinity"}]}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"5d90be8a-4b25-4f0c-96f8-61abe01a6322"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      TagBox[
       RowBox[{
        TagBox[
         RowBox[{"(", 
          RowBox[{"-", "\[ImaginaryI]"}], ")"}],
         "DirectedInfinityCoefficient",
         Editable->True], " ", "\[Infinity]"}],
       DirectedInfinity,
       Editable->False], 
      TagBox[
       RowBox[{
        TagBox["\[ImaginaryI]",
         "DirectedInfinityCoefficient",
         Editable->True], " ", "\[Infinity]"}],
       DirectedInfinity,
       Editable->False]], 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"-", "s"}]], " ", 
       RowBox[{"Gamma", "[", "s", "]"}]}], 
      RowBox[{"\[DifferentialD]", "s"}]}]}]}], 
   RowBox[{"2", " ", "\[Pi]"}]]}]], "Output",
 CellLabel->"Out[25]=",ExpressionUUID->"7a63cbfb-9890-4ce8-b6dd-e6aeafb9062b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DirichletTransform", "[", 
  RowBox[{
   RowBox[{"DivisorSigma", "[", 
    RowBox[{"0", ",", "n"}], "]"}], ",", "n", ",", "s"}], "]"}]], "Input",Expr\
essionUUID->"aa9d2f4e-d2b6-40cb-96b7-85c169579bf5"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Zeta", "[", "s", "]"}], "2"]], "Output",
 CellLabel->"Out[1]=",ExpressionUUID->"ec0187c7-24ff-472e-9918-8fa3fbdef8a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DirichletTransform", "[", 
  RowBox[{
   RowBox[{"MangoldtLambda", "[", "n", "]"}], ",", "n", ",", "s"}], 
  "]"}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"db90b57a-c480-4185-ad1a-fc9ecc13b0c8"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["Zeta", "\[Prime]",
     MultilineFunction->None], "[", "s", "]"}], 
   RowBox[{"Zeta", "[", "s", "]"}]]}]], "Output",
 CellLabel->"Out[2]=",ExpressionUUID->"538e4c47-7211-4107-a227-00d913e4440a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseMellinTransform", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"Zeta", "[", "s", "]"}], "4"], 
    RowBox[{"Zeta", "[", 
     RowBox[{"2", "s"}], "]"}]], ",", "s", ",", "x"}], "]"}]], "Input",
 CellLabel->"In[32]:=",ExpressionUUID->"a944e4c8-9da4-4899-8308-b7c380044a4c"],

Cell[BoxData[
 RowBox[{"InverseMellinTransform", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox[
     RowBox[{"Zeta", "[", "s", "]"}], "4"], 
    RowBox[{"Zeta", "[", 
     RowBox[{"2", " ", "s"}], "]"}]], ",", "s", ",", "x"}], "]"}]], "Output",
 CellLabel->"Out[32]=",ExpressionUUID->"9dd3bdc1-3188-40d5-b0c7-6b697978350f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["tmp-1", "Section",ExpressionUUID->"27993ea5-e291-4fcf-802a-e9b5cd525f22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "4"}], 
     SuperscriptBox["\[Pi]", "2"]}], "7"], 
   RowBox[{"Sum", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"Zeta", "[", 
       RowBox[{"2", "k"}], "]"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "k"}], "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "k"}], "+", "2"}], ")"}], 
       SuperscriptBox["2", 
        RowBox[{"2", "k"}]]}]], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "//", 
  "N"}]], "Input",
 CellLabel->
  "In[125]:=",ExpressionUUID->"30e4362a-8d19-4151-a459-38954891e15b"],

Cell[BoxData["1.2020569062547903`"], "Output",
 CellLabel->
  "Out[125]=",ExpressionUUID->"4e24bc06-badf-4e74-9328-8814c2a8b2af"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Zeta", "[", "3", "]"}], "//", "N"}]], "Input",
 CellLabel->
  "In[126]:=",ExpressionUUID->"98423d18-a8e4-45a3-b0d3-839e9918a427"],

Cell[BoxData["1.2020569031595942`"], "Output",
 CellLabel->
  "Out[126]=",ExpressionUUID->"171c1485-49f3-4bbf-bbf2-4c7af6fea5b9"]
}, Closed]],

Cell[CellGroupData[{

Cell["tmp-2", "Section",ExpressionUUID->"0eac14ef-2d59-4845-85db-f8c7beb3182e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Aantal", " ", 
     RowBox[{"(", 
      RowBox[{"1", ",", "1"}], ")"}]}], " ", "<=", " ", "100"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PrimePi", "[", 
     FractionBox["100", "2"], "]"}], "-", "1"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PrimePi", "[", 
     FractionBox["100", "3"], "]"}], "-", "2"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PrimePi", "[", 
     FractionBox["100", "5"], "]"}], "-", "3"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PrimePi", "[", 
     FractionBox["100", "7"], "]"}], "-", "4"}]}]}]], "Input",ExpressionUUID->\
"a849d4ee-f2d3-47b8-92f4-716239a7b577"],

Cell[BoxData["14"], "Output",
 CellLabel->"Out[72]=",ExpressionUUID->"5bb2566b-b841-4324-b8a8-c811d149d669"],

Cell[BoxData["9"], "Output",
 CellLabel->"Out[73]=",ExpressionUUID->"12124aaa-1463-4c76-80cd-658d28ef4194"],

Cell[BoxData["5"], "Output",
 CellLabel->"Out[74]=",ExpressionUUID->"748f5c9a-964f-403c-8415-9083efb7c8a6"],

Cell[BoxData["2"], "Output",
 CellLabel->"Out[75]=",ExpressionUUID->"e9d968df-5154-4405-adbd-43f211329efd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrimePi", "[", 
   FractionBox["100", "4"], "]"}], "-", "1"}], "\[IndentingNewLine]", 
 RowBox[{"PrimePi", "[", 
  FractionBox["100", "9"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PrimePi", "[", 
  FractionBox["100", "25"], "]"}]}], "Input",
 CellLabel->
  "In[114]:=",ExpressionUUID->"0740a47e-29ed-4985-8a72-93160d7c1ec8"],

Cell[BoxData["8"], "Output",
 CellLabel->
  "Out[114]=",ExpressionUUID->"54aade74-a678-41be-962f-87c203f0459f"],

Cell[BoxData["5"], "Output",
 CellLabel->
  "Out[115]=",ExpressionUUID->"48d1b0a8-e2c5-4d35-9aae-76de6f473dd8"],

Cell[BoxData["2"], "Output",
 CellLabel->
  "Out[116]=",ExpressionUUID->"3c4f2b9f-d6e8-4a96-805e-868559d30408"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"IntegerPartitions", "[", "k", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"68d5b506-2436-482a-8780-81f9c8e84b38"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>", "\<\"\"\>"},
    {GridBox[{
       {"2"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"1"},
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "\<\"\"\>"},
    {GridBox[{
       {"3"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"2"},
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"1"},
       {"1"},
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{{1}}, {{2}, {1, 1}}, {{3}, {2, 1}, {1, 1, 1}}}]]], "Output",
 CellLabel->
  "Out[5]//TableForm=",ExpressionUUID->"4d41e224-a75a-4799-bcd1-effddd58755f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["tmp-3", "Section",ExpressionUUID->"8eb69f0a-c265-4fc5-a4b7-ca4e66a9dce0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tstMa", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "3", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", "4", "}"}], ",", 
     RowBox[{"{", "5", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tstMb", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "2", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "3", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"tstMc", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", "10"}], "}"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "2", "}"}], ",", "20"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", "30"}], "}"}]}], "}"}]}], 
     "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"tstM", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", 
         RowBox[{"{", "101", "}"}]}], "}"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "2", "}"}], ",", 
          RowBox[{"{", "20", "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", "30", "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Bouw", " ", "db", " ", "voor", " ", "Report", " ", "handmatig", " ", 
      RowBox[{"B", ".", "v", ".", " ", "voor"}], " ", "Levels", " ", "1"}], 
     "-", "4"}], ";"}], " ", "*)"}]}]}], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"b59d6e06-7d14-4075-811e-5d1b4147f80a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "2", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "3", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[7]=",ExpressionUUID->"40366847-7871-432f-b82b-f731f0c4bfb7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", "10"}], "}"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", "20"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", "30"}], "}"}]}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellLabel->"Out[8]=",ExpressionUUID->"86c132d7-07b7-4b12-8b97-9f07285f35e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "101", "}"}]}], "}"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "20", "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", "30", "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[9]=",ExpressionUUID->"f4d4a739-607c-4390-921b-ff08a6ec8e94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tM1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<\>\"", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "\"\<.\>\""}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tM2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<\>\"", ",", "2", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "\"\<.\>\"", ",", "\"\<.\>\""}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tM3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<\>\"", ",", "3", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "\"\<.\>\"", ",", "\"\<.\>\"", ",", "\"\<.\>\""}], 
      "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tM", "=", 
    RowBox[{"{", 
     RowBox[{"tM1", ",", "tM2", ",", "tM3"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Grid", "[", "tM1", "]"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", "tM2", "]"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Grid", "[", "tM3", "]"}], "}"}]}], "}"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"tM", "//", "Grid"}], "\[IndentingNewLine]", 
 RowBox[{"tM", "//", "TableForm"}]}], "Input",
 CellLabel->
  "In[118]:=",ExpressionUUID->"91177b14-3b6f-4104-882b-fa6a4f4466ff"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {"\<\"\"\>", "1"},
        {"1", "\<\".\"\>"}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {"\<\"\"\>", "2", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]},
        {"2", "\<\".\"\>", "\<\".\"\>"}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {"\<\"\"\>", "3", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}]},
        {"3", "\<\".\"\>", "\<\".\"\>", "\<\".\"\>"}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->
  "Out[122]=",ExpressionUUID->"1fb2a650-1977-44f7-a1b8-9d735d4f2ec6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"\<\"\"\>", ",", "1"}], "}"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "\<\".\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"\"\>", ",", "2", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"2", ",", "\<\".\"\>", ",", "\<\".\"\>"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"\<\"\"\>", ",", "3", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{"3", ",", "\<\".\"\>", ",", "\<\".\"\>", ",", "\<\".\"\>"}], 
      "}"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->
  "Out[123]=",ExpressionUUID->"6138f5ae-6b1c-4c32-a57f-8d0caaccba2d"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {"\<\"\"\>"},
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"1"},
       {"\<\".\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"\"\>", "\<\"\"\>"},
       {"2", "\<\"\"\>"},
       {"1", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"2"},
       {"\<\".\"\>"},
       {"\<\".\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {GridBox[{
       {"\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
       {"3", "\<\"\"\>", "\<\"\"\>"},
       {"2", "1", "\<\"\"\>"},
       {"1", "1", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"3"},
       {"\<\".\"\>"},
       {"\<\".\"\>"},
       {"\<\".\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{{"", 1}, {1, "."}}, {{"", 2, {1, 1}}, {2, ".", "."}}, {{
     "", 3, {2, 1}, {1, 1, 1}}, {3, ".", ".", "."}}}]]], "Output",
 CellLabel->
  "Out[124]//TableForm=",ExpressionUUID->"bd525ccb-9c68-418b-b95e-\
77140c471f04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "4"}], 
   SuperscriptBox["\[Pi]", "2"], 
   RowBox[{
    RowBox[{"Zeta", "'"}], "[", 
    RowBox[{"-", "2"}], "]"}]}], "//", "N"}]], "Input",
 CellLabel->
  "In[128]:=",ExpressionUUID->"406e9af7-f49d-456a-b32d-41e462737112"],

Cell[BoxData["1.2020569031595945`"], "Output",
 CellLabel->
  "Out[128]=",ExpressionUUID->"d0dae065-0899-4289-8a54-e855bf66eabe"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["tmp-4", "Section",ExpressionUUID->"91a5e561-a3d5-405d-9599-621acb255a90"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"IntegerPartitions", "[", "#", "]"}]}], "&"}], ",", 
      RowBox[{"Range", "[", "3", "]"}]}], "]"}], "//", "Association"}], "//", 
   "Dataset"}]}], "\[IndentingNewLine]", 
 RowBox[{"p", ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"FactorInteger", "[", "#", "]"}]}], "&"}], ",", 
      RowBox[{"Range", "[", "10", "]"}]}], "]"}], "//", "Association"}], "//",
    "Dataset"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"[", "6", "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"#", "&"}], ",", "f"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
  RowBox[{"[", "10", "]"}], "]"}]}], "Input",
 CellLabel->
  "In[311]:=",ExpressionUUID->"5ea66255-8476-44f4-9db7-7d5661d10018"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {1, 1}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 2], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 2, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{43., {32.634033098001964`, 38.365966901998036`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{43., {32.634033098001964`, 38.365966901998036`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[314]=",ExpressionUUID->"ccd4a19a-cdb4-479b-9e37-e1cc9b2e8dc3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {5, 1}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[34]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[Integer], 2], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 2, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{43., {32.634033098001964`, 38.365966901998036`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{43., {32.634033098001964`, 38.365966901998036`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[315]=",ExpressionUUID->"a5c27747-4df4-4f2a-9535-65bff3fc8eb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"p", "\[IndentingNewLine]", "f"}], "Input",
 CellLabel->
  "In[317]:=",ExpressionUUID->"2822b7f1-d943-4ada-b4e6-db73fd552693"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {{1}}, 2 -> {{2}, {1, 1}}, 3 -> {{3}, {2, 1}, {1, 1, 1}}|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 2, 
          DirectedInfinity[1], {All}]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
        TypeSystem`AnyLength], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 2, 
          DirectedInfinity[1], {All}]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
        TypeSystem`AnyLength], 3], "Path" -> {}, "DisplayedRowCount" -> 3, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 3, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{81., {83.13403309800196, 88.86596690199804}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{81., {83.13403309800196, 88.86596690199804}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[317]=",ExpressionUUID->"24940570-b977-449a-a882-5af24bd835a7"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {{1, 1}}, 2 -> {{2, 1}}, 3 -> {{3, 1}}, 4 -> {{2, 2}}, 
       5 -> {{5, 1}}, 6 -> {{2, 1}, {3, 1}}, 7 -> {{7, 1}}, 8 -> {{2, 3}}, 
       9 -> {{3, 2}}, 10 -> {{2, 1}, {5, 1}}|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 1, 
          DirectedInfinity[1], {All}]]], 10, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength], 10], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 1, 
          DirectedInfinity[1], {All}]]], 10, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength], 10], 
     "Path" -> {}, "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 10, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{5, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{5, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{7, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{7, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{81., {160.63403309800196`, 166.36596690199804`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{81., {160.63403309800196`, 166.36596690199804`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[318]=",ExpressionUUID->"5073efb2-cd3a-4964-a450-1ad50a17c672"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "&"}], ",", 
   RowBox[{"Dataset", "[", 
    RowBox[{"Association", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "->", 
         RowBox[{"FactorInteger", "[", "#", "]"}]}], "&"}], ",", 
       RowBox[{"Range", "[", "10", "]"}]}], "]"}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[332]:=",ExpressionUUID->"ca213c44-fff7-41dc-968d-ef74e58a5d54"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {1}, 2 -> {1}, 3 -> {1}, 4 -> {2}, 5 -> {1}, 6 -> {1, 1}, 7 -> {1},
        8 -> {3}, 9 -> {2}, 10 -> {1, 1}|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`UnknownShape[False]]], 10, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 10], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`UnknownShape[False]]], 10, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 10], "Path" -> {}, 
     "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     10, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{81., {140.63403309800196`, 146.36596690199804`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{81., {140.63403309800196`, 146.36596690199804`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[332]=",ExpressionUUID->"a6836e16-9116-463e-8070-8f8c9fb6ee82"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"p", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"IntegerPartitions", "[", "#", "]"}]}], "&"}], ",", 
      RowBox[{"Range", "[", "3", "]"}]}], "]"}], "//", "Association"}], "//", 
   "Dataset"}]}], "\[IndentingNewLine]", 
 RowBox[{"f", ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], "&"}], ",", 
    RowBox[{"Dataset", "[", 
     RowBox[{"Association", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "->", 
          RowBox[{"FactorInteger", "[", "#", "]"}]}], "&"}], ",", 
        RowBox[{"Range", "[", "10", "]"}]}], "]"}], "]"}], "]"}]}], 
   "]"}]}]}], "Input",
 CellLabel->
  "In[333]:=",ExpressionUUID->"6faf4c56-8a8a-4f79-95cd-a7fe55715c4e"],

Cell[CellGroupData[{

Cell[BoxData[{"p", "\[IndentingNewLine]", "f"}], "Input",
 CellLabel->
  "In[337]:=",ExpressionUUID->"e43fa3ae-13f0-4b81-964f-9560aceee46e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {{1}}, 2 -> {{2}, {1, 1}}, 3 -> {{3}, {2, 1}, {1, 1, 1}}|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 2, 
          DirectedInfinity[1], {All}]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
        TypeSystem`AnyLength], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 2, 
          DirectedInfinity[1], {All}]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
        TypeSystem`AnyLength], 3], "Path" -> {}, "DisplayedRowCount" -> 3, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 3, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{81., {83.13403309800196, 88.86596690199804}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{81., {83.13403309800196, 88.86596690199804}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[337]=",ExpressionUUID->"47101c13-4a1f-4be1-9cae-9c36770cc5ac"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {1}, 2 -> {1}, 3 -> {1}, 4 -> {2}, 5 -> {1}, 6 -> {1, 1}, 7 -> {1},
        8 -> {3}, 9 -> {2}, 10 -> {1, 1}|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`UnknownShape[False]]], 10, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 10], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`UnknownShape[False]]], 10, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 10], "Path" -> {}, 
     "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     10, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{81., {140.63403309800196`, 146.36596690199804`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{81., {140.63403309800196`, 146.36596690199804`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[338]=",ExpressionUUID->"f0ccd9c3-fe6c-416c-8911-ecb32aeb22b3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["tmp-5", "Section",ExpressionUUID->"16744f27-e851-44de-9fee-e736ce631986"],

Cell[CellGroupData[{

Cell["Pre-amble tmp-5", "Subsection",ExpressionUUID->"0cd18d76-9d52-4214-8cf2-49db18ece860"],

Cell[BoxData[
 RowBox[{"info", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"1", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1", "}"}], "->", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "5", ",", "7"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "2", "}"}], "->", 
          RowBox[{"{", 
           RowBox[{"4", ",", "9"}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], "->", 
          RowBox[{"{", 
           RowBox[{"6", ",", "10"}], "}"}]}]}], "}"}]}], ",", 
      RowBox[{"3", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "3", "}"}], "->", 
          RowBox[{"{", "8", "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}], "//", "Association"}], "//", 
   "Dataset"}]}]], "Input",
 CellLabel->
  "In[418]:=",ExpressionUUID->"e576d98b-d28e-49c2-9217-1e3581b6243d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"IntegerPartitions", "[", "#", "]"}]}], "&"}], ",", 
      RowBox[{"Range", "[", "3", "]"}]}], "]"}], "//", "Association"}], "//", 
   "Dataset"}]}], "\[IndentingNewLine]", "p", "\[IndentingNewLine]", 
 RowBox[{"f", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "->", 
        RowBox[{"FactorInteger", "[", "#", "]"}]}], "&"}], ",", 
      RowBox[{"Range", "[", "10", "]"}]}], "]"}], "//", "Association"}], "//",
    "Dataset"}]}], "\[IndentingNewLine]", "f", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"#", "&"}], ",", "f"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
   RowBox[{"[", "10", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"#", "&"}], ",", "f"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], ";"}]}], "Input",
 CellLabel->
  "In[411]:=",ExpressionUUID->"e5d83fbe-6026-43da-9c8a-16dbad50c4a3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {{1}}, 2 -> {{2}, {1, 1}}, 3 -> {{3}, {2, 1}, {1, 1, 1}}|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 2, 
          DirectedInfinity[1], {All}]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
        TypeSystem`AnyLength], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 2, 
          DirectedInfinity[1], {All}]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
        TypeSystem`AnyLength], 3], "Path" -> {}, "DisplayedRowCount" -> 3, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 3, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["3 total \:203a ", ""], 
                  Style[
                   Superscript["3 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{81., {83.13403309800196, 88.86596690199804}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{81., {83.13403309800196, 88.86596690199804}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[412]=",ExpressionUUID->"9d185394-b0ae-4810-9bc2-93e3e27d2b14"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {{1, 1}}, 2 -> {{2, 1}}, 3 -> {{3, 1}}, 4 -> {{2, 2}}, 
       5 -> {{5, 1}}, 6 -> {{2, 1}, {3, 1}}, 7 -> {{7, 1}}, 8 -> {{2, 3}}, 
       9 -> {{3, 2}}, 10 -> {{2, 1}, {5, 1}}|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 1, 
          DirectedInfinity[1], {All}]]], 10, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength], 10], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 1, 
          DirectedInfinity[1], {All}]]], 10, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Vector[
         TypeSystem`Atom[Integer], 2], TypeSystem`AnyLength], 10], 
     "Path" -> {}, "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 10, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{5, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{5, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{7, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{7, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3, 2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3, 2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["2 total \:203a ", ""], 
                  Style[
                   Superscript["2 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{81., {160.63403309800196`, 166.36596690199804`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{81., {160.63403309800196`, 166.36596690199804`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[414]=",ExpressionUUID->"8aa2e1f3-89d4-4c75-a1f1-235626765b26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "&"}], ",", 
   RowBox[{"Dataset", "[", 
    RowBox[{"Association", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "->", 
         RowBox[{"FactorInteger", "[", "#", "]"}]}], "&"}], ",", 
       RowBox[{"Range", "[", "10", "]"}]}], "]"}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[410]:=",ExpressionUUID->"ac9a6875-492f-40cc-8bed-49d8de213790"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {1}, 2 -> {1}, 3 -> {1}, 4 -> {2}, 5 -> {1}, 6 -> {1, 1}, 7 -> {1},
        8 -> {3}, 9 -> {2}, 10 -> {1, 1}|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`UnknownShape[False]]], 10, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 10], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`UnknownShape[False]]], 10, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], TypeSystem`AnyLength], 10], "Path" -> {}, 
     "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     10, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{81., {140.63403309800196`, 146.36596690199804`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{81., {140.63403309800196`, 146.36596690199804`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->
  "Out[410]=",ExpressionUUID->"8e86b686-69de-430b-9752-bcbaceddb6d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inf2", "=", 
  RowBox[{"info", "//", "Normal"}]}]], "Input",
 CellLabel->
  "In[469]:=",ExpressionUUID->"3ccfbe17-d216-4b54-bbfc-ad8ff2c39425"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "5", ",", "7"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "2", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"4", ",", "9"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"6", ",", "10"}], "}"}]}]}], "}"}]}], ",", 
   RowBox[{"3", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "3", "}"}], "\[Rule]", 
       RowBox[{"{", "8", "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->
  "Out[469]=",ExpressionUUID->"c21f5e16-e510-454d-9311-df74ccbad4ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "inf2", "]"}]], "Input",
 CellLabel->
  "In[480]:=",ExpressionUUID->"6f668242-c645-4355-9751-f50999743734"],

Cell[BoxData["Association"], "Output",
 CellLabel->
  "Out[480]=",ExpressionUUID->"df15e6c5-3c93-4aac-adab-6563d806fef7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Append", "[", 
  RowBox[{
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"inf2", "[", 
         RowBox[{"1", ";", "1"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "11"}], "]"}], ",", 
     "13"}], "]"}], ",", "17"}], "]"}]], "Input",
 CellLabel->
  "In[495]:=",ExpressionUUID->"a15caaa9-83fe-4d46-91a4-47ae595db19e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17"}], 
  "}"}]], "Output",
 CellLabel->
  "Out[495]=",ExpressionUUID->"fc1bab8b-165c-4d63-8925-6094459e0af3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["tmp 5.1 - Testing / Experimenting", "Subsection",ExpressionUUID->"241bd142-cde8-4684-b6ca-ca7a6ad353bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Log", "[", 
   RowBox[{"2", "\[Pi]"}], "]"}], "//", "N"}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"dea2ee0c-4e4f-44f0-9b18-18ba4afb2083"],

Cell[BoxData["1.8378770664093453`"], "Output",
 CellLabel->"Out[10]=",ExpressionUUID->"fea1af9e-901d-4c76-a388-0f2905d57916"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"Log", "[", "t", "]"}]], 
    FractionBox["1", 
     RowBox[{"t", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["t", "2"], "-", "1"}], ")"}]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"ZetaZero", "[", "5", "]"}], ",", "Infinity"}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"0344be43-6e24-4750-b0b9-2094d511c65f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.00010189089868972271`"}], "+", 
  RowBox[{"0.00003700539781332788`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellLabel->"Out[9]=",ExpressionUUID->"c5fac19f-a14b-4ed3-afec-92633d8efd7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DirichletTransform", "[", 
  RowBox[{
   RowBox[{"MangoldtLambda", "[", "n", "]"}], ",", "n", ",", "s"}], 
  "]"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"f8ada038-cfee-45f6-8c57-9579991ebc3b"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["Zeta", "\[Prime]",
     MultilineFunction->None], "[", "s", "]"}], 
   RowBox[{"Zeta", "[", "s", "]"}]]}]], "Output",
 CellLabel->"Out[11]=",ExpressionUUID->"476d8604-9c4f-4db4-aec3-8e4eaa7b6d98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", "131"}], "//", "N"}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"3803716e-3ab6-4b6a-93a0-59f3a4dc49d7"],

Cell[BoxData["0.007633587786259542`"], "Output",
 CellLabel->"Out[12]=",ExpressionUUID->"1c71962b-b1b1-45dc-a326-18444ed9e3a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InverseMellinTransform", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Log", "[", 
     RowBox[{"Zeta", "[", "s", "]"}], "]"}], "s"], ",", "s", ",", "x"}], 
  "]"}]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"06d97977-7946-47a3-9dcf-5655b6c3a86d"],

Cell[BoxData[
 RowBox[{"InverseMellinTransform", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Log", "[", 
     RowBox[{"Zeta", "[", "s", "]"}], "]"}], "s"], ",", "s", ",", "x"}], 
  "]"}]], "Output",
 CellLabel->"Out[13]=",ExpressionUUID->"77561ea0-b8e6-4b35-a3bc-12e9593cc88c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MellinTransform", "[", 
  RowBox[{
   RowBox[{"Floor", "[", "x", "]"}], ",", "x", ",", "s"}], "]"}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"d5c3ff5a-d576-4163-9249-74801a3583c0"],

Cell[BoxData[
 RowBox[{"MellinTransform", "[", 
  RowBox[{
   RowBox[{"Floor", "[", "x", "]"}], ",", "x", ",", "s"}], "]"}]], "Output",
 CellLabel->"Out[14]=",ExpressionUUID->"af3d502e-37c0-4aaa-be41-93ea50739288"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DirichletTransform", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "n"], ",", "n", ",", "s"}], "]"}]], "Input",
 CellLabel->"In[97]:=",ExpressionUUID->"9eb4b410-acba-4ae9-9e97-a986760b047b"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["2", 
       RowBox[{"1", "-", "s"}]]}], ")"}], " ", 
    RowBox[{"Zeta", "[", "s", "]"}]}], ")"}]}]], "Output",
 CellLabel->"Out[97]=",ExpressionUUID->"6e834e33-29f4-4972-a3d7-0b3c5140e103"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Zeta", "[", 
  RowBox[{"ZetaZero", "[", "115", "]"}], "]"}]], "Input",
 CellLabel->
  "In[106]:=",ExpressionUUID->"0c29745d-e6ab-4c2e-ab8f-0d23c1bfab28"],

Cell[BoxData["0"], "Output",
 CellLabel->
  "Out[106]=",ExpressionUUID->"92deadeb-e357-4b7a-a985-25659a256656"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DirichletEta", "[", 
  RowBox[{"ZetaZero", "[", "3", "]"}], "]"}]], "Input",
 CellLabel->
  "In[108]:=",ExpressionUUID->"2f61d6f2-6624-4bdf-8f3e-c0204d7e6e5e"],

Cell[BoxData["0"], "Output",
 CellLabel->
  "Out[108]=",ExpressionUUID->"3b76a36a-ca3b-4da6-9be8-57b34e565775"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DirichletTransform", "[", 
  RowBox[{
   RowBox[{"MangoldtLambda", "[", "n", "]"}], ",", "n", ",", "s"}], 
  "]"}]], "Input",
 CellLabel->
  "In[115]:=",ExpressionUUID->"61b99e57-9477-473f-bdab-b0e8da68cf60"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["Zeta", "\[Prime]",
     MultilineFunction->None], "[", "s", "]"}], 
   RowBox[{"Zeta", "[", "s", "]"}]]}]], "Output",
 CellLabel->
  "Out[115]=",ExpressionUUID->"b67a782b-30ef-4561-9630-66c6df903d75"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["tmp-6", "Section",ExpressionUUID->"c9310061-0694-46aa-b22b-ee02ad5b3e1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"Zeta", "[", 
   RowBox[{"ZetaZero", "[", "100", "]"}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[113]:=",ExpressionUUID->"13b912c4-3676-4811-8caf-67a373113560"],

Cell[BoxData[
 RowBox[{"-", "\[Infinity]"}]], "Output",
 CellLabel->
  "Out[113]=",ExpressionUUID->"b5ec00cd-1e6c-4693-9260-4d1d0bf6761a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Log", "[", "0", "]"}]], "Input",
 CellLabel->
  "In[114]:=",ExpressionUUID->"da1a00d1-e536-4779-92fe-a71f07779c40"],

Cell[BoxData[
 RowBox[{"-", "\[Infinity]"}]], "Output",
 CellLabel->
  "Out[114]=",ExpressionUUID->"b425c9d6-0dee-4d39-b42a-a3b28b80f487"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["tmp-7", "Section",ExpressionUUID->"00aaede4-2441-4528-ae9a-bfe818258fe2"],

Cell[CellGroupData[{

Cell["Stan Wagon Interpretation", "Subsection",ExpressionUUID->"83fbd569-3a61-4df5-8711-c72e7aab75d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pi0", "[", "x", "]"}], ":=", 
   RowBox[{
    RowBox[{"1", "/", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"PrimePi", "[", 
       RowBox[{"x", "+", "0.001"}], "]"}], "+", 
      RowBox[{"PrimePi", "[", 
       RowBox[{"x", "-", "0.001"}], "]"}]}], ")"}]}]}], ";"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"92c08feb-c49f-436f-9256-a1b8ce9ebfcf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RiemannR", "[", "x", "]"}], ",", 
     RowBox[{"pi0", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "30"}], "}"}], ",", 
   RowBox[{"PlotPoints", "->", "30"}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thick", ",", 
        RowBox[{"Lighter", "[", "Red", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.004", "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Exclusions", "->", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "==", "#"}], "&"}], ")"}], "/@", 
     RowBox[{"Prime", "[", 
      RowBox[{"Range", "[", "10", "]"}], "]"}]}]}], ",", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Prime", "[", "i", "]"}], ",", 
           RowBox[{"i", "-", 
            RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"6247a021-1292-4e61-918a-7ee846e5070f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 
       NCache[
        Rational[1, 3], 0.3333333333333333], 
       NCache[
        Rational[1, 3], 0.3333333333333333]], Thickness[Large], Opacity[1.], 
      LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAA6uxj0hFbsT7bqZ0JhfV9P7X64iRU
148/K/zjW79Lvj8lsZu4DtefP0ShmVGXf8Q/ePJirznhpz+EIhHWB7HIP10M
eALs1q8/OqE4YyJMzD8hk8YqT+azP9NpsOsSiM8/FCBRVCjhtz8aOSqKYkDR
P/k5Zqfa1r8/K8kcvTTy0z92Y3jo2ejBP8owY9KvMNU/76k9fUbmwz8cD6yv
cmHWP+I2yKYf4cc/lyM/Fmmh2D/HUN350dbPP7L0X60rvdw/oEtRRx/q0D/5
6YKIAbTdP93us5HV6NE/rvcc44ml3j9WNXkmQubTP35hiUouPeA/ScIDUBvh
1z9/B4QxB/rhPy7cGKPN1t8/Qx2XM9wr5T+2v732wWrgP3pn7wvKjOU/VBHv
Gx3q4D9A7f0CuOzlP5C0UWbT6OE/qQxfKL+p5j8K+xb7P+bjP084izZ/Geg/
/IehJBnh5z8Y3u8VNtbqP+KhtnfL1u8/Cmf0J+7m7z9upq6BbjDwP5BaQGVj
HfA/7PuBR3d18D/Nh018F0fwP+amKNOI//A/6FszNdyZ8D/c/HXqqxPyP2kj
EaH5PPE/yKgQGfI79D8vK+fSb3ryP54ARnZ+jPg/mA0cBwTY9D+x3NMIy73/
P3Pako9Nh/g/zJj7ag==
       "]], 
      LineBox[{{2.0161637931034484`, 1.5489664196144857`}, {
       2.9838362068965516`, 1.9975669666216889`}}], 
      LineBox[{{3.0161637931034484`, 2.0117757906844247`}, {4.068232543577511,
        2.4543413655368957`}, {4.983836206896552, 2.8149668220927957`}}], 
      LineBox[{{5.016163793103448, 2.827366939310971}, {6.138979536012785, 
       3.2464125578548275`}, {6.983836206896551, 3.548982127359212}}], 
      LineBox[{{7.0161637931034475`, 3.5603726523608596`}, {8.285871491637693,
        3.998256133975959}, {9.277958037542811, 4.329102310344008}, {
       10.353735996659132`, 4.678471213278707}, {10.983836206896552`, 
       4.879109086521022}}], 
      LineBox[{{11.016163793103448`, 4.889329245360494}, {12.342573051077101`,
        5.302944476226017}, {12.983836206896552`, 5.499199347978746}}], 
      LineBox[{{13.016163793103448`, 5.509033573351859}, {14.407555068684704`,
        5.927262426424405}, {15.487996990408757`, 6.245755645694852}, {
       16.54868204948194, 6.553638413204614}, {16.98383620689655, 
       6.678675183550944}}], 
      LineBox[{{17.01616379310345, 6.687935786962462}, {18.610781579675706`, 
       7.140113922546056}, {18.98383620689655, 7.244656466080683}}], 
      LineBox[{{19.01616379310345, 7.253694630748481}, {20.69730193512807, 
       7.719283816523225}, {21.762650956808987`, 8.010105486360738}, {
       22.756518977908, 8.27868566349819}, {22.98383620689655, 
       8.339762023083065}}], 
      LineBox[{{23.01616379310345, 8.348437489915648}, {24.840156845946527`, 
       8.833886513265721}, {25.826478417023974`, 9.093253801686341}, {
       26.89649140131262, 9.37230400630027}, {27.895023385019364`, 
       9.630639965140423}, {28.97724678193731, 9.908481460276667}, {
       28.983836206896548`, 9.910166560028163}}], LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAANMJyTyMEPUAqBF/IPNYjQC4XIjvn
Gj1AjsUZ0d/hI0Cco+udoTs9QFhG0EmX8iNAd7x+YxZ9PUB6pzi7+hMkQATu
168tgT1AIiDDcBAWJECSHzH8RIU9QHDeIBcmGCRAroLjlHONPUAkYmE2URwk
QORISMbQnT1AI85Ev6YkJEBS1REpi749QLp+BP1ONSRA4AZrdaLCPUA9yRHB
YzckQG44xMG5xj1A+Mgedng5JECJm3Za6M49QGrkQrOhPSRAwGHbi0XfPUD5
QAB680UkQE6TNNhc4z1A0fBXxgdIJEDcxI0kdOc9QMg3xQMcSiRA9ydAvaLv
PUA/a+tRRE4kQIRZmQm68z1AssWpYlhQJEASi/JV0fc9QBqTiGRsUiRAoLxL
ouj7PUBHiIpXgFQkQC7upO7//z1AHlmyO5RWJEDs+4oP
       "]]},
     Annotation[#, "Charting`Private`Tag$83407#1"]& ], {}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[0.01], 
    PointBox[
     NCache[{{2, 
        Rational[1, 2]}, {3, 
        Rational[3, 2]}, {5, 
        Rational[5, 2]}, {7, 
        Rational[7, 2]}, {11, 
        Rational[9, 2]}, {13, 
        Rational[11, 2]}, {17, 
        Rational[13, 2]}, {19, 
        Rational[15, 2]}, {23, 
        Rational[17, 2]}, {29, 
        Rational[19, 2]}}, {{2, 0.5}, {3, 1.5}, {5, 2.5}, {7, 3.5}, {
       11, 4.5}, {13, 5.5}, {17, 6.5}, {19, 7.5}, {23, 8.5}, {29, 9.5}}]]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 30}, {0., 10.169099679490099`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[19]=",ExpressionUUID->"018c75c8-53df-4392-8a55-a044dc3a1d9c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rho", "=", 
   RowBox[{"N", "[", 
    RowBox[{"ZetaZero", "[", 
     RowBox[{"Range", "[", "100", "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muValues", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MoebiusMu", "[", "n", "]"}], "/", "n"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "154"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"muIndices", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Position", "[", 
     RowBox[{"muValues", ",", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "!=", "0"}], "&"}], ")"}]}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mu", "=", 
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"muValues", "[", 
     RowBox[{"[", "muIndices", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "[", 
   RowBox[{"x_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"mu", ".", 
   RowBox[{"Re", "[", 
    RowBox[{"ExpIntegralEi", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"rho", "[", 
         RowBox[{"[", "k", "]"}], "]"}], 
        RowBox[{"Log", "[", 
         RowBox[{"N", "[", "x", "]"}], "]"}]}], ")"}], "/", "muIndices"}], 
     "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "T", "]"}], "=", "Listable"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"domain", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"12.", ",", "100", ",", 
     RowBox[{"88", "/", "200"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"T", "[", 
      RowBox[{"domain", ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "100"}], "}"}]}], "]"}]}], ";"}]}], "Input",Expression\
UUID->"af45c476-2230-4790-8f14-6cad2b51bb7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"domain", ",", 
        RowBox[{"TData", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"Axes", "->", "False"}], ",", 
     RowBox[{"PlotStyle", "->", "Thick"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "100", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[82]:=",ExpressionUUID->"bf8cc756-5c2e-4f21-b746-3e613f1de82b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 100, 1}}, Typeset`size$$ = {
    360., {109., 113.10205752535714`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListLinePlot[
        Transpose[{$CellContext`domain, 
          Part[$CellContext`TData, $CellContext`i$$]}], Frame -> True, Axes -> 
        False, PlotStyle -> Thick, PlotRange -> {-0.5, 0.5}], 
      "Specifications" :> {{$CellContext`i$$, 1, 100, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{627., {139.134033203125, 144.865966796875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellLabel->"Out[82]=",ExpressionUUID->"d4326fd2-e499-4001-9577-4c78801ba08f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RiemannData", "=", 
    RowBox[{
     RowBox[{"RiemannR", "[", "domain", "]"}], "+", 
     RowBox[{
      FractionBox["1", "\[Pi]"], 
      RowBox[{"ArcTan", "[", 
       RowBox[{"Pi", "/", 
        RowBox[{"Log", "[", "domain", "]"}]}], "]"}]}], "-", 
     RowBox[{"1", "/", 
      RowBox[{"Log", "[", "domain", "]"}]}]}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TDataEnhanced", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"domain", ",", "ss"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ss", ",", 
       RowBox[{"FoldList", "[", 
        RowBox[{"Plus", ",", "RiemannData", ",", "TData"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellLabel->"In[90]:=",ExpressionUUID->"106a75df-4713-4a93-a753-19eb806fa455"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pi0Plot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pi0", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "100"}], "}"}], ",", 
     RowBox[{"PlotPoints", "->", "100"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.006", "]"}]}], "}"}]}], ",", 
     RowBox[{"Exclusions", "->", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "==", "#"}], "&"}], ")"}], "/@", 
       RowBox[{"Prime", "[", 
        RowBox[{"Range", "[", "25", "]"}], "]"}]}]}], ",", 
     RowBox[{"Epilog", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", "Red", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Prime", "[", "i", "]"}], ",", 
             RowBox[{"i", "-", 
              RowBox[{"1", "/", "2"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "25"}], "}"}]}], "]"}], "]"}]}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[93]:=",ExpressionUUID->"a249a91b-e5a9-46a7-9dcf-4037411eb193"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"pi0Plot", ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"TDataEnhanced", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Blue"}], "}"}]}]}], 
      "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Prime", "[", "i", "]"}], ",", 
             RowBox[{"i", "-", 
              RowBox[{"1", "/", "2"}]}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "25"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"20", ",", "100", ",", "10"}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"10", ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "27"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "->", 
      RowBox[{"{", 
       RowBox[{"10", ",", "5"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "50", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellLabel->"",ExpressionUUID->"741d2194-bd04-44d0-bdc6-24867ff854ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"pi0Plot", ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"TDataEnhanced", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Blue"}], "}"}]}]}], 
      "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Prime", "[", "i", "]"}], ",", 
             RowBox[{"i", "-", 
              RowBox[{"1", "/", "2"}]}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "25"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Ticks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"20", ",", "100", ",", "10"}], "]"}], ",", "Automatic"}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"10", ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "27"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "->", 
      RowBox[{"{", 
       RowBox[{"10", ",", "5"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "50", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[95]:=",ExpressionUUID->"4bed9573-edd7-4d93-a69f-9557991e93c4"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 39, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 50, 1}}, Typeset`size$$ = {
    360., {108., 113.1067732570761}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[$CellContext`pi0Plot, 
        ListLinePlot[
         Part[$CellContext`TDataEnhanced, $CellContext`i$$], PlotStyle -> {
           Thickness[0.005], Blue}], 
        Graphics[{
          PointSize[0.01], 
          Table[
           Point[{
             Prime[$CellContext`i$$], $CellContext`i$$ - 1/
             2}], {$CellContext`i$$, 25}]}], Ticks -> {
          Range[20, 100, 10], Automatic}, PlotRange -> {{10, 100}, {5, 27}}, 
        AxesOrigin -> {10, 5}], 
      "Specifications" :> {{$CellContext`i$$, 1, 50, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{627., {139.134033203125, 144.865966796875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellLabel->"Out[95]=",ExpressionUUID->"39b1206a-0520-4129-aee0-e22d9a1fd21f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Testing...", "Subsection",ExpressionUUID->"2d08a09a-8875-4aac-b9b4-cce2a60c7ad4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"int", "[", "s", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"Zeta", "'"}], "[", "s", "]"}], 
     RowBox[{"Zeta", "[", "s", "]"}]]}], 
   FractionBox[
    SuperscriptBox["x", "s"], "s"]}]}]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"a713cd2a-49d3-4866-ac20-a3c5ea7dd62d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Residue", "[", 
  RowBox[{
   RowBox[{"int", "[", "s", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "0"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Residue", "[", 
  RowBox[{
   RowBox[{"int", "[", "s", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"f324b9fa-262c-4505-9996-940214c4a52c"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Log", "[", 
   RowBox[{"2", " ", "\[Pi]"}], "]"}]}]], "Output",
 CellLabel->"Out[18]=",ExpressionUUID->"eae44463-8efb-4016-a79b-f77a29eeee6c"],

Cell[BoxData["x"], "Output",
 CellLabel->"Out[19]=",ExpressionUUID->"8660f31f-2c16-4b25-9650-dafcb05cdfbf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"int", "[", 
  RowBox[{"f", "[", "t", "]"}], "]"}]], "Input",ExpressionUUID->"8f981e09-\
4292-4afb-8139-dff0a53fe636"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["tmp-8: \[Psi] Function", "Section",ExpressionUUID->"93d46b48-3d2f-4354-8d43-e1ddacbd8486"],

Cell[CellGroupData[{

Cell["Step", "Subsection",ExpressionUUID->"0eca23eb-e1ba-4c33-92fe-e4a031839e64"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListStepPlot", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"MangoldtLambda", "[", "n", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "30"}], "}"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[34]:=",ExpressionUUID->"5c470804-dda5-460c-9dd4-7b64c6f1b3e0"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxdkj1Lw1AUhoMNrR+DgoqCQm39tjW2aZsmbTRHZxddBEfByaHgWJBOburi
6i8QdOngqrMo+BsEBUGMIIgBWzXn9gTfAyF5efLccy6c1E5tc7dL0zT39/l7
c/le5+usHZZkVfTmBK0148m7D3FCMuNu6otd1F9O3xXvl8x8QP5/Dvkg+ENU
OH79XL3+UnxEMvNR6gzCfIy0fzVOW9vm5X66rfykZOYT0u8j5Cnon5Z5mU/C
/FPSj/k09J+h9XLj6tGIEfNZycznwJ8Hf4E2jvIZ/VBXfkYy8yz4i+AbwJeA
5+S+QchzcP881RvBzd55nJhHmbkp5zE34fwCZZt63DpJKD/KzIvgF8EvAS8B
t4BbwMvkNx++D4Z7VP8oM7fBt8F3ZN+YO7B/FfAr4FdlX5hXYX9c8F3wlynZ
uru1/V41f5SZr8D/nuQf8DJGeg==
       "]]}}, {{}, {}}}, {{}, 
    {Opacity[0], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7BlQgcN7y1//nPSeQcU5HLiZ11a9mvwRyhdA
kxdxMO59+93xwE8oX8IB1TgZh/Aoo3VFSv+h8gpo+pXQzFdB06/m4GNev/2x
HjNUXANNXsshsMdQm6WVBSqugyavh8Y3QLPf0KGq/tfB7FVsUHVGaOqNHXQ2
s7CZ9bFDxU3Q5E3R+GZofHOHD5sv/q0V5YSKW6DJW6KFnxWavDVa+Nigyds6
yP87e9riAxdU3A4uDwBP+k4s
      "]]}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 31.}, {0, 3.367295829986474}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[34]=",ExpressionUUID->"b31e4987-1cd4-4b5d-94a0-df0280d48810"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Step Accumulate", "Subsection",ExpressionUUID->"ffac5d68-7d87-414f-82e5-323284a81c58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListStepPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Riffle", "[", 
           RowBox[{
            RowBox[{"Range", "[", "a", "]"}], ",", 
            RowBox[{"Simplify", "[", 
             RowBox[{"Accumulate", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"MangoldtLambda", "[", "n", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", "a"}], "}"}]}], "]"}], "]"}], "]"}]}], 
           "]"}], ",", "2"}], "]"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", "Black", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"x", "-", 
         RowBox[{"Log", "[", 
          RowBox[{"2", "Pi"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "a"}], "}"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", "Dashed"}], "}"}]}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "30"}], "}"}], ",", "10", ",", "100", ",", "5"}], 
    "}"}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Bottom"}]}], "\[IndentingNewLine]",
   "]"}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"0cbef729-a7d2-4e5e-ac7c-7ced5ae93c58"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 75, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 30}, 10, 100, 5}}, Typeset`size$$ = {
    270., {84., 87.09492822159689}}, Typeset`update$$ = 0, Typeset`initDone$$,
     Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 30}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[{
         ListStepPlot[
          Partition[
           Riffle[
            Range[$CellContext`a$$], 
            Simplify[
             Accumulate[
              Table[
               MangoldtLambda[NumberTheory`n], {
               NumberTheory`n, $CellContext`a$$}]]]], 2], 
          PlotStyle -> {Black}], 
         Plot[
         NumberTheory`x - Log[2 Pi], {NumberTheory`x, 0, $CellContext`a$$}, 
          PlotStyle -> {Blue, Dashed}]}], 
      "Specifications" :> {{{$CellContext`a$$, 30}, 10, 100, 5}}, 
      "Options" :> {ControlPlacement -> Bottom}, "DefaultOptions" :> {}],
     ImageSizeCache->{309., {119.35052490234375`, 123.64947509765625`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellLabel->"Out[5]=",ExpressionUUID->"10863205-d440-43ff-869e-18cdb33a8e53"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SmoothStep", "Subsection",ExpressionUUID->"04fbe04a-f87e-4718-bf5c-edd6c60db9e1"],

Cell["[ TBD ]", "Text",ExpressionUUID->"b79ab275-e748-482b-a92b-bcf45e7eca71"],

Cell[BoxData["1."], "Input",ExpressionUUID->"1e10154e-4599-486b-9a0e-719fc34fc8ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Otherwise", "Subsection",ExpressionUUID->"1a18052e-cd8c-4232-ab98-5256ef4ba350"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "[", "z_", "]"}], ":=", 
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["z", "3"], "-", 
    RowBox[{"3", 
     SuperscriptBox["z", "2"]}], "+", 
    RowBox[{"2", "z"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cContourIntegral", "[", 
    RowBox[{
     RowBox[{"g", "[", "z", "]"}], ",", "z", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"4", "I"}]}], "}"}]}], "]"}], "+", 
   RowBox[{"cContourIntegral", "[", 
    RowBox[{
     RowBox[{"g", "[", "z", "]"}], ",", "z", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"4", "I"}], ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}], "+", 
   RowBox[{"cContourIntegral", "[", 
    RowBox[{
     RowBox[{"g", "[", "z", "]"}], ",", "z", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{
        RowBox[{"-", "4"}], "I"}]}], "}"}]}], "]"}], "+", 
   RowBox[{"cContourIntegral", "[", 
    RowBox[{
     RowBox[{"g", "[", "z", "]"}], ",", "z", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], "I"}], ",", "3"}], "}"}]}], "]"}]}], "//", 
  "N"}]}], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"6daf9dc9-6f27-4898-a887-63c01c2004eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "3.3306690738754696`*^-16"}], "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellLabel->"Out[14]=",ExpressionUUID->"0464c846-420a-49fa-bc67-c24283c96b34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Residue", "[", 
  RowBox[{
   RowBox[{"g", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Residue", "[", 
  RowBox[{
   RowBox[{"g", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Residue", "[", 
  RowBox[{
   RowBox[{"g", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0"}], "}"}]}], "]"}]}], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"f2dfd617-0018-4d25-a69b-4c5f8fa314b0"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellLabel->"Out[21]=",ExpressionUUID->"cea32020-b932-4a2d-88a4-250c21c5e412"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellLabel->"Out[22]=",ExpressionUUID->"b5ee7c90-2d44-442d-9607-f0b98fef9f2f"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellLabel->"Out[23]=",ExpressionUUID->"a2f52f90-1794-45ae-9c91-c4cd3e103e81"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculate Integral", "Subsection",ExpressionUUID->"d99c4535-2ff1-4051-9c69-fde3dd3a60b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"Zeta", "'"}], "[", "z", "]"}], 
     RowBox[{"Zeta", "[", "z", "]"}]]}], 
   FractionBox[
    SuperscriptBox["x", "z"], "z"]}]}]], "Input",
 CellLabel->
  "In[113]:=",ExpressionUUID->"4282061c-a832-4089-9c1f-2d2fe60f3a69"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"int", "[", 
   RowBox[{"a_", ",", "c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"cContourIntegral", "[", 
    RowBox[{
     RowBox[{"h", "[", "z", "]"}], ",", "z", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c", "-", 
        RowBox[{"I", " ", "t"}]}], ",", 
       RowBox[{"c", "+", 
        RowBox[{"I", " ", "t"}]}]}], "}"}]}], "]"}], "+", 
   RowBox[{"cContourIntegral", "[", 
    RowBox[{
     RowBox[{"h", "[", "z", "]"}], ",", "z", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c", "+", 
        RowBox[{"I", " ", "t"}]}], ",", 
       RowBox[{"a", "+", 
        RowBox[{"I", " ", "t"}]}]}], "}"}]}], "]"}], "+", 
   RowBox[{"cContourIntegral", "[", 
    RowBox[{
     RowBox[{"h", "[", "z", "]"}], ",", "z", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "+", " ", 
        RowBox[{"I", " ", "t"}]}], ",", 
       RowBox[{"a", "-", 
        RowBox[{"I", " ", "t"}]}]}], "}"}]}], "]"}], "+", 
   RowBox[{"cContourIntegral", "[", 
    RowBox[{
     RowBox[{"h", "[", "z", "]"}], ",", "z", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "-", 
        RowBox[{"I", " ", "t"}]}], ",", 
       RowBox[{"c", "-", 
        RowBox[{"I", " ", "t"}]}]}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"int1", "[", 
   RowBox[{"a_", ",", "c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"cContourIntegral", "[", 
   RowBox[{
    RowBox[{"h", "[", "z", "]"}], ",", "z", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "-", 
       RowBox[{"I", " ", "t"}]}], ",", 
      RowBox[{"c", "+", 
       RowBox[{"I", " ", "t"}]}]}], "}"}]}], "]"}]}]}], "Input",
 CellLabel->"In[50]:=",ExpressionUUID->"f1988eca-20b4-4966-976a-707c0a5b03c8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"int1", "[", 
   RowBox[{"a_", ",", "c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"cContourIntegral", "[", 
   RowBox[{
    RowBox[{"h", "[", "z", "]"}], ",", "z", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "-", 
       RowBox[{"I", " ", "t"}]}], ",", 
      RowBox[{"c", "+", 
       RowBox[{"I", " ", "t"}]}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"int1", "[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", "2", ",", "14"}], "]"}], "//", "N"}]}], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"84f4029b-880c-4bc6-9402-cbce43f0f17d"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"28.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    SuperscriptBox["x", "s"], " ", 
    RowBox[{
     SuperscriptBox["Zeta", "\[Prime]",
      MultilineFunction->None], "[", "s", "]"}]}], 
   RowBox[{"s", " ", 
    RowBox[{"Zeta", "[", "s", "]"}]}]]}]], "Output",
 CellLabel->"Out[32]=",ExpressionUUID->"d123d0a5-4bca-4a03-b95b-df9fdc8556a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"int1", "[", 
   RowBox[{"a_", ",", "c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"cContourIntegral", "[", 
   RowBox[{
    RowBox[{"h", "[", "z", "]"}], ",", "z", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "-", 
       RowBox[{"I", " ", "t"}]}], ",", 
      RowBox[{"c", "+", 
       RowBox[{"I", " ", "t"}]}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"int2", "[", 
   RowBox[{"a_", ",", "c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"cContourIntegral", "[", 
   RowBox[{
    RowBox[{"h", "[", "z", "]"}], ",", "z", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "+", 
       RowBox[{"I", " ", "t"}]}], ",", 
      RowBox[{"a", "+", 
       RowBox[{"I", " ", "t"}]}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"int3", "[", 
   RowBox[{"a_", ",", "c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"cContourIntegral", "[", 
   RowBox[{
    RowBox[{"h", "[", "z", "]"}], ",", "z", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "+", " ", 
       RowBox[{"I", " ", "t"}]}], ",", 
      RowBox[{"a", "-", 
       RowBox[{"I", " ", "t"}]}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"int4", "[", 
   RowBox[{"a_", ",", "c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"cContourIntegral", "[", 
   RowBox[{
    RowBox[{"h", "[", "z", "]"}], ",", "z", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", "-", 
       RowBox[{"I", " ", "t"}]}], ",", 
      RowBox[{"c", "-", 
       RowBox[{"I", " ", "t"}]}]}], "}"}]}], "]"}]}]}], "Input",ExpressionUUID\
->"253307f2-34a1-4783-86e6-015fc4ac11f0"],

Cell[BoxData["$Aborted"], "Output",
 CellLabel->"Out[39]=",ExpressionUUID->"26b6ea59-360e-441b-97dc-6c5e59c1c407"],

Cell[BoxData["$Aborted"], "Output",
 CellLabel->"Out[40]=",ExpressionUUID->"27f940bb-a968-47c4-8be4-3fea9e0d339e"],

Cell[BoxData["$Aborted"], "Output",
 CellLabel->"Out[41]=",ExpressionUUID->"4f63ea25-4aaa-4936-9b21-6637e751eca6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"int1", "[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", "2", ",", "14"}], "]"}], "//", "N"}]], "Input",Ex\
pressionUUID->"14080954-84ad-47fd-8592-872242637a4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"h", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"2", "+", 
      RowBox[{"13", "I"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"14", "I"}]}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[54]:=",ExpressionUUID->"1ad90270-719d-42bf-af20-a2d7eb7f62b4"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"-\\\", \
FractionBox[RowBox[{SuperscriptBox[\\\"x\\\", \\\"z\\\"], \\\" \\\", \
RowBox[{SuperscriptBox[\\\"Zeta\\\", \\\"\[Prime]\\\", \
Rule[MultilineFunction, None]], \\\"[\\\", \\\"z\\\", \\\"]\\\"}]}], RowBox[{\
\\\"z\\\", \\\" \\\", RowBox[{\\\"Zeta\\\", \\\"[\\\", \\\"z\\\", \
\\\"]\\\"}]}]]}]\\) has evaluated to non-numerical values for all sampling \
points in the region with boundaries \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"2\\\", \\\"+\\\", RowBox[{\\\"13\\\", \
\\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\",\\\", RowBox[{\\\"2\\\", \
\\\"+\\\", RowBox[{\\\"14\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]}], \
\\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 54, 5, 23073768020418037070, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[54]:=",ExpressionUUID->"61be9963-a2bf-4dc6-8470-ff0fa5817cc1"],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"h", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"2", "+", 
      RowBox[{"13", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"14", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "]"}]], "Output",
 CellLabel->"Out[54]=",ExpressionUUID->"b59ab386-e73d-4389-9563-f9dd512ede54"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "[", "z_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"Zeta", "'"}], "[", "z", "]"}], 
     RowBox[{"Zeta", "[", "z", "]"}]]}], 
   FractionBox[
    SuperscriptBox["x", "z"], "z"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"t", "-", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", 
      RowBox[{"14", "I"}]}], ")"}]}], "+", 
   RowBox[{"t", 
    RowBox[{"(", 
     RowBox[{"4", "+", 
      RowBox[{"14", "I"}]}], ")"}]}]}]}]}], "Input",
 CellLabel->"In[55]:=",ExpressionUUID->"3862ba34-7b87-4fa8-b9a4-0e64cab273b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"h", "[", 
     RowBox[{"l", "[", "t", "]"}], "]"}], 
    RowBox[{
     RowBox[{"l", "'"}], "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[58]:=",ExpressionUUID->"645fd7cf-4ce0-47c8-b931-be00a2dcc65b"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "inumr", 
   "\"The integrand \\!\\(\\*RowBox[{\\\"-\\\", \
FractionBox[RowBox[{\\\"28\\\", \\\" \\\", \\\"\[ImaginaryI]\\\", \\\" \\\", \
SuperscriptBox[\\\"x\\\", RowBox[{RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{\
\\\"-\\\", \\\"4\\\"}], \\\"+\\\", RowBox[{\\\"14\\\", \\\" \\\", \\\"\
\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\"+\\\", \\\"t\\\"}], \
\\\")\\\"}]}], \\\"+\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"4\\\", \\\"+\
\\\", RowBox[{\\\"14\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \
\\\" \\\", \\\"t\\\"}]}]], \\\" \\\", RowBox[{SuperscriptBox[\\\"Zeta\\\", \\\
\"\[Prime]\\\", Rule[MultilineFunction, None]], \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"4\\\"}], \\\
\"+\\\", RowBox[{\\\"14\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \
\\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \\\"1\\\
\"}], \\\"+\\\", \\\"t\\\"}], \\\")\\\"}]}], \\\"+\\\", RowBox[{RowBox[{\\\"(\
\\\", RowBox[{\\\"4\\\", \\\"+\\\", RowBox[{\\\"14\\\", \\\" \\\", \\\"\
\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \\\", \\\"t\\\"}]}], \\\"]\\\"}]}], \
RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"4\\\"}], \\\"+\\\", RowBox[{\\\"14\\\", \\\" \
\\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\"+\\\", \\\"t\\\"}], \
\\\")\\\"}]}], \\\"+\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"4\\\", \\\"+\
\\\", RowBox[{\\\"14\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \
\\\" \\\", \\\"t\\\"}]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"Zeta\\\", \\\"[\
\\\", RowBox[{RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"4\\\"}], \\\"+\\\", RowBox[{\\\"14\\\", \\\" \\\", \
\\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"1\\\"}], \\\"+\\\", \\\"t\\\"}], \
\\\")\\\"}]}], \\\"+\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"4\\\", \\\"+\
\\\", RowBox[{\\\"14\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}], \\\")\\\"}], \
\\\" \\\", \\\"t\\\"}]}], \\\"]\\\"}]}]]}]\\) has evaluated to non-numerical \
values for all sampling points in the region with boundaries \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"1\\\"}], \\\"}\\\"}], \\\"}\\\"}]\\).\"", 2, 58, 6, 23073768020418037070, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[58]:=",ExpressionUUID->"e0223857-ad60-4481-a051-3ca50e9622fd"],

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"h", "[", 
     RowBox[{"l", "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["l", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Output",
 CellLabel->"Out[58]=",ExpressionUUID->"dc27a46e-9fe0-4e2a-a512-1e161c834bee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolynomialQ", "[", 
  RowBox[{
   RowBox[{"2", "+", "x", "+", 
    FractionBox["1", "x"]}], ",", "x"}], "]"}]], "Input",
 CellLabel->"In[60]:=",ExpressionUUID->"5a2444f1-eaa7-40c4-9d03-741817f4fe73"],

Cell[BoxData["False"], "Output",
 CellLabel->"Out[60]=",ExpressionUUID->"d2f0d78b-cf2f-47f5-9e65-22accee02ec3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"Zeta", "'"}], "[", "2", "]"}], 
  RowBox[{"Zeta", "[", "2", "]"}]]], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"6b167e64-972d-44f2-bece-51f6171555c1"],

Cell[BoxData[
 FractionBox[
  RowBox[{"6", " ", 
   RowBox[{
    SuperscriptBox["Zeta", "\[Prime]",
     MultilineFunction->None], "[", "2", "]"}]}], 
  SuperscriptBox["\[Pi]", "2"]]], "Output",
 CellLabel->"Out[63]=",ExpressionUUID->"52377ddf-ad12-4aeb-ad60-20e010545055"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Zeta", "'"}], "[", "s", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
  "Normal"}]], "Input",
 CellLabel->"In[67]:=",ExpressionUUID->"3da156e0-c908-4d63-baff-58d0f6b5abcb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"2", " ", "\[Pi]"}], "]"}]}], "+", 
  RowBox[{"s", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["EulerGamma", "2"], "2"], "-", 
     FractionBox[
      SuperscriptBox["\[Pi]", "2"], "24"], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Log", "[", "2", "]"}], "+", 
         RowBox[{"Log", "[", "\[Pi]", "]"}]}], ")"}], "2"]}], "+", 
     RowBox[{"StieltjesGamma", "[", "1", "]"}]}], ")"}]}]}]], "Output",
 CellLabel->"Out[67]=",ExpressionUUID->"0a3e8268-cd7a-45dd-b9fa-bc9ea436b775"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", 
       RowBox[{"Log", "[", 
        RowBox[{"2", " ", "\[Pi]"}], "]"}]}], "+", 
      RowBox[{"s", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          SuperscriptBox["EulerGamma", "2"], "2"], "-", 
         FractionBox[
          SuperscriptBox["\[Pi]", "2"], "24"], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Log", "[", "2", "]"}], "+", 
             RowBox[{"Log", "[", "\[Pi]", "]"}]}], ")"}], "2"]}], "+", 
         RowBox[{"StieltjesGamma", "[", "1", "]"}]}], ")"}]}]}], ",", "s"}], 
    "]"}], "//", "FullSimplify"}], "//", "N"}]], "Input",
 CellLabel->"In[71]:=",ExpressionUUID->"dfe96bce-c469-4ac5-ab14-4d7c91481fee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"0.020833333333333332`", " ", "s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "7.619049607004975`"}], " ", "s"}], "-", 
      RowBox[{"22.054524796912144`", " ", 
       RowBox[{"(", 
        RowBox[{"2.`", "\[VeryThinSpace]", "+", 
         RowBox[{"1.8378770664093453`", " ", "s"}]}], ")"}]}]}], ")"}]}], 
   ")"}], "/.", 
  RowBox[{"s", ":>", "3"}]}]], "Input",
 CellLabel->"In[73]:=",ExpressionUUID->"b149f0c1-ede2-43ae-b069-08cd8de74002"],

Cell[BoxData[
 RowBox[{"-", "11.785419651202648`"}]], "Output",
 CellLabel->"Out[73]=",ExpressionUUID->"40550afc-5a27-4bd8-a3d3-20bc9f681608"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"Zeta", "[", "s", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", "Normal"}], 
     "//", "FullSimplify"}], ")"}], "/.", 
   RowBox[{"s", ":>", "3"}]}], "//", "N"}]], "Input",
 CellLabel->"In[75]:=",ExpressionUUID->"817d83e9-b6fd-406c-83f8-a6cf78e398f8"],

Cell[BoxData[
 RowBox[{"-", "3.256815599614018`"}]], "Output",
 CellLabel->"Out[75]=",ExpressionUUID->"1e116e94-3515-4260-b337-390fedb54812"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "/", "2"}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"1", "/", "3"}], ")"}]}]], "Input",ExpressionUUID->"988822ce-c901-\
46d5-a20b-99e53851d9c3"],

Cell[BoxData["1.5`"], "Output",
 CellLabel->"Out[77]=",ExpressionUUID->"0ff5f241-8522-4d13-8e28-faf8539b2ebb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Zeta", "[", 
     RowBox[{
      RowBox[{"-", "2"}], "k"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "1"}], "}"}]}], "]"}], "//", 
  "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"Zeta", "[", 
     RowBox[{
      RowBox[{"-", "2"}], "k"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], "//", 
  "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Zeta", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}], "//", 
   "FullSimplify"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Zeta", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "8"}], "}"}]}], "]"}], "//", 
   "FullSimplify"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Zeta", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "16"}], "}"}]}], "]"}], "//", 
   "FullSimplify"}], "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Zeta", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "32"}], "}"}]}], "]"}], "//", 
   "FullSimplify"}], "//", "N"}]}], "Input",
 CellLabel->
  "In[107]:=",ExpressionUUID->"9337ca09-30dc-47f7-9f19-6530e9dd0b01"],

Cell[BoxData["0.`"], "Output",
 CellLabel->
  "Out[107]=",ExpressionUUID->"e8faa888-543d-432d-b385-ef201743169d"],

Cell[BoxData["0.`"], "Output",
 CellLabel->
  "Out[108]=",ExpressionUUID->"20d0a9af-1a18-4485-be60-44c42de9213b"],

Cell[BoxData["0.`"], "Output",
 CellLabel->
  "Out[109]=",ExpressionUUID->"5927fe8d-eff9-4d2e-b334-e4603d2bc683"],

Cell[BoxData["0.`"], "Output",
 CellLabel->
  "Out[110]=",ExpressionUUID->"f5071f2e-c401-4388-aedf-8e1d1500a0e1"],

Cell[BoxData["0.`"], "Output",
 CellLabel->
  "Out[111]=",ExpressionUUID->"e89bc12d-9537-47d8-9d65-3cf71f5f2836"],

Cell[BoxData["0.`"], "Output",
 CellLabel->
  "Out[112]=",ExpressionUUID->"08021a41-e049-4471-b73a-c33cf3d973ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Residue", "[", 
  RowBox[{
   RowBox[{"h", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Residue", "[", 
  RowBox[{
   RowBox[{"h", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Residue", "[", 
  RowBox[{
   RowBox[{"h", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "2"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Residue", "[", 
  RowBox[{
   RowBox[{"h", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "4"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Residue", "[", 
  RowBox[{
   RowBox[{"h", "[", "z", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "6"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Residue", "[", 
      RowBox[{
       RowBox[{"h", "[", "z", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", 
         RowBox[{"ZetaZero", "[", "1", "]"}]}], "}"}]}], "]"}], "+", 
     RowBox[{"Residue", "[", 
      RowBox[{
       RowBox[{"h", "[", "z", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", 
         RowBox[{"1", "-", 
          RowBox[{"ZetaZero", "[", "1", "]"}]}]}], "}"}]}], "]"}]}], "//", 
    "Simplify"}], "//", "N"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Residue", "[", 
      RowBox[{
       RowBox[{"h", "[", "z", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", 
         RowBox[{"ZetaZero", "[", "2", "]"}]}], "}"}]}], "]"}], "+", 
     RowBox[{"Residue", "[", 
      RowBox[{
       RowBox[{"h", "[", "z", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", 
         RowBox[{"1", "-", 
          RowBox[{"ZetaZero", "[", "2", "]"}]}]}], "}"}]}], "]"}]}], "//", 
    "Simplify"}], "//", "N"}], "//", "Simplify"}]}], "Input",
 CellLabel->
  "In[195]:=",ExpressionUUID->"87bdadcc-9a8c-4122-ab70-a6aecec6292a"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Log", "[", 
   RowBox[{"2", " ", "\[Pi]"}], "]"}]}]], "Output",
 CellLabel->
  "Out[195]=",ExpressionUUID->"ea795f0d-91cd-4880-9c81-77263f639746"],

Cell[BoxData["x"], "Output",
 CellLabel->
  "Out[196]=",ExpressionUUID->"bc56c7e0-5aac-443e-8e5a-bb8be4a21adf"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", " ", 
   SuperscriptBox["x", "2"]}]]], "Output",
 CellLabel->
  "Out[197]=",ExpressionUUID->"47e1c1e8-3f46-4c05-9b1b-a65601b4a147"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"4", " ", 
   SuperscriptBox["x", "4"]}]]], "Output",
 CellLabel->
  "Out[198]=",ExpressionUUID->"bfc5c1a7-08c0-4256-8f4d-821ec730c8b1"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"6", " ", 
   SuperscriptBox["x", "6"]}]]], "Output",
 CellLabel->
  "Out[199]=",ExpressionUUID->"bd1d91c2-8d16-46b5-8647-783c02adf8ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "0.0024994944168615697`"}], "-", 
     RowBox[{"0.07065933315127745`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["x", 
    RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
     RowBox[{"14.134725141734695`", " ", "\[ImaginaryI]"}]}]]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.0024994944168615697`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.07065933315127745`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["x", 
    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
     RowBox[{"14.134725141734695`", " ", "\[ImaginaryI]"}]}]]}]}]], "Output",
 CellLabel->
  "Out[200]=",ExpressionUUID->"18a6827e-dae8-456c-8ecd-021a42b17870"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "0.001130771072457988`"}], "-", 
     RowBox[{"0.04754222861517609`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["x", 
    RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
     RowBox[{"21.022039638771556`", " ", "\[ImaginaryI]"}]}]]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.001130771072457988`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.04754222861517609`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   SuperscriptBox["x", 
    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
     RowBox[{"21.022039638771556`", " ", "\[ImaginaryI]"}]}]]}]}]], "Output",
 CellLabel->
  "Out[201]=",ExpressionUUID->"341a6a65-95ba-46d1-be14-e887a067f08c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Residue", "[", 
        RowBox[{
         RowBox[{"h", "[", "z", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"z", ",", 
           RowBox[{"ZetaZero", "[", "2", "]"}]}], "}"}]}], "]"}], "/.", 
       RowBox[{"x", ":>", "3"}]}], "//", "N"}], ")"}], "+", 
    "\[IndentingNewLine]", 
    RowBox[{"Residue", "[", 
     RowBox[{
      RowBox[{"h", "[", "z", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{"1", "-", 
         RowBox[{"ZetaZero", "[", "2", "]"}]}]}], "}"}]}], "]"}]}], "/.", 
   RowBox[{"x", ":>", "3"}]}], "//", "N"}]], "Input",
 CellLabel->
  "In[214]:=",ExpressionUUID->"5cbd09cc-e540-4827-87e7-46bd9e8f7039"],

Cell[BoxData[
 RowBox[{"0.14882890130200313`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellLabel->
  "Out[214]=",ExpressionUUID->"704cadef-2f12-4580-b576-fb579d52baa0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"3", "x"}], "==", "144"}], ",", "x", ",", 
   RowBox[{"Modulus", "\[Rule]", "9"}]}], "]"}]], "Input",ExpressionUUID->\
"a3746302-2691-4336-bb4b-8907a3d05f7e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "1"}], "}"}], "}"}]], "Output",
 CellLabel->
  "Out[334]=",ExpressionUUID->"d1c9e007-096a-4cb2-a6e4-3eaf65b93707"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"105", 
  RowBox[{"(", 
   RowBox[{
    FractionBox["2", "3"], 
    FractionBox["4", "5"], " ", 
    FractionBox["6", "7"]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"EulerPhi", "[", "105", "]"}]}], "Input",
 CellLabel->
  "In[344]:=",ExpressionUUID->"ef5ffa8b-276d-418b-951d-311dadcb165c"],

Cell[BoxData["48"], "Output",
 CellLabel->
  "Out[344]=",ExpressionUUID->"c3cb16ba-021f-4dce-806f-9d2adb579465"],

Cell[BoxData["48"], "Output",
 CellLabel->
  "Out[345]=",ExpressionUUID->"d3ce507d-8e33-4a6f-aa1c-f7ce78159f8d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EulerPhi", "[", "15", "]"}]], "Input",
 CellLabel->
  "In[346]:=",ExpressionUUID->"8750891a-e329-4cf6-b25a-d11aea7ab457"],

Cell[BoxData[""], "Input",ExpressionUUID->"8495d437-953a-4dc4-9148-39ec38bc8c66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"FactorInteger", "[", "k", "]"}], ",", 
        RowBox[{"Mod", "[", 
         RowBox[{"k", ",", "12"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "105"}], "}"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"GCD", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "105"}], "]"}], "==", "1"}], 
     "&"}]}], "]"}], "//", "tf"}]], "Input",
 CellLabel->
  "In[382]:=",ExpressionUUID->"47bc25d8-562c-441b-9175-a401c6ddfec8"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"1", GridBox[{
       {"1", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "1"},
    {"2", GridBox[{
       {"2", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "2"},
    {"4", GridBox[{
       {"2", "2"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "4"},
    {"8", GridBox[{
       {"2", "3"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "8"},
    {"11", GridBox[{
       {"11", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "11"},
    {"13", GridBox[{
       {"13", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "1"},
    {"16", GridBox[{
       {"2", "4"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "4"},
    {"17", GridBox[{
       {"17", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "5"},
    {"19", GridBox[{
       {"19", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "7"},
    {"22", GridBox[{
       {"2", "1"},
       {"11", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "10"},
    {"23", GridBox[{
       {"23", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "11"},
    {"26", GridBox[{
       {"2", "1"},
       {"13", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "2"},
    {"29", GridBox[{
       {"29", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "5"},
    {"31", GridBox[{
       {"31", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "7"},
    {"32", GridBox[{
       {"2", "5"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "8"},
    {"34", GridBox[{
       {"2", "1"},
       {"17", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "10"},
    {"37", GridBox[{
       {"37", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "1"},
    {"38", GridBox[{
       {"2", "1"},
       {"19", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "2"},
    {"41", GridBox[{
       {"41", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "5"},
    {"43", GridBox[{
       {"43", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "7"},
    {"44", GridBox[{
       {"2", "2"},
       {"11", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "8"},
    {"46", GridBox[{
       {"2", "1"},
       {"23", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "10"},
    {"47", GridBox[{
       {"47", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "11"},
    {"52", GridBox[{
       {"2", "2"},
       {"13", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "4"},
    {"53", GridBox[{
       {"53", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "5"},
    {"58", GridBox[{
       {"2", "1"},
       {"29", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "10"},
    {"59", GridBox[{
       {"59", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "11"},
    {"61", GridBox[{
       {"61", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "1"},
    {"62", GridBox[{
       {"2", "1"},
       {"31", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "2"},
    {"64", GridBox[{
       {"2", "6"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "4"},
    {"67", GridBox[{
       {"67", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "7"},
    {"68", GridBox[{
       {"2", "2"},
       {"17", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "8"},
    {"71", GridBox[{
       {"71", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "11"},
    {"73", GridBox[{
       {"73", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "1"},
    {"74", GridBox[{
       {"2", "1"},
       {"37", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "2"},
    {"76", GridBox[{
       {"2", "2"},
       {"19", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "4"},
    {"79", GridBox[{
       {"79", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "7"},
    {"82", GridBox[{
       {"2", "1"},
       {"41", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "10"},
    {"83", GridBox[{
       {"83", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "11"},
    {"86", GridBox[{
       {"2", "1"},
       {"43", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "2"},
    {"88", GridBox[{
       {"2", "3"},
       {"11", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "4"},
    {"89", GridBox[{
       {"89", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "5"},
    {"92", GridBox[{
       {"2", "2"},
       {"23", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "8"},
    {"94", GridBox[{
       {"2", "1"},
       {"47", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "10"},
    {"97", GridBox[{
       {"97", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "1"},
    {"101", GridBox[{
       {"101", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "5"},
    {"103", GridBox[{
       {"103", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "7"},
    {"104", GridBox[{
       {"2", "3"},
       {"13", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], "8"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{1, {{1, 1}}, 1}, {2, {{2, 1}}, 2}, {4, {{2, 2}}, 4}, {
    8, {{2, 3}}, 8}, {11, {{11, 1}}, 11}, {13, {{13, 1}}, 1}, {
    16, {{2, 4}}, 4}, {17, {{17, 1}}, 5}, {19, {{19, 1}}, 7}, {
    22, {{2, 1}, {11, 1}}, 10}, {23, {{23, 1}}, 11}, {
    26, {{2, 1}, {13, 1}}, 2}, {29, {{29, 1}}, 5}, {31, {{31, 1}}, 7}, {
    32, {{2, 5}}, 8}, {34, {{2, 1}, {17, 1}}, 10}, {37, {{37, 1}}, 1}, {
    38, {{2, 1}, {19, 1}}, 2}, {41, {{41, 1}}, 5}, {43, {{43, 1}}, 7}, {
    44, {{2, 2}, {11, 1}}, 8}, {46, {{2, 1}, {23, 1}}, 10}, {
    47, {{47, 1}}, 11}, {52, {{2, 2}, {13, 1}}, 4}, {53, {{53, 1}}, 5}, {
    58, {{2, 1}, {29, 1}}, 10}, {59, {{59, 1}}, 11}, {61, {{61, 1}}, 1}, {
    62, {{2, 1}, {31, 1}}, 2}, {64, {{2, 6}}, 4}, {67, {{67, 1}}, 7}, {
    68, {{2, 2}, {17, 1}}, 8}, {71, {{71, 1}}, 11}, {73, {{73, 1}}, 1}, {
    74, {{2, 1}, {37, 1}}, 2}, {76, {{2, 2}, {19, 1}}, 4}, {
    79, {{79, 1}}, 7}, {82, {{2, 1}, {41, 1}}, 10}, {83, {{83, 1}}, 11}, {
    86, {{2, 1}, {43, 1}}, 2}, {88, {{2, 3}, {11, 1}}, 4}, {
    89, {{89, 1}}, 5}, {92, {{2, 2}, {23, 1}}, 8}, {
    94, {{2, 1}, {47, 1}}, 10}, {97, {{97, 1}}, 1}, {101, {{101, 1}}, 5}, {
    103, {{103, 1}}, 7}, {104, {{2, 3}, {13, 1}}, 8}}]]], "Output",
 CellLabel->
  "Out[382]//TableForm=",ExpressionUUID->"8243f3b6-4517-4fee-afd4-\
bc31ce9e42f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"FactorInteger", "[", "k", "]"}], ",", 
       RowBox[{"Mod", "[", 
        RowBox[{"k", ",", "12"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "105"}], "}"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"GCD", "[", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "105"}], "]"}], "==", "1"}], 
    "&"}]}], "]"}]], "Input",
 CellLabel->
  "In[416]:=",ExpressionUUID->"b204b77a-1f08-4a47-abb1-d8ee075b7742"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1"}], "}"}], "}"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], "}"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], "}"}], ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"11", ",", "1"}], "}"}], "}"}], ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"13", ",", "1"}], "}"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], "}"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"17", ",", "1"}], "}"}], "}"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"19", ",", "1"}], "}"}], "}"}], ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "1"}], "}"}]}], "}"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"23", ",", "1"}], "}"}], "}"}], ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"13", ",", "1"}], "}"}]}], "}"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"29", ",", "1"}], "}"}], "}"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"31", ",", "1"}], "}"}], "}"}], ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"2", ",", "5"}], "}"}], "}"}], ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"17", ",", "1"}], "}"}]}], "}"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"37", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"37", ",", "1"}], "}"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"19", ",", "1"}], "}"}]}], "}"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"41", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"41", ",", "1"}], "}"}], "}"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"43", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"43", ",", "1"}], "}"}], "}"}], ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"44", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "1"}], "}"}]}], "}"}], ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"46", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"23", ",", "1"}], "}"}]}], "}"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"47", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"47", ",", "1"}], "}"}], "}"}], ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"52", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"13", ",", "1"}], "}"}]}], "}"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"53", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"53", ",", "1"}], "}"}], "}"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"58", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"29", ",", "1"}], "}"}]}], "}"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"59", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"59", ",", "1"}], "}"}], "}"}], ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"61", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"61", ",", "1"}], "}"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"62", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"31", ",", "1"}], "}"}]}], "}"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"64", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"2", ",", "6"}], "}"}], "}"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"67", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"67", ",", "1"}], "}"}], "}"}], ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"68", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"17", ",", "1"}], "}"}]}], "}"}], ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"71", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"71", ",", "1"}], "}"}], "}"}], ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"73", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"73", ",", "1"}], "}"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"74", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"37", ",", "1"}], "}"}]}], "}"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"76", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"19", ",", "1"}], "}"}]}], "}"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"79", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"79", ",", "1"}], "}"}], "}"}], ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"82", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"41", ",", "1"}], "}"}]}], "}"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"83", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"83", ",", "1"}], "}"}], "}"}], ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"86", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"43", ",", "1"}], "}"}]}], "}"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"88", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "1"}], "}"}]}], "}"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"89", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"89", ",", "1"}], "}"}], "}"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"92", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"23", ",", "1"}], "}"}]}], "}"}], ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"94", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"47", ",", "1"}], "}"}]}], "}"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"97", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"97", ",", "1"}], "}"}], "}"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"101", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"101", ",", "1"}], "}"}], "}"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"103", ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"103", ",", "1"}], "}"}], "}"}], ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"104", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"13", ",", "1"}], "}"}]}], "}"}], ",", "8"}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->
  "Out[416]=",ExpressionUUID->"249240ac-b742-436b-bcd2-c3cfdba33319"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"FactorInteger", "[", "k", "]"}], ",", 
         RowBox[{"Mod", "[", 
          RowBox[{"k", ",", "12"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "105"}], "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"GCD", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "105"}], "]"}], "==", "1"}], 
      "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", "=", 
  RowBox[{"m", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "3"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", "GroupBy"}], "Input",ExpressionUUID->\
"bb637137-c2bb-4fa4-a3eb-482a0c824939"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "4", ",", "8", ",", "11", ",", "1", ",", "4", ",", "5", 
   ",", "7", ",", "10", ",", "11", ",", "2", ",", "5", ",", "7", ",", "8", 
   ",", "10", ",", "1", ",", "2", ",", "5", ",", "7", ",", "8", ",", "10", 
   ",", "11", ",", "4", ",", "5", ",", "10", ",", "11", ",", "1", ",", "2", 
   ",", "4", ",", "7", ",", "8", ",", "11", ",", "1", ",", "2", ",", "4", ",",
    "7", ",", "10", ",", "11", ",", "2", ",", "4", ",", "5", ",", "8", ",", 
   "10", ",", "1", ",", "5", ",", "7", ",", "8"}], "}"}]], "Output",
 CellLabel->
  "Out[425]=",ExpressionUUID->"c3cebeb7-28bd-47a4-a494-3f1fd50c5136"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"m", ",", "n"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["m", "2"], "-", 
     SuperscriptBox["n", "2"]}], ")"}], ",", 
   RowBox[{"2", " ", "m", " ", "n"}], ",", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["m", "2"], "+", 
     SuperscriptBox["n", "2"]}], ")"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["m", "2"], "+", 
           SuperscriptBox["n", "2"]}], ")"}], "+", "1"}], "2"], ")"}], "2"], 
     "-", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["m", "2"], "+", 
           SuperscriptBox["n", "2"]}], ")"}], "-", "1"}], "2"], ")"}], "2"]}],
     ",", 
    RowBox[{"2", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["m", "2"], "+", 
         SuperscriptBox["n", "2"]}], ")"}], "+", "1"}], "2"], 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["m", "2"], "+", 
         SuperscriptBox["n", "2"]}], ")"}], "-", "1"}], "2"]}], ",", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["m", "2"], "+", 
           SuperscriptBox["n", "2"]}], ")"}], "+", "1"}], "2"], ")"}], "2"], 
     "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["m", "2"], "+", 
           SuperscriptBox["n", "2"]}], ")"}], "-", "1"}], "2"], ")"}], 
      "2"]}]}], "}"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["m", "2"], "+", 
               SuperscriptBox["n", "2"]}], ")"}], "+", "1"}], "2"], ")"}], 
          "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["m", "2"], "+", 
               SuperscriptBox["n", "2"]}], ")"}], "-", "1"}], "2"], ")"}], 
          "2"], "+", "1"}], "2"], ")"}], "2"], "-", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["m", "2"], "+", 
               SuperscriptBox["n", "2"]}], ")"}], "+", "1"}], "2"], ")"}], 
          "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["m", "2"], "+", 
               SuperscriptBox["n", "2"]}], ")"}], "-", "1"}], "2"], ")"}], 
          "2"], "-", "1"}], "2"], ")"}], "2"]}], ",", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["m", "2"], "+", 
              SuperscriptBox["n", "2"]}], ")"}], "+", "1"}], "2"], ")"}], 
         "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["m", "2"], "+", 
              SuperscriptBox["n", "2"]}], ")"}], "-", "1"}], "2"], ")"}], 
         "2"], "+", "1"}], "2"], ")"}], 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["m", "2"], "+", 
              SuperscriptBox["n", "2"]}], ")"}], "+", "1"}], "2"], ")"}], 
         "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["m", "2"], "+", 
              SuperscriptBox["n", "2"]}], ")"}], "-", "1"}], "2"], ")"}], 
         "2"], "-", "1"}], "2"], ")"}]}], ",", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["m", "2"], "+", 
               SuperscriptBox["n", "2"]}], ")"}], "+", "1"}], "2"], ")"}], 
          "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["m", "2"], "+", 
               SuperscriptBox["n", "2"]}], ")"}], "-", "1"}], "2"], ")"}], 
          "2"], "+", "1"}], "2"], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["m", "2"], "+", 
               SuperscriptBox["n", "2"]}], ")"}], "+", "1"}], "2"], ")"}], 
          "2"], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["m", "2"], "+", 
               SuperscriptBox["n", "2"]}], ")"}], "-", "1"}], "2"], ")"}], 
          "2"], "-", "1"}], "2"], ")"}], "2"]}]}], "}"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["m", "2"], "+", 
                  SuperscriptBox["n", "2"]}], ")"}], "+", "1"}], "2"], ")"}], 
             "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["m", "2"], "+", 
                  SuperscriptBox["n", "2"]}], ")"}], "-", "1"}], "2"], ")"}], 
             "2"], "+", "1"}], "2"], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["m", "2"], "+", 
                  SuperscriptBox["n", "2"]}], ")"}], "+", "1"}], "2"], ")"}], 
             "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["m", "2"], "+", 
                  SuperscriptBox["n", "2"]}], ")"}], "-", "1"}], "2"], ")"}], 
             "2"], "-", "1"}], "2"], ")"}], "2"], "+", "1"}], "2"], ")"}], 
     "2"], ",", "2"}], "}"}], "//", "Simplify"}]}], "Input",
 CellLabel->
  "In[113]:=",ExpressionUUID->"a55f73a7-4e5a-4241-9ebc-59e6d53fe4e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellLabel->
  "Out[116]=",ExpressionUUID->"d3a2e96d-3781-44e3-8811-aff7e0231bba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "12", ",", "13"}], "}"}]], "Output",
 CellLabel->
  "Out[117]=",ExpressionUUID->"41ddcd8a-48fe-4178-8f83-ce4f1962b6de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"13", ",", "84", ",", "85"}], "}"}]], "Output",
 CellLabel->
  "Out[118]=",ExpressionUUID->"79250d46-1d76-414c-805c-754f7a8af0dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1849", ",", "2"}], "}"}]], "Output",
 CellLabel->
  "Out[119]=",ExpressionUUID->"fe398403-8f17-4ac2-9c8e-471ec73cfc89"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"m", ",", "n"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["m", "2"], "-", 
         SuperscriptBox["n", "2"]}], ")"}], ",", 
       RowBox[{"2", " ", "m", " ", "n"}], ",", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["m", "2"], "+", 
         SuperscriptBox["n", "2"]}], ")"}], ",", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["m", "2"], "+", 
         SuperscriptBox["n", "2"]}], ")"}], ",", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["m", "2"], "+", 
          SuperscriptBox["n", "2"], "+", "1"}], ")"}], "2"]}], "}"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "2", ",", "20", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1"}], "}"}]}], "]"}], "//", "tf"}]}], "Input",
 CellLabel->
  "In[163]:=",ExpressionUUID->"b96b77f8-96be-43b4-8863-9b2cfffdfe82"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ideas-1", "Section",ExpressionUUID->"0f69c638-41b2-4eb1-b696-6cf1054d1818"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"a", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", "x", "+", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "==", "0"}], ",", "x", ",", 
   RowBox[{"Modulus", "\[Rule]", "13"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "==", "0"}], ",", "x", ",", 
   RowBox[{"Modulus", "\[Rule]", "21"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "==", "0"}], ",", "x", ",", 
   RowBox[{"Modulus", "\[Rule]", 
    RowBox[{"13", " ", "21"}]}]}], "]"}]}], "Input",
 CellLabel->
  "In[886]:=",ExpressionUUID->"ba80d71e-9e08-4140-b4ce-034d41ee9e18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "9"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[888]=",ExpressionUUID->"404fff25-01a7-4d74-94e7-330252c83887"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "16"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[889]=",ExpressionUUID->"304da592-2382-4d85-985d-9b57e49fe8f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "172"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "256"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[890]=",ExpressionUUID->"d4e3907a-7d55-42af-819c-872d85d6d63a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "==", "0"}], ",", "x", ",", 
   RowBox[{"Modulus", "\[Rule]", "7"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "==", "0"}], ",", "x", ",", 
   RowBox[{"Modulus", "\[Rule]", "13"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "==", "0"}], ",", "x", ",", 
   RowBox[{"Modulus", "\[Rule]", 
    RowBox[{"7", " ", "13"}]}]}], "]"}]}], "Input",
 CellLabel->
  "In[891]:=",ExpressionUUID->"a681e1c3-937c-43d4-a3ac-480d0b3d8a56"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "4"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[891]=",ExpressionUUID->"47c42a03-2b41-49fa-9394-9796773fe322"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "9"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[892]=",ExpressionUUID->"dfe39075-cd16-4eb5-82a5-d7fd14b52a2e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "74"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "81"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[893]=",ExpressionUUID->"46a40eb5-0049-421c-8bf0-2dae62b719ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "a", "]"}], 
    RowBox[{"f", "[", 
     RowBox[{"a", "+", "1"}], "]"}]}], "//", "Simplify"}], "//", 
  "Apart"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"a", "+", "1"}], ")"}], "2"], "]"}], "//", "Simplify"}], "//", 
  "Apart"}], "\[IndentingNewLine]", 
 RowBox[{"31", " ", "43"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "36", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "4"], "+", 
     RowBox[{"4", 
      SuperscriptBox["x", "3"]}], "+", 
     RowBox[{"7", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"6", "x"}], "+", "3"}], "==", "0"}], ",", "x", ",", 
   RowBox[{"Modulus", "->", "133"}]}], "]"}]}], "Input",
 CellLabel->
  "In[900]:=",ExpressionUUID->"7b48ac40-4522-4adb-aec9-678d49736f01"],

Cell[BoxData[
 RowBox[{"3", "+", 
  RowBox[{"6", " ", "a"}], "+", 
  RowBox[{"7", " ", 
   SuperscriptBox["a", "2"]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["a", "3"]}], "+", 
  SuperscriptBox["a", "4"]}]], "Output",
 CellLabel->
  "Out[900]=",ExpressionUUID->"b6a37775-e6ec-41b2-b151-bd75a28810ef"],

Cell[BoxData[
 RowBox[{"3", "+", 
  RowBox[{"6", " ", "a"}], "+", 
  RowBox[{"7", " ", 
   SuperscriptBox["a", "2"]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["a", "3"]}], "+", 
  SuperscriptBox["a", "4"]}]], "Output",
 CellLabel->
  "Out[901]=",ExpressionUUID->"4044ad8a-52dd-4886-9a54-7fc017a91f53"],

Cell[BoxData["1333"], "Output",
 CellLabel->
  "Out[902]=",ExpressionUUID->"6ffde07f-8241-4c20-a770-89c759b09a70"],

Cell[BoxData["1333"], "Output",
 CellLabel->
  "Out[903]=",ExpressionUUID->"63794bb0-5f4b-458b-b1f6-a7d023c31caa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "44"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "45"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "67"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "86"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "87"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "101"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "102"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "106"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "120"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "121"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[904]=",ExpressionUUID->"782d58c9-ef42-43ef-8f16-2a1933e68e04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"f", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", "x", "]"}], "==", "0"}], ",", "x", ",", 
         RowBox[{"Modulus", "\[Rule]", 
          RowBox[{"f", "[", "k", "]"}]}]}], "]"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "25"}], "}"}]}], "]"}], "//", 
  "tf"}]], "Input",
 CellLabel->
  "In[907]:=",ExpressionUUID->"377d2b31-c202-4cef-a7af-98336e56d9d7"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"1", "3", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "1"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "1"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"2", "7", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "2"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "4"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"3", "13", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "3"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "9"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"4", "21", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "4"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "16"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"5", "31", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "5"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "25"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"6", "43", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "6"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "36"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"7", "57", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "7"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "49"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"8", "73", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "8"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "64"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"9", "91", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "9"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "16"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "74"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "81"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"10", "111", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "10"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "100"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"11", "133", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "11"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "30"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "102"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "121"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"12", "157", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "12"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "144"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"13", "183", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "13"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "169"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"14", "211", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "14"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "196"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"15", "241", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "15"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "225"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"16", "273", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "16"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "100"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "172"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "256"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"17", "307", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "17"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "289"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"18", "343", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "18"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "324"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"19", "381", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "19"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "361"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"20", "421", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "20"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "400"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"21", "463", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "21"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "441"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"22", "507", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "22"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "484"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"23", "553", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "23"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "102"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "450"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "529"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"24", "601", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "24"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "576"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"25", "651", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "25"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "67"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "583"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "625"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{1, 3, {{{NumberTheory`x -> 1}, {NumberTheory`x -> 1}}}}, {
    2, 7, {{{NumberTheory`x -> 2}, {NumberTheory`x -> 4}}}}, {
    3, 13, {{{NumberTheory`x -> 3}, {NumberTheory`x -> 9}}}}, {
    4, 21, {{{NumberTheory`x -> 4}, {NumberTheory`x -> 16}}}}, {
    5, 31, {{{NumberTheory`x -> 5}, {NumberTheory`x -> 25}}}}, {
    6, 43, {{{NumberTheory`x -> 6}, {NumberTheory`x -> 36}}}}, {
    7, 57, {{{NumberTheory`x -> 7}, {NumberTheory`x -> 49}}}}, {
    8, 73, {{{NumberTheory`x -> 8}, {NumberTheory`x -> 64}}}}, {
    9, 91, {{{NumberTheory`x -> 9}, {NumberTheory`x -> 16}, {
       NumberTheory`x -> 74}, {NumberTheory`x -> 81}}}}, {
    10, 111, {{{NumberTheory`x -> 10}, {NumberTheory`x -> 100}}}}, {
    11, 133, {{{NumberTheory`x -> 11}, {NumberTheory`x -> 30}, {
       NumberTheory`x -> 102}, {NumberTheory`x -> 121}}}}, {
    12, 157, {{{NumberTheory`x -> 12}, {NumberTheory`x -> 144}}}}, {
    13, 183, {{{NumberTheory`x -> 13}, {NumberTheory`x -> 169}}}}, {
    14, 211, {{{NumberTheory`x -> 14}, {NumberTheory`x -> 196}}}}, {
    15, 241, {{{NumberTheory`x -> 15}, {NumberTheory`x -> 225}}}}, {
    16, 273, {{{NumberTheory`x -> 16}, {NumberTheory`x -> 100}, {
       NumberTheory`x -> 172}, {NumberTheory`x -> 256}}}}, {
    17, 307, {{{NumberTheory`x -> 17}, {NumberTheory`x -> 289}}}}, {
    18, 343, {{{NumberTheory`x -> 18}, {NumberTheory`x -> 324}}}}, {
    19, 381, {{{NumberTheory`x -> 19}, {NumberTheory`x -> 361}}}}, {
    20, 421, {{{NumberTheory`x -> 20}, {NumberTheory`x -> 400}}}}, {
    21, 463, {{{NumberTheory`x -> 21}, {NumberTheory`x -> 441}}}}, {
    22, 507, {{{NumberTheory`x -> 22}, {NumberTheory`x -> 484}}}}, {
    23, 553, {{{NumberTheory`x -> 23}, {NumberTheory`x -> 102}, {
       NumberTheory`x -> 450}, {NumberTheory`x -> 529}}}}, {
    24, 601, {{{NumberTheory`x -> 24}, {NumberTheory`x -> 576}}}}, {
    25, 651, {{{NumberTheory`x -> 25}, {NumberTheory`x -> 67}, {
       NumberTheory`x -> 583}, {NumberTheory`x -> 625}}}}}]]], "Output",
 CellLabel->
  "Out[907]//TableForm=",ExpressionUUID->"2903cae8-1388-4853-b652-\
46d5803be7fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FactorInteger", "[", "133", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "==", "0"}], ",", "x", ",", 
   RowBox[{"Modulus", "\[Rule]", "19"}]}], "]"}]}], "Input",
 CellLabel->
  "In[914]:=",ExpressionUUID->"db55da45-d8b7-4fa2-9e4f-4d45c422a94e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[914]=",ExpressionUUID->"d5a08f51-4a6b-48c9-8242-b97754c62a98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "11"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[915]=",ExpressionUUID->"324b3398-723e-42ed-b0cd-cee21d9f94ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"{", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", "x", "]"}], "==", "0"}], ",", "x", ",", 
         RowBox[{"Modulus", "\[Rule]", "k"}]}], "]"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "2", ",", "133"}], "}"}]}], "]"}], "//", 
  "tf"}]], "Input",
 CellLabel->
  "In[920]:=",ExpressionUUID->"36a90de3-bf4a-4d96-9a7e-431389f3521f"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"2", "\<\"\"\>"},
    {"3", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "1"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "1"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"4", "\<\"\"\>"},
    {"5", "\<\"\"\>"},
    {"6", "\<\"\"\>"},
    {"7", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "2"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "4"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"8", "\<\"\"\>"},
    {"9", "\<\"\"\>"},
    {"10", "\<\"\"\>"},
    {"11", "\<\"\"\>"},
    {"12", "\<\"\"\>"},
    {"13", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "3"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "9"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"14", "\<\"\"\>"},
    {"15", "\<\"\"\>"},
    {"16", "\<\"\"\>"},
    {"17", "\<\"\"\>"},
    {"18", "\<\"\"\>"},
    {"19", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "7"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "11"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"20", "\<\"\"\>"},
    {"21", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "4"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "16"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"22", "\<\"\"\>"},
    {"23", "\<\"\"\>"},
    {"24", "\<\"\"\>"},
    {"25", "\<\"\"\>"},
    {"26", "\<\"\"\>"},
    {"27", "\<\"\"\>"},
    {"28", "\<\"\"\>"},
    {"29", "\<\"\"\>"},
    {"30", "\<\"\"\>"},
    {"31", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "5"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "25"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"32", "\<\"\"\>"},
    {"33", "\<\"\"\>"},
    {"34", "\<\"\"\>"},
    {"35", "\<\"\"\>"},
    {"36", "\<\"\"\>"},
    {"37", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "10"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "26"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"38", "\<\"\"\>"},
    {"39", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "16"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "22"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"40", "\<\"\"\>"},
    {"41", "\<\"\"\>"},
    {"42", "\<\"\"\>"},
    {"43", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "6"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "36"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"44", "\<\"\"\>"},
    {"45", "\<\"\"\>"},
    {"46", "\<\"\"\>"},
    {"47", "\<\"\"\>"},
    {"48", "\<\"\"\>"},
    {"49", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "18"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "30"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"50", "\<\"\"\>"},
    {"51", "\<\"\"\>"},
    {"52", "\<\"\"\>"},
    {"53", "\<\"\"\>"},
    {"54", "\<\"\"\>"},
    {"55", "\<\"\"\>"},
    {"56", "\<\"\"\>"},
    {"57", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "7"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "49"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"58", "\<\"\"\>"},
    {"59", "\<\"\"\>"},
    {"60", "\<\"\"\>"},
    {"61", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "13"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "47"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"62", "\<\"\"\>"},
    {"63", "\<\"\"\>"},
    {"64", "\<\"\"\>"},
    {"65", "\<\"\"\>"},
    {"66", "\<\"\"\>"},
    {"67", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "29"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "37"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"68", "\<\"\"\>"},
    {"69", "\<\"\"\>"},
    {"70", "\<\"\"\>"},
    {"71", "\<\"\"\>"},
    {"72", "\<\"\"\>"},
    {"73", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "8"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "64"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"74", "\<\"\"\>"},
    {"75", "\<\"\"\>"},
    {"76", "\<\"\"\>"},
    {"77", "\<\"\"\>"},
    {"78", "\<\"\"\>"},
    {"79", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "23"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "55"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"80", "\<\"\"\>"},
    {"81", "\<\"\"\>"},
    {"82", "\<\"\"\>"},
    {"83", "\<\"\"\>"},
    {"84", "\<\"\"\>"},
    {"85", "\<\"\"\>"},
    {"86", "\<\"\"\>"},
    {"87", "\<\"\"\>"},
    {"88", "\<\"\"\>"},
    {"89", "\<\"\"\>"},
    {"90", "\<\"\"\>"},
    {"91", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "9"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "16"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "74"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "81"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"92", "\<\"\"\>"},
    {"93", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "25"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "67"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"94", "\<\"\"\>"},
    {"95", "\<\"\"\>"},
    {"96", "\<\"\"\>"},
    {"97", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "35"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "61"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"98", "\<\"\"\>"},
    {"99", "\<\"\"\>"},
    {"100", "\<\"\"\>"},
    {"101", "\<\"\"\>"},
    {"102", "\<\"\"\>"},
    {"103", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "46"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "56"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"104", "\<\"\"\>"},
    {"105", "\<\"\"\>"},
    {"106", "\<\"\"\>"},
    {"107", "\<\"\"\>"},
    {"108", "\<\"\"\>"},
    {"109", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "45"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "63"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"110", "\<\"\"\>"},
    {"111", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "10"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "100"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"112", "\<\"\"\>"},
    {"113", "\<\"\"\>"},
    {"114", "\<\"\"\>"},
    {"115", "\<\"\"\>"},
    {"116", "\<\"\"\>"},
    {"117", "\<\"\"\>"},
    {"118", "\<\"\"\>"},
    {"119", "\<\"\"\>"},
    {"120", "\<\"\"\>"},
    {"121", "\<\"\"\>"},
    {"122", "\<\"\"\>"},
    {"123", "\<\"\"\>"},
    {"124", "\<\"\"\>"},
    {"125", "\<\"\"\>"},
    {"126", "\<\"\"\>"},
    {"127", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "19"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "107"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"128", "\<\"\"\>"},
    {"129", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "49"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "79"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"130", "\<\"\"\>"},
    {"131", "\<\"\"\>"},
    {"132", "\<\"\"\>"},
    {"133", GridBox[{
       {GridBox[{
          {
           RowBox[{"x", "\[Rule]", "11"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "30"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "102"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}], GridBox[{
          {
           RowBox[{"x", "\[Rule]", "121"}]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.7]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.1]}, 
             Offset[0.2]}}]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{2, {{}}}, {3, {{{NumberTheory`x -> 1}, {NumberTheory`x -> 1}}}},
     {4, {{}}}, {5, {{}}}, {6, {{}}}, {
    7, {{{NumberTheory`x -> 2}, {NumberTheory`x -> 4}}}}, {8, {{}}}, {
    9, {{}}}, {10, {{}}}, {11, {{}}}, {12, {{}}}, {
    13, {{{NumberTheory`x -> 3}, {NumberTheory`x -> 9}}}}, {14, {{}}}, {
    15, {{}}}, {16, {{}}}, {17, {{}}}, {18, {{}}}, {
    19, {{{NumberTheory`x -> 7}, {NumberTheory`x -> 11}}}}, {20, {{}}}, {
    21, {{{NumberTheory`x -> 4}, {NumberTheory`x -> 16}}}}, {22, {{}}}, {
    23, {{}}}, {24, {{}}}, {25, {{}}}, {26, {{}}}, {27, {{}}}, {28, {{}}}, {
    29, {{}}}, {30, {{}}}, {
    31, {{{NumberTheory`x -> 5}, {NumberTheory`x -> 25}}}}, {32, {{}}}, {
    33, {{}}}, {34, {{}}}, {35, {{}}}, {36, {{}}}, {
    37, {{{NumberTheory`x -> 10}, {NumberTheory`x -> 26}}}}, {38, {{}}}, {
    39, {{{NumberTheory`x -> 16}, {NumberTheory`x -> 22}}}}, {40, {{}}}, {
    41, {{}}}, {42, {{}}}, {
    43, {{{NumberTheory`x -> 6}, {NumberTheory`x -> 36}}}}, {44, {{}}}, {
    45, {{}}}, {46, {{}}}, {47, {{}}}, {48, {{}}}, {
    49, {{{NumberTheory`x -> 18}, {NumberTheory`x -> 30}}}}, {50, {{}}}, {
    51, {{}}}, {52, {{}}}, {53, {{}}}, {54, {{}}}, {55, {{}}}, {56, {{}}}, {
    57, {{{NumberTheory`x -> 7}, {NumberTheory`x -> 49}}}}, {58, {{}}}, {
    59, {{}}}, {60, {{}}}, {
    61, {{{NumberTheory`x -> 13}, {NumberTheory`x -> 47}}}}, {62, {{}}}, {
    63, {{}}}, {64, {{}}}, {65, {{}}}, {66, {{}}}, {
    67, {{{NumberTheory`x -> 29}, {NumberTheory`x -> 37}}}}, {68, {{}}}, {
    69, {{}}}, {70, {{}}}, {71, {{}}}, {72, {{}}}, {
    73, {{{NumberTheory`x -> 8}, {NumberTheory`x -> 64}}}}, {74, {{}}}, {
    75, {{}}}, {76, {{}}}, {77, {{}}}, {78, {{}}}, {
    79, {{{NumberTheory`x -> 23}, {NumberTheory`x -> 55}}}}, {80, {{}}}, {
    81, {{}}}, {82, {{}}}, {83, {{}}}, {84, {{}}}, {85, {{}}}, {86, {{}}}, {
    87, {{}}}, {88, {{}}}, {89, {{}}}, {90, {{}}}, {
    91, {{{NumberTheory`x -> 9}, {NumberTheory`x -> 16}, {
       NumberTheory`x -> 74}, {NumberTheory`x -> 81}}}}, {92, {{}}}, {
    93, {{{NumberTheory`x -> 25}, {NumberTheory`x -> 67}}}}, {94, {{}}}, {
    95, {{}}}, {96, {{}}}, {
    97, {{{NumberTheory`x -> 35}, {NumberTheory`x -> 61}}}}, {98, {{}}}, {
    99, {{}}}, {100, {{}}}, {101, {{}}}, {102, {{}}}, {
    103, {{{NumberTheory`x -> 46}, {NumberTheory`x -> 56}}}}, {104, {{}}}, {
    105, {{}}}, {106, {{}}}, {107, {{}}}, {108, {{}}}, {
    109, {{{NumberTheory`x -> 45}, {NumberTheory`x -> 63}}}}, {110, {{}}}, {
    111, {{{NumberTheory`x -> 10}, {NumberTheory`x -> 100}}}}, {112, {{}}}, {
    113, {{}}}, {114, {{}}}, {115, {{}}}, {116, {{}}}, {117, {{}}}, {
    118, {{}}}, {119, {{}}}, {120, {{}}}, {121, {{}}}, {122, {{}}}, {
    123, {{}}}, {124, {{}}}, {125, {{}}}, {126, {{}}}, {
    127, {{{NumberTheory`x -> 19}, {NumberTheory`x -> 107}}}}, {128, {{}}}, {
    129, {{{NumberTheory`x -> 49}, {NumberTheory`x -> 79}}}}, {130, {{}}}, {
    131, {{}}}, {132, {{}}}, {
    133, {{{NumberTheory`x -> 11}, {NumberTheory`x -> 30}, {
       NumberTheory`x -> 102}, {NumberTheory`x -> 121}}}}}]]], "Output",
 CellLabel->
  "Out[920]//TableForm=",ExpressionUUID->"5cabc566-4d01-4e7e-a669-\
be6e892b219f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{
   SuperscriptBox["74", "2"], "+", "74", "+", "1"}], ")"}]], "Input",
 CellLabel->
  "In[925]:=",ExpressionUUID->"a8fb961d-a202-4086-984e-975eb40b975f"],

Cell[BoxData["5551"], "Output",
 CellLabel->
  "Out[925]=",ExpressionUUID->"113db6cf-937b-4956-a5d0-87b15c7cdaee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"7", " ", "13", " ", "61"}]], "Input",
 CellLabel->
  "In[926]:=",ExpressionUUID->"922c4d3a-d320-47e4-8232-31e10d5de45a"],

Cell[BoxData["5551"], "Output",
 CellLabel->
  "Out[926]=",ExpressionUUID->"a1acd7cc-cd99-4ff1-9d37-2d2abcf74d2e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ideas-2", "Section",ExpressionUUID->"9504b33e-2216-4340-afd3-f2128b5161a0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"5", " ", "4", " ", "3", " ", 
  SuperscriptBox["2", "7"]}], "\[IndentingNewLine]", 
 RowBox[{
  SuperscriptBox["2", "4"], 
  SuperscriptBox["3", "3"], 
  SuperscriptBox["5", "2"], " ", "7", " ", "11", " ", "13", " ", "17", " ", 
  "19", " ", "23", " ", "29"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Divisors", "[", 
   RowBox[{
    SuperscriptBox["2", "4"], 
    SuperscriptBox["3", "3"], 
    SuperscriptBox["5", "2"], " ", "7", " ", "11", " ", "13", " ", "17", " ", 
    "19", " ", "23", " ", "29"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "30"}], "]"}], "]"}]}], "Input",
 CellLabel->"In[26]:=",ExpressionUUID->"145108d5-92cc-4e06-b0cf-c702c147fa72"],

Cell[BoxData["7680"], "Output",
 CellLabel->"Out[26]=",ExpressionUUID->"579ee68c-200b-47ec-88fc-9e07f8c9df3f"],

Cell[BoxData["2329089562800"], "Output",
 CellLabel->"Out[27]=",ExpressionUUID->"7503aecd-b7bf-413f-8dfa-4dffc3c751e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", 
   "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", "28", 
   ",", "29", ",", "30"}], "}"}]], "Output",
 CellLabel->"Out[28]=",ExpressionUUID->"c2b5fd47-d86d-47bf-a39d-9933896b1e86"]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->{"RulerBar", "EditBar"},
WindowSize->{969.75, 688.5},
WindowMargins->{{161.25, Automatic}, {Automatic, 25.5}},
TrackCellChangeTimes->False,
Magnification:>0.75 Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (August 22, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, Visible -> False, 
  FrontEndVersion -> "13.1 for Microsoft Windows (64-bit) (August 22, 2022)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"0dfe09a0-503a-491f-b885-5203abb896d6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 83, 0, 50, "Section",ExpressionUUID->"584864ba-1211-47c1-96bd-09b055380762"],
Cell[666, 24, 354, 8, 38, "Input",ExpressionUUID->"0dff1cfb-3f9f-456d-93b9-e60cdbe2bc42"],
Cell[CellGroupData[{
Cell[1045, 36, 140, 2, 21, "Input",ExpressionUUID->"720ab3c7-4c2b-42ad-98c1-8661b1045d5a"],
Cell[1188, 40, 315, 6, 24, "Output",ExpressionUUID->"b036b63a-8f3e-4507-ba80-fe47b6d02919"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1552, 52, 361, 6, 50, "Section",ExpressionUUID->"a73767dc-da7f-4f30-b355-4465af181835"],
Cell[CellGroupData[{
Cell[1938, 62, 671, 10, 40, "Subsection",ExpressionUUID->"647ffe1f-34c1-4183-b04e-b4fa274fb19d"],
Cell[2612, 74, 157, 3, 26, "Text",ExpressionUUID->"ca7ae836-4645-4cb2-b244-e563110366b9"],
Cell[2772, 79, 290, 7, 33, "Subsubsection",ExpressionUUID->"741ce6e3-3daf-4cc1-810c-8d6edfec343d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3111, 92, 102, 0, 40, "Section",ExpressionUUID->"0326ce91-758f-41a0-aae5-cff164eae16d"],
Cell[CellGroupData[{
Cell[3238, 96, 1542, 48, 97, "Input",ExpressionUUID->"b7ae3260-04ee-4041-8e28-9b197ef485c2"],
Cell[4783, 146, 124, 1, 24, "Output",ExpressionUUID->"3f691aaa-3baf-4718-9d9e-c2449c3f2fe2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4944, 152, 648, 15, 78, "Input",ExpressionUUID->"1ac237ff-0f75-4693-aae5-52c914e56818"],
Cell[5595, 169, 125, 1, 24, "Output",ExpressionUUID->"711b6916-c7bb-47cc-8067-5818ece31b33"],
Cell[5723, 172, 125, 1, 24, "Output",ExpressionUUID->"59aaf7dd-b7cb-4915-b367-603305f5225f"],
Cell[5851, 175, 109, 1, 24, "Output",ExpressionUUID->"7a80c0a6-796f-4b0b-bb4d-dfcd1326ab58"],
Cell[5963, 178, 125, 1, 24, "Output",ExpressionUUID->"4dd0c498-b035-44e7-b6e2-9ade032a8a25"],
Cell[6091, 181, 28497, 489, 179, "Output",ExpressionUUID->"a3fe39ee-8546-41c1-893b-ac50c057c6a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34625, 675, 496, 15, 37, "Input",ExpressionUUID->"ac287134-2008-4c16-b543-79dfbc8814ed"],
Cell[35124, 692, 249, 7, 33, "Output",ExpressionUUID->"c1a4b972-3c65-4e7b-a153-81bb9bf52b63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35410, 704, 725, 23, 23, "Input",ExpressionUUID->"5cd75846-691b-4d73-8aca-9e1491c70eae"],
Cell[36138, 729, 612, 12, 21, "Message",ExpressionUUID->"56d20de7-72f1-47f3-b9ad-5efba512291e"],
Cell[36753, 743, 692, 20, 43, "Output",ExpressionUUID->"ec268519-a476-4be4-85f4-1530c0a27913"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37482, 768, 175, 5, 34, "Input",ExpressionUUID->"7e8a5835-e206-4623-8261-9777b8b8c283"],
Cell[37660, 775, 132, 3, 36, "Output",ExpressionUUID->"c88b7af2-b975-4f81-b8cd-55196293e3e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37829, 783, 392, 12, 21, "Input",ExpressionUUID->"9596d7ac-d487-4767-b904-c325a3bdf6e3"],
Cell[38224, 797, 163, 4, 24, "Output",ExpressionUUID->"cd5272bb-7c8e-451f-be0b-fc12e644fc55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38424, 806, 201, 5, 21, "Input",ExpressionUUID->"9b4a6c88-d32f-4553-9bdc-b7f40ecf33d6"],
Cell[38628, 813, 223, 6, 35, "Output",ExpressionUUID->"f48ba2ca-d188-4819-ae71-e50706813c4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38888, 824, 338, 10, 23, "Input",ExpressionUUID->"88ca9cfe-2362-4da3-8e20-7941a81014d9"],
Cell[39229, 836, 297, 10, 48, "Output",ExpressionUUID->"aa2f76ff-9f36-4b47-a748-f60a34bc5679"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39563, 851, 408, 12, 23, "Input",ExpressionUUID->"86dd371d-85e2-4d38-86a8-d1b20e4dde39"],
Cell[39974, 865, 249, 7, 33, "Output",ExpressionUUID->"8f121505-44b2-4f57-9225-bb01670a20ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40260, 877, 253, 7, 23, "Input",ExpressionUUID->"4fafe670-b9f7-4823-81c7-a16f0c08df38"],
Cell[40516, 886, 310, 10, 36, "Output",ExpressionUUID->"57daae23-8684-4d2a-9ef1-29f86a450005"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40863, 901, 165, 4, 21, "Input",ExpressionUUID->"e140e244-de09-4888-a7b9-fb0f99bc3344"],
Cell[41031, 907, 224, 5, 24, "Output",ExpressionUUID->"ebbefae4-ec2f-4c3a-9d4a-c684e0cebc9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41292, 917, 422, 13, 23, "Input",ExpressionUUID->"d7c301ec-d1e4-4de9-9adb-f57aa719c5cf"],
Cell[41717, 932, 112, 2, 24, "Output",ExpressionUUID->"79a84c16-fc40-4697-9050-2d6aa22f6fed"]
}, Open  ]],
Cell[41844, 937, 449, 13, 50, "Input",ExpressionUUID->"64049060-7a39-4660-960e-f48101b2b778"],
Cell[CellGroupData[{
Cell[42318, 954, 821, 26, 50, "Input",ExpressionUUID->"083d051a-5c79-4e0a-942c-8d83e1d8c252"],
Cell[43142, 982, 111, 2, 24, "Output",ExpressionUUID->"e7247c61-6e0f-461d-9ec8-8a0213f5404d"],
Cell[43256, 986, 111, 2, 24, "Output",ExpressionUUID->"17010872-3b2e-4d00-a923-2f79f232ed3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43404, 993, 253, 7, 23, "Input",ExpressionUUID->"ded7dbf9-b1e7-4063-92da-40c94c40dfef"],
Cell[43660, 1002, 310, 10, 36, "Output",ExpressionUUID->"4949267a-c437-4ca6-ae79-5821fc225c06"]
}, Open  ]],
Cell[43985, 1015, 341, 11, 23, "Input",ExpressionUUID->"dccdab2e-6748-43db-b3c7-ad3850268872"],
Cell[CellGroupData[{
Cell[44351, 1030, 543, 16, 37, "Input",ExpressionUUID->"4d8751b1-39b7-41ae-bd46-381f58372774"],
Cell[44897, 1048, 606, 18, 24, "Output",ExpressionUUID->"ba644b2f-279c-4d5d-b4bc-f02694fffe0c"],
Cell[45506, 1068, 457, 14, 45, "Output",ExpressionUUID->"09691b5a-6873-41b1-be51-90e3d8c68154"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46000, 1087, 136, 3, 21, "Input",ExpressionUUID->"25e5cd1a-b9c3-4649-a85c-9b8599fda9dc"],
Cell[46139, 1092, 114, 2, 24, "Output",ExpressionUUID->"73711718-4916-409a-a660-c01dfa8d42ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46290, 1099, 274, 9, 21, "Input",ExpressionUUID->"779d66d8-30e6-4b1c-b1e1-047e56e96164"],
Cell[46567, 1110, 320, 8, 21, "Message",ExpressionUUID->"7aea61a5-ffc8-4d53-9a91-2b8e3638753a"],
Cell[46890, 1120, 354, 11, 24, "Output",ExpressionUUID->"edbea09b-eb90-4030-bc5b-770513ecf7f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47281, 1136, 445, 13, 36, "Input",ExpressionUUID->"7bd96b07-665b-4bbc-80ab-5b15046b702a"],
Cell[47729, 1151, 128, 3, 24, "Output",ExpressionUUID->"4c71b703-0ce3-4160-99f3-cb3474d3e874"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47894, 1159, 287, 8, 21, "Input",ExpressionUUID->"ec0cbcdb-27fd-4e2c-a2ea-549432a98043"],
Cell[48184, 1169, 128, 3, 24, "Output",ExpressionUUID->"a0e40d86-4a00-4e2c-acd1-632edd0e3c66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48349, 1177, 394, 12, 21, "Input",ExpressionUUID->"01e1cf50-f174-4cda-92e9-19ad6568fd17"],
Cell[48746, 1191, 425, 14, 36, "Output",ExpressionUUID->"4229e90f-a56a-4ad6-80eb-328419d6e5cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49208, 1210, 278, 8, 36, "Input",ExpressionUUID->"9f417635-745d-48c9-8b60-780950ad399e"],
Cell[49489, 1220, 193, 5, 37, "Output",ExpressionUUID->"6ec8ed15-2647-4453-9ba8-37ab8df89b05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49719, 1230, 312, 9, 35, "Input",ExpressionUUID->"3ea92ef2-07c4-425b-a5df-cbf7cb897058"],
Cell[50034, 1241, 960, 29, 38, "Output",ExpressionUUID->"4ab4762b-2733-4d92-b535-85b02ee76f46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51031, 1275, 311, 7, 50, "Input",ExpressionUUID->"85471d26-a5f2-438a-b931-18f957d9a35a"],
Cell[51345, 1284, 113, 2, 24, "Output",ExpressionUUID->"bc2278de-c9e7-465d-a485-8a5b33d6e934"],
Cell[51461, 1288, 132, 3, 36, "Output",ExpressionUUID->"388c437b-141a-430c-bc55-be7f8f4e3128"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51630, 1296, 195, 4, 36, "Input",ExpressionUUID->"bfd7a74a-858f-43ba-ae2d-9ab276c70321"],
Cell[51828, 1302, 160, 4, 38, "Output",ExpressionUUID->"7183ae8c-a0b2-4af3-b704-f73d62cc03c3"],
Cell[51991, 1308, 131, 3, 36, "Output",ExpressionUUID->"6b5f7caa-9760-4f9a-b0c3-f3acbfe99da9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52159, 1316, 200, 4, 36, "Input",ExpressionUUID->"2e911e57-88df-410f-af7a-f8f69a2c0ebe"],
Cell[52362, 1322, 162, 4, 38, "Output",ExpressionUUID->"97d86518-7a3f-4f5c-b02f-ffc1fae6ec60"],
Cell[52527, 1328, 133, 3, 36, "Output",ExpressionUUID->"4ee6b835-43d7-4750-be4e-89a32f24e990"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52697, 1336, 554, 16, 23, "Input",ExpressionUUID->"f98355b3-fd4c-424b-a69e-5e5c1f9fe928"],
Cell[53254, 1354, 142, 3, 24, "Output",ExpressionUUID->"8b0d9128-91be-425f-9197-71cffb57bd60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53433, 1362, 259, 8, 23, "Input",ExpressionUUID->"28c8c72f-ed22-48a0-957d-065ecaab78c0"],
Cell[53695, 1372, 268, 9, 24, "Output",ExpressionUUID->"20993d3c-461b-4735-86d0-7db013b359d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54000, 1386, 537, 17, 37, "Input",ExpressionUUID->"43423d68-2578-4b06-9d54-3942d507ed8c"],
Cell[54540, 1405, 633, 19, 48, "Output",ExpressionUUID->"7b7fc21b-8b8c-4d14-8dae-f6a7e8d6cdd7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55210, 1429, 1229, 41, 72, "Input",ExpressionUUID->"c0ab7b56-4d96-47a8-89de-ae17b3e05428"],
Cell[56442, 1472, 111, 2, 24, "Output",ExpressionUUID->"d23f283c-1b6b-4fcc-8914-2129bd41a8ed"],
Cell[56556, 1476, 111, 2, 24, "Output",ExpressionUUID->"af919311-dedc-42b8-83e0-1c5bfb1eb703"],
Cell[56670, 1480, 111, 2, 24, "Output",ExpressionUUID->"e1ae996e-5135-4b91-a5a8-afdd7a4e0cab"],
Cell[56784, 1484, 111, 2, 24, "Output",ExpressionUUID->"f61329b5-8e1b-4269-8f83-169a2f70c298"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56932, 1491, 365, 11, 23, "Input",ExpressionUUID->"9a8c3251-e05f-4083-a6e7-1de48a2e198d"],
Cell[57300, 1504, 112, 2, 24, "Output",ExpressionUUID->"7a6b0099-ed3c-4170-baea-4b65889f53ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57449, 1511, 358, 11, 23, "Input",ExpressionUUID->"270e24e4-a9b9-4d67-8f5f-8c2b215af650"],
Cell[57810, 1524, 111, 2, 24, "Output",ExpressionUUID->"63a37529-1cdc-4aa2-94bc-59f1b30ab9a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57958, 1531, 466, 15, 36, "Input",ExpressionUUID->"7ab464c1-2bf4-49b0-99cb-082f7c552ce4"],
Cell[58427, 1548, 135, 3, 34, "Output",ExpressionUUID->"3c66d35c-cc20-48e5-9afc-362ea50b7138"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58599, 1556, 213, 6, 36, "Input",ExpressionUUID->"865d2f04-e2d7-44a1-a103-cedc03faa908"],
Cell[58815, 1564, 169, 4, 24, "Output",ExpressionUUID->"0952126f-6180-4531-815d-0f1a4bb046ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59021, 1573, 286, 8, 21, "Input",ExpressionUUID->"fddf72ad-e166-4fab-b381-b64c66edeea4"],
Cell[59310, 1583, 1421, 42, 67, "Output",ExpressionUUID->"2997e2c6-1c4d-422f-874a-4e9564cd3573"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60768, 1630, 286, 8, 21, "Input",ExpressionUUID->"4bbcb6b6-3263-4d95-8628-86eba7d4aee4"],
Cell[61057, 1640, 1438, 43, 38, "Output",ExpressionUUID->"4175c346-8e76-46c1-af5a-472bc95f4846"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62532, 1688, 276, 8, 21, "Input",ExpressionUUID->"226c22b6-05bb-47d0-af7a-9cfffb28c3f5"],
Cell[62811, 1698, 32001, 547, 183, "Output",ExpressionUUID->"e514af60-d55c-4a6b-b6c7-70a230697419"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94849, 2250, 501, 16, 21, "Input",ExpressionUUID->"40bde131-f95f-46e2-bc4e-9b243d4e075c"],
Cell[95353, 2268, 848, 32, 145, "Output",ExpressionUUID->"16ebe500-3242-436c-992a-401753a84df6"]
}, Open  ]],
Cell[96216, 2303, 471, 15, 47, "Input",ExpressionUUID->"01a5c0ad-3bec-48e4-a270-e47b2bd79e28"],
Cell[CellGroupData[{
Cell[96712, 2322, 137, 3, 21, "Input",ExpressionUUID->"eeb3da70-fbe1-431e-b889-96ecb94ee51d"],
Cell[96852, 2327, 112, 2, 24, "Output",ExpressionUUID->"7843c3f3-18a8-4b46-9580-9436cbead7b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97001, 2334, 183, 5, 35, "Input",ExpressionUUID->"b52a10c0-b23a-4831-b07f-1434f6774508"],
Cell[97187, 2341, 129, 2, 24, "Output",ExpressionUUID->"ae16ba4b-a608-44c9-8a02-86d5cf56cfd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97353, 2348, 282, 8, 34, "Input",ExpressionUUID->"68b0b153-8cb4-4a88-a15f-b5654ecfbebc"],
Cell[97638, 2358, 111, 2, 24, "Output",ExpressionUUID->"40d484b6-b044-4aed-8144-ac343581dac3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97786, 2365, 308, 10, 34, "Input",ExpressionUUID->"aa2364c5-936e-4ca5-b1a4-8327d1d54ce7"],
Cell[98097, 2377, 129, 2, 24, "Output",ExpressionUUID->"a9d6e4b4-1653-4132-a730-d6c1c03f26cb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[98275, 2385, 255, 4, 40, "Section",ExpressionUUID->"4a28bc01-1314-4d89-86b1-d25783421b8d"],
Cell[CellGroupData[{
Cell[98555, 2393, 710, 11, 40, "Subsection",ExpressionUUID->"ae085fba-bac2-41a1-b588-c3ceca0da615"],
Cell[CellGroupData[{
Cell[99290, 2408, 341, 8, 33, "Subsubsection",ExpressionUUID->"0737d7a8-f14f-4786-b6fc-075c458198cc"],
Cell[CellGroupData[{
Cell[99656, 2420, 22847, 417, 551, "Input",ExpressionUUID->"163d618f-dec4-431f-9d2a-074390a020dd"],
Cell[122506, 2839, 12128, 270, 536, "Output",ExpressionUUID->"6b6c944c-597e-46c7-8ef9-4e3301a0ab9c"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134680, 3115, 345, 8, 33, "Subsubsection",ExpressionUUID->"09a9c9df-99fe-4e36-b5fe-3c176165071a"],
Cell[135028, 3125, 698, 24, 27, "Text",ExpressionUUID->"14b53f8f-828b-4b9d-a344-a468ab54ad02"],
Cell[CellGroupData[{
Cell[135751, 3153, 2196, 48, 48, "Input",ExpressionUUID->"a2698e06-8f3b-492f-bdf7-841b76d725dd"],
Cell[137950, 3203, 992, 28, 122, "Output",ExpressionUUID->"e5e52097-ff9a-461f-acc8-d06469462c55"],
Cell[138945, 3233, 610, 12, 39, "Output",ExpressionUUID->"45afbba0-4ecf-4ebf-9a5a-a042f8a2ae49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139592, 3250, 414, 12, 24, "Input",ExpressionUUID->"caa3cf05-4d08-40ce-b637-14415b90bb10"],
Cell[140009, 3264, 761, 28, 173, "Output",ExpressionUUID->"49f98c5a-c2b5-4b7e-89de-f76ac8a24934"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[140843, 3300, 294, 5, 40, "Section",ExpressionUUID->"40d3c714-e711-4449-9662-b09cb735022c"],
Cell[CellGroupData[{
Cell[141162, 3309, 259, 4, 40, "Subsection",ExpressionUUID->"99b84f84-760f-4fba-96cd-a24c9c89b930"],
Cell[CellGroupData[{
Cell[141446, 3317, 358, 11, 21, "Input",ExpressionUUID->"f5f9f753-db1e-4021-b7db-ee5a5913c6df"],
Cell[141807, 3330, 1079, 42, 227, "Output",ExpressionUUID->"087080a2-b78b-4f99-9c2b-c07c093db6ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142923, 3377, 384, 9, 91, "Input",ExpressionUUID->"c04f2df2-18ad-4078-b0f1-94be0edba2c9"],
Cell[143310, 3388, 113, 2, 24, "Output",ExpressionUUID->"4348722c-aba8-4505-9717-5d32dd29f10f"],
Cell[143426, 3392, 113, 2, 24, "Output",ExpressionUUID->"68f724ce-831a-4d9b-a7dd-0a096376ca89"],
Cell[143542, 3396, 113, 2, 24, "Output",ExpressionUUID->"67e4f9f8-ffbf-4e48-aaa8-6996e4f04bfb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143692, 3403, 332, 9, 21, "Input",ExpressionUUID->"204ba2ca-604e-4a1d-9db4-0884ac000498"],
Cell[144027, 3414, 1192, 39, 91, "Output",ExpressionUUID->"ddbe29ae-c97e-4b17-a172-996bbe1f70f2"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[145280, 3460, 92, 0, 40, "Section",ExpressionUUID->"2d041af1-b0cf-44a8-8ae5-18d7b740aa3f"],
Cell[CellGroupData[{
Cell[145397, 3464, 109, 0, 41, "Subsection",ExpressionUUID->"78eeb584-9c4d-4b2b-a886-0ec543cbefc6"],
Cell[CellGroupData[{
Cell[145531, 3468, 370, 11, 21, "Input",ExpressionUUID->"e653da25-f228-4601-866d-52aa88a4bb5c"],
Cell[145904, 3481, 1807, 48, 183, "Output",ExpressionUUID->"50f2d3d4-4ae4-4435-9dab-5d2e9c2f0ead"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147748, 3534, 296, 8, 21, "Input",ExpressionUUID->"ae0510dc-08c3-4391-bc6b-2bf4dedf0b0a"],
Cell[148047, 3544, 723, 23, 24, "Output",ExpressionUUID->"f50a324f-8beb-4936-85e6-097ece6aa0fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148807, 3572, 763, 22, 37, "Input",ExpressionUUID->"189a88e2-3ff6-44b2-9edf-8f8c4de93e23"],
Cell[149573, 3596, 561, 13, 24, "Output",ExpressionUUID->"6b0830e3-25af-4dd5-a0cc-d9af31bc159c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[150183, 3615, 105, 0, 41, "Subsection",ExpressionUUID->"c15be270-ecfe-4a37-ae9c-a00d753600f5"],
Cell[150291, 3617, 612, 18, 36, "Input",ExpressionUUID->"80b6c3fd-58b7-4654-bc60-ae5609678d02"],
Cell[150906, 3637, 1229, 38, 62, "Input",ExpressionUUID->"2dcf1744-fef0-4e8e-8cc5-c1edb738ac8e"],
Cell[152138, 3677, 1237, 38, 62, "Input",ExpressionUUID->"3810d454-fa88-4171-b211-4f8cf25698e2"],
Cell[153378, 3717, 1563, 48, 84, "Input",ExpressionUUID->"b6a102b7-dfd7-4332-860d-5d3bcf09404f"],
Cell[CellGroupData[{
Cell[154966, 3769, 244, 5, 36, "Input",ExpressionUUID->"03b0d89d-50d7-45d0-84b2-880b996b561f"],
Cell[155213, 3776, 199, 4, 24, "Output",ExpressionUUID->"32851b1e-851a-499b-8b8d-9e17fee540e8"],
Cell[155415, 3782, 593, 15, 24, "Output",ExpressionUUID->"f61172a0-7e2d-43a4-a734-3c2374351077"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[156057, 3803, 102, 0, 30, "Subsection",ExpressionUUID->"b9ca525e-555a-4bff-9120-23cd336a40d4"],
Cell[156162, 3805, 418, 12, 21, "Input",ExpressionUUID->"b07af943-56b3-4c72-9204-a1a6e95a5bcd"],
Cell[CellGroupData[{
Cell[156605, 3821, 1371, 41, 36, "Input",ExpressionUUID->"29c3da12-13d0-439c-9bc9-a288d2b25475"],
Cell[157979, 3864, 5284, 113, 178, "Output",ExpressionUUID->"8da89879-3d91-47be-8e89-aa32eb27458c"]
}, Open  ]],
Cell[163278, 3980, 1935, 63, 121, "Input",ExpressionUUID->"2dd0203c-6d48-41cb-9855-10050a014663"],
Cell[CellGroupData[{
Cell[165238, 4047, 723, 19, 36, "Input",ExpressionUUID->"7a4f667f-5add-4f62-b5a2-5dfb2a2d2856"],
Cell[165964, 4068, 1722, 34, 227, "Output",ExpressionUUID->"f9f0fe41-d53c-4ce2-b1a5-f2c7314adbe3"]
}, Open  ]],
Cell[167701, 4105, 874, 26, 64, "Input",ExpressionUUID->"e93fd0fb-85b3-44b8-9b1e-7417edb63205"],
Cell[168578, 4133, 1246, 35, 50, "Input",ExpressionUUID->"006de8e4-704e-4654-8c89-d4ffc5e94bb6"],
Cell[169827, 4170, 1602, 46, 50, "Input",ExpressionUUID->"2d0441b0-072a-48e0-b640-87704e2ae8c6"],
Cell[CellGroupData[{
Cell[171454, 4220, 1610, 46, 50, "Input",ExpressionUUID->"508e8dfe-63c9-41d0-9886-59b1fa8a1bdd"],
Cell[173067, 4268, 1995, 42, 227, "Output",ExpressionUUID->"6cdb0267-1213-45cb-a930-89d179402e18"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[175123, 4317, 95, 0, 40, "Section",ExpressionUUID->"7b2cdd12-49ea-491f-ba1b-d79aeddc6944"],
Cell[CellGroupData[{
Cell[175243, 4321, 828, 23, 67, "Input",ExpressionUUID->"ca043ac0-29e4-44aa-9480-30e49a76c93a"],
Cell[176074, 4346, 161, 3, 24, "Output",ExpressionUUID->"9a77618f-6de3-4b9c-b55a-4c8a656fa05c"],
Cell[176238, 4351, 192, 4, 24, "Output",ExpressionUUID->"96906a21-ff9c-4f3e-9873-190c0412aa4b"],
Cell[176433, 4357, 162, 3, 24, "Output",ExpressionUUID->"a6b2e062-f129-4664-bd8f-8cd08a89c245"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176632, 4365, 272, 6, 21, "Input",ExpressionUUID->"2ec2cdca-ce70-4a99-9050-6cb2198fb64f"],
Cell[176907, 4373, 207, 5, 36, "Output",ExpressionUUID->"1744bbaf-cc49-418e-bed5-a4387b7ae7a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177151, 4383, 313, 9, 23, "Input",ExpressionUUID->"270229c2-1416-4616-94bd-b0effca53762"],
Cell[177467, 4394, 212, 6, 36, "Output",ExpressionUUID->"0be69b9f-e030-405d-b2e2-c441baa63636"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177716, 4405, 1243, 37, 81, "Input",ExpressionUUID->"8252add3-77af-4399-b238-b9658f985984"],
Cell[178962, 4444, 138, 2, 24, "Output",ExpressionUUID->"02e88974-b81d-4de6-a759-ca0584d9f07f"],
Cell[179103, 4448, 138, 2, 24, "Output",ExpressionUUID->"ee2d7290-1ce0-4668-9a4f-3755c81c5874"],
Cell[179244, 4452, 162, 3, 24, "Output",ExpressionUUID->"a56797e3-17f7-45a5-bfdd-5d2006d07cbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179443, 4460, 571, 17, 34, "Input",ExpressionUUID->"5d90be8a-4b25-4f0c-96f8-61abe01a6322"],
Cell[180017, 4479, 897, 29, 42, "Output",ExpressionUUID->"7a63cbfb-9890-4ce8-b6dd-e6aeafb9062b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180951, 4513, 226, 5, 21, "Input",ExpressionUUID->"aa9d2f4e-d2b6-40cb-96b7-85c169579bf5"],
Cell[181180, 4520, 160, 3, 24, "Output",ExpressionUUID->"ec0187c7-24ff-472e-9918-8fa3fbdef8a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181377, 4528, 227, 5, 21, "Input",ExpressionUUID->"db90b57a-c480-4185-ad1a-fc9ecc13b0c8"],
Cell[181607, 4535, 271, 7, 38, "Output",ExpressionUUID->"538e4c47-7211-4107-a227-00d913e4440a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181915, 4547, 323, 8, 37, "Input",ExpressionUUID->"a944e4c8-9da4-4899-8308-b7c380044a4c"],
Cell[182241, 4557, 329, 8, 39, "Output",ExpressionUUID->"9dd3bdc1-3188-40d5-b0c7-6b697978350f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[182619, 4571, 79, 0, 40, "Section",ExpressionUUID->"27993ea5-e291-4fcf-802a-e9b5cd525f22"],
Cell[CellGroupData[{
Cell[182723, 4575, 694, 25, 39, "Input",ExpressionUUID->"30e4362a-8d19-4151-a459-38954891e15b"],
Cell[183420, 4602, 129, 2, 24, "Output",ExpressionUUID->"4e24bc06-badf-4e74-9328-8814c2a8b2af"]
}, Open  ]],
Cell[183564, 4607, 164, 4, 21, InheritFromParent,ExpressionUUID->"98423d18-a8e4-45a3-b0d3-839e9918a427"],
Cell[183731, 4613, 129, 2, 24, "Output",ExpressionUUID->"171c1485-49f3-4bbf-bbf2-4c7af6fea5b9"]
}, Closed]],
Cell[CellGroupData[{
Cell[183897, 4620, 79, 0, 40, "Section",ExpressionUUID->"0eac14ef-2d59-4845-85db-f8c7beb3182e"],
Cell[CellGroupData[{
Cell[184001, 4624, 723, 21, 135, "Input",ExpressionUUID->"a849d4ee-f2d3-47b8-92f4-716239a7b577"],
Cell[184727, 4647, 108, 1, 24, "Output",ExpressionUUID->"5bb2566b-b841-4324-b8a8-c811d149d669"],
Cell[184838, 4650, 107, 1, 24, "Output",ExpressionUUID->"12124aaa-1463-4c76-80cd-658d28ef4194"],
Cell[184948, 4653, 107, 1, 24, "Output",ExpressionUUID->"748f5c9a-964f-403c-8415-9083efb7c8a6"],
Cell[185058, 4656, 107, 1, 24, "Output",ExpressionUUID->"e9d968df-5154-4405-adbd-43f211329efd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185202, 4662, 361, 9, 91, "Input",ExpressionUUID->"0740a47e-29ed-4985-8a72-93160d7c1ec8"],
Cell[185566, 4673, 111, 2, 24, "Output",ExpressionUUID->"54aade74-a678-41be-962f-87c203f0459f"],
Cell[185680, 4677, 111, 2, 24, "Output",ExpressionUUID->"48d1b0a8-e2c5-4d35-9aae-76de6f473dd8"],
Cell[185794, 4681, 111, 2, 24, "Output",ExpressionUUID->"3c4f2b9f-d6e8-4a96-805e-868559d30408"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185942, 4688, 302, 8, 21, "Input",ExpressionUUID->"68d5b506-2436-482a-8780-81f9c8e84b38"],
Cell[186247, 4698, 2678, 80, 89, "Output",ExpressionUUID->"4d41e224-a75a-4799-bcd1-effddd58755f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[188974, 4784, 79, 0, 40, "Section",ExpressionUUID->"8eb69f0a-c265-4fc5-a4b7-ca4e66a9dce0"],
Cell[CellGroupData[{
Cell[189078, 4788, 3122, 104, 78, "Input",ExpressionUUID->"b59d6e06-7d14-4075-811e-5d1b4147f80a"],
Cell[192203, 4894, 717, 24, 24, "Output",ExpressionUUID->"40366847-7871-432f-b82b-f731f0c4bfb7"],
Cell[192923, 4920, 625, 21, 24, "Output",ExpressionUUID->"86c132d7-07b7-4b12-8b97-9f07285f35e5"],
Cell[193551, 4943, 713, 24, 24, "Output",ExpressionUUID->"f4d4a739-607c-4390-921b-ff08a6ec8e94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194301, 4972, 1861, 56, 178, "Input",ExpressionUUID->"91177b14-3b6f-4104-882b-fa6a4f4466ff"],
Cell[196165, 5030, 1174, 38, 89, "Output",ExpressionUUID->"1fb2a650-1977-44f7-a1b8-9d735d4f2ec6"],
Cell[197342, 5070, 922, 29, 48, "Output",ExpressionUUID->"6138f5ae-6b1c-4c32-a57f-8d0caaccba2d"],
Cell[198267, 5101, 2994, 90, 118, "Output",ExpressionUUID->"bd525ccb-9c68-418b-b95e-77140c471f04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201298, 5196, 276, 9, 21, "Input",ExpressionUUID->"406e9af7-f49d-456a-b32d-41e462737112"],
Cell[201577, 5207, 129, 2, 24, "Output",ExpressionUUID->"d0dae065-0899-4289-8a54-e855bf66eabe"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[201755, 5215, 79, 0, 40, "Section",ExpressionUUID->"91a5e561-a3d5-405d-9599-621acb255a90"],
Cell[CellGroupData[{
Cell[201859, 5219, 1147, 36, 78, "Input",ExpressionUUID->"5ea66255-8476-44f4-9db7-7d5661d10018"],
Cell[203009, 5257, 20408, 355, 67, "Output",ExpressionUUID->"ccd4a19a-cdb4-479b-9e37-e1cc9b2e8dc3"],
Cell[223420, 5614, 20408, 355, 67, "Output",ExpressionUUID->"a5c27747-4df4-4f2a-9535-65bff3fc8eb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243865, 5974, 140, 2, 36, "Input",ExpressionUUID->"2822b7f1-d943-4ada-b4e6-db73fd552693"],
Cell[244008, 5978, 38461, 689, 180, "Output",ExpressionUUID->"24940570-b977-449a-a882-5af24bd835a7"],
Cell[282472, 6669, 63406, 1153, 259, "Output",ExpressionUUID->"5073efb2-cd3a-4964-a450-1ad50a17c672"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345915, 7827, 542, 17, 21, "Input",ExpressionUUID->"ca213c44-fff7-41dc-968d-ef74e58a5d54"],
Cell[346460, 7846, 52653, 965, 229, "Output",ExpressionUUID->"a6836e16-9116-463e-8070-8f8c9fb6ee82"]
}, Open  ]],
Cell[399128, 8814, 897, 28, 36, "Input",ExpressionUUID->"6faf4c56-8a8a-4f79-95cd-a7fe55715c4e"],
Cell[CellGroupData[{
Cell[400050, 8846, 140, 2, 36, "Input",ExpressionUUID->"e43fa3ae-13f0-4b81-964f-9560aceee46e"],
Cell[400193, 8850, 38461, 689, 143, "Output",ExpressionUUID->"47101c13-4a1f-4be1-9cae-9c36770cc5ac"],
Cell[438657, 9541, 52653, 965, 229, "Output",ExpressionUUID->"f0ccd9c3-fe6c-416c-8911-ecb32aeb22b3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[491359, 10512, 79, 0, 40, "Section",ExpressionUUID->"16744f27-e851-44de-9fee-e736ce631986"],
Cell[CellGroupData[{
Cell[491463, 10516, 92, 0, 40, "Subsection",ExpressionUUID->"0cd18d76-9d52-4214-8cf2-49db18ece860"],
Cell[491558, 10518, 1207, 37, 21, "Input",ExpressionUUID->"e576d98b-d28e-49c2-9217-1e3581b6243d"],
Cell[CellGroupData[{
Cell[492790, 10559, 1228, 38, 93, "Input",ExpressionUUID->"e5d83fbe-6026-43da-9c8a-16dbad50c4a3"],
Cell[494021, 10599, 38461, 689, 143, "Output",ExpressionUUID->"9d185394-b0ae-4810-9bc2-93e3e27d2b14"],
Cell[532485, 11290, 63406, 1153, 259, "Output",ExpressionUUID->"8aa2e1f3-89d4-4c75-a1f1-235626765b26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[595928, 12448, 542, 17, 21, "Input",ExpressionUUID->"ac9a6875-492f-40cc-8bed-49d8de213790"],
Cell[596473, 12467, 52653, 965, 229, "Output",ExpressionUUID->"8e86b686-69de-430b-9752-bcbaceddb6d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[649163, 13437, 167, 4, 21, "Input",ExpressionUUID->"3ccfbe17-d216-4b54-bbfc-ad8ff2c39425"],
Cell[649333, 13443, 1040, 33, 24, "Output",ExpressionUUID->"c21f5e16-e510-454d-9311-df74ccbad4ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[650410, 13481, 143, 3, 21, "Input",ExpressionUUID->"6f668242-c645-4355-9751-f50999743734"],
Cell[650556, 13486, 121, 2, 24, "Output",ExpressionUUID->"df15e6c5-3c93-4aac-adab-6563d806fef7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[650714, 13493, 455, 14, 21, "Input",ExpressionUUID->"a15caaa9-83fe-4d46-91a4-47ae595db19e"],
Cell[651172, 13509, 215, 6, 24, "Output",ExpressionUUID->"fc1bab8b-165c-4d63-8925-6094459e0af3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[651436, 13521, 110, 0, 28, "Subsection",ExpressionUUID->"241bd142-cde8-4684-b6ca-ca7a6ad353bc"],
Cell[CellGroupData[{
Cell[651571, 13525, 182, 4, 21, "Input",ExpressionUUID->"dea2ee0c-4e4f-44f0-9b18-18ba4afb2083"],
Cell[651756, 13531, 125, 1, 24, "Output",ExpressionUUID->"fea1af9e-901d-4c76-a388-0f2905d57916"]
}, Open  ]],
Cell[CellGroupData[{
Cell[651918, 13537, 475, 15, 38, "Input",ExpressionUUID->"0344be43-6e24-4750-b0b9-2094d511c65f"],
Cell[652396, 13554, 225, 4, 24, "Output",ExpressionUUID->"c5fac19f-a14b-4ed3-afec-92633d8efd7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[652658, 13563, 228, 5, 21, "Input",ExpressionUUID->"f8ada038-cfee-45f6-8c57-9579991ebc3b"],
Cell[652889, 13570, 272, 7, 38, "Output",ExpressionUUID->"476d8604-9c4f-4db4-aec3-8e4eaa7b6d98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[653198, 13582, 154, 3, 21, "Input",ExpressionUUID->"3803716e-3ab6-4b6a-93a0-59f3a4dc49d7"],
Cell[653355, 13587, 127, 1, 24, "Output",ExpressionUUID->"1c71962b-b1b1-45dc-a326-18444ed9e3a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[653519, 13593, 278, 7, 33, "Input",ExpressionUUID->"06d97977-7946-47a3-9dcf-5655b6c3a86d"],
Cell[653800, 13602, 279, 7, 36, "Output",ExpressionUUID->"77561ea0-b8e6-4b35-a3bc-12e9593cc88c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[654116, 13614, 213, 4, 21, "Input",ExpressionUUID->"d5c3ff5a-d576-4163-9249-74801a3583c0"],
Cell[654332, 13620, 214, 4, 24, "Output",ExpressionUUID->"af3d502e-37c0-4aaa-be41-93ea50739288"]
}, Open  ]],
Cell[CellGroupData[{
Cell[654583, 13629, 254, 6, 23, "Input",ExpressionUUID->"9eb4b410-acba-4ae9-9e97-a986760b047b"],
Cell[654840, 13637, 311, 9, 26, "Output",ExpressionUUID->"6e834e33-29f4-4972-a3d7-0b3c5140e103"]
}, Open  ]],
Cell[CellGroupData[{
Cell[655188, 13651, 177, 4, 21, "Input",ExpressionUUID->"0c29745d-e6ab-4c2e-ab8f-0d23c1bfab28"],
Cell[655368, 13657, 111, 2, 24, "Output",ExpressionUUID->"92deadeb-e357-4b7a-a985-25659a256656"]
}, Open  ]],
Cell[CellGroupData[{
Cell[655516, 13664, 183, 4, 21, "Input",ExpressionUUID->"2f61d6f2-6624-4bdf-8f3e-c0204d7e6e5e"],
Cell[655702, 13670, 111, 2, 24, "Output",ExpressionUUID->"3b76a36a-ca3b-4da6-9be8-57b34e565775"]
}, Open  ]],
Cell[CellGroupData[{
Cell[655850, 13677, 232, 6, 21, "Input",ExpressionUUID->"61b99e57-9477-473f-bdab-b0e8da68cf60"],
Cell[656085, 13685, 276, 8, 54, "Output",ExpressionUUID->"b67a782b-30ef-4561-9630-66c6df903d75"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[656422, 13700, 79, 0, 40, "Section",ExpressionUUID->"c9310061-0694-46aa-b22b-ee02ad5b3e1c"],
Cell[CellGroupData[{
Cell[656526, 13704, 208, 5, 21, "Input",ExpressionUUID->"13b912c4-3676-4811-8caf-67a373113560"],
Cell[656737, 13711, 138, 3, 24, "Output",ExpressionUUID->"b5ec00cd-1e6c-4693-9260-4d1d0bf6761a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[656912, 13719, 139, 3, 21, "Input",ExpressionUUID->"da1a00d1-e536-4779-92fe-a71f07779c40"],
Cell[657054, 13724, 138, 3, 24, "Output",ExpressionUUID->"b425c9d6-0dee-4d39-b42a-a3b28b80f487"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[657241, 13733, 79, 0, 40, "Section",ExpressionUUID->"00aaede4-2441-4528-ae9a-bfe818258fe2"],
Cell[CellGroupData[{
Cell[657345, 13737, 102, 0, 41, "Subsection",ExpressionUUID->"83fbd569-3a61-4df5-8711-c72e7aab75d9"],
Cell[657450, 13739, 418, 12, 21, "Input",ExpressionUUID->"92c08feb-c49f-436f-9256-a1b8ce9ebfcf"],
Cell[CellGroupData[{
Cell[657893, 13755, 1371, 41, 64, "Input",ExpressionUUID->"6247a021-1292-4e61-918a-7ee846e5070f"],
Cell[659267, 13798, 5284, 113, 178, "Output",ExpressionUUID->"018c75c8-53df-4392-8a55-a044dc3a1d9c"]
}, Open  ]],
Cell[664566, 13914, 1935, 63, 121, "Input",ExpressionUUID->"af45c476-2230-4790-8f14-6cad2b51bb7f"],
Cell[CellGroupData[{
Cell[666526, 13981, 723, 19, 36, "Input",ExpressionUUID->"bf8cc756-5c2e-4f21-b746-3e613f1de82b"],
Cell[667252, 14002, 1722, 34, 227, "Output",ExpressionUUID->"d4326fd2-e499-4001-9577-4c78801ba08f"]
}, Open  ]],
Cell[668989, 14039, 874, 26, 64, "Input",ExpressionUUID->"106a75df-4713-4a93-a753-19eb806fa455"],
Cell[669866, 14067, 1246, 35, 50, "Input",ExpressionUUID->"a249a91b-e5a9-46a7-9dcf-4037411eb193"],
Cell[671115, 14104, 1602, 46, 50, "Input",ExpressionUUID->"741d2194-bd04-44d0-bdc6-24867ff854ad"],
Cell[CellGroupData[{
Cell[672742, 14154, 1610, 46, 50, "Input",ExpressionUUID->"4bed9573-edd7-4d93-a69f-9557991e93c4"],
Cell[674355, 14202, 1995, 42, 227, "Output",ExpressionUUID->"39b1206a-0520-4129-aee0-e22d9a1fd21f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[676399, 14250, 87, 0, 30, "Subsection",ExpressionUUID->"2d08a09a-8875-4aac-b9b4-cce2a60c7ad4"],
Cell[676489, 14252, 357, 11, 38, "Input",ExpressionUUID->"a713cd2a-49d3-4866-ac20-a3c5ea7dd62d"],
Cell[CellGroupData[{
Cell[676871, 14267, 408, 11, 36, "Input",ExpressionUUID->"f324b9fa-262c-4505-9996-940214c4a52c"],
Cell[677282, 14280, 182, 4, 24, "Output",ExpressionUUID->"eae44463-8efb-4016-a79b-f77a29eeee6c"],
Cell[677467, 14286, 107, 1, 24, "Output",ExpressionUUID->"8660f31f-2c16-4b25-9650-dafcb05cdfbf"]
}, Open  ]],
Cell[677589, 14290, 141, 3, 21, "Input",ExpressionUUID->"8f981e09-4292-4afb-8139-dff0a53fe636"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[677779, 14299, 96, 0, 40, "Section",ExpressionUUID->"93d46b48-3d2f-4354-8d43-e1ddacbd8486"],
Cell[CellGroupData[{
Cell[677900, 14303, 81, 0, 41, "Subsection",ExpressionUUID->"0eca23eb-e1ba-4c33-92fe-e4a031839e64"],
Cell[CellGroupData[{
Cell[678006, 14307, 348, 9, 21, "Input",ExpressionUUID->"5c470804-dda5-460c-9dd4-7b64c6f1b3e0"],
Cell[678357, 14318, 2082, 52, 184, "Output",ExpressionUUID->"b31e4987-1cd4-4b5d-94a0-df0280d48810"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[680488, 14376, 92, 0, 41, "Subsection",ExpressionUUID->"ffac5d68-7d87-414f-82e5-323284a81c58"],
Cell[CellGroupData[{
Cell[680605, 14380, 1605, 41, 122, "Input",ExpressionUUID->"0cbef729-a7d2-4e5e-ac7c-7ced5ae93c58"],
Cell[682213, 14423, 2022, 44, 257, "Output",ExpressionUUID->"10863205-d440-43ff-869e-18cdb33a8e53"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[684284, 14473, 87, 0, 41, "Subsection",ExpressionUUID->"04fbe04a-f87e-4718-bf5c-edd6c60db9e1"],
Cell[684374, 14475, 78, 0, 27, "Text",ExpressionUUID->"b79ab275-e748-482b-a92b-bcf45e7eca71"],
Cell[684455, 14477, 83, 0, 21, "Input",ExpressionUUID->"1e10154e-4599-486b-9a0e-719fc34fc8ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[684575, 14482, 86, 0, 41, "Subsection",ExpressionUUID->"1a18052e-cd8c-4232-ab98-5256ef4ba350"],
Cell[CellGroupData[{
Cell[684686, 14486, 1243, 40, 53, "Input",ExpressionUUID->"6daf9dc9-6f27-4898-a887-63c01c2004eb"],
Cell[685932, 14528, 207, 4, 25, "Output",ExpressionUUID->"0464c846-420a-49fa-bc67-c24283c96b34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[686176, 14537, 566, 16, 50, "Input",ExpressionUUID->"f2dfd617-0018-4d25-a69b-4c5f8fa314b0"],
Cell[686745, 14555, 127, 2, 39, "Output",ExpressionUUID->"cea32020-b932-4a2d-88a4-250c21c5e412"],
Cell[686875, 14559, 124, 2, 24, "Output",ExpressionUUID->"b5ee7c90-2d44-442d-9607-f0b98fef9f2f"],
Cell[687002, 14563, 127, 2, 39, "Output",ExpressionUUID->"a2f52f90-1794-45ae-9c91-c4cd3e103e81"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[687178, 14571, 95, 0, 30, "Subsection",ExpressionUUID->"d99c4535-2ff1-4051-9c69-fde3dd3a60b5"],
Cell[687276, 14573, 360, 12, 38, "Input",ExpressionUUID->"4282061c-a832-4089-9c1f-2d2fe60f3a69"],
Cell[687639, 14587, 1746, 54, 51, "Input",ExpressionUUID->"f1988eca-20b4-4966-976a-707c0a5b03c8"],
Cell[CellGroupData[{
Cell[689410, 14645, 604, 17, 37, "Input",ExpressionUUID->"84f4029b-880c-4bc6-9402-cbce43f0f17d"],
Cell[690017, 14664, 475, 13, 41, "Output",ExpressionUUID->"d123d0a5-4bca-4a03-b95b-df9fdc8556a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[690529, 14682, 1611, 49, 67, "Input",ExpressionUUID->"253307f2-34a1-4783-86e6-015fc4ac11f0"],
Cell[692143, 14733, 114, 1, 24, "Output",ExpressionUUID->"26b6ea59-360e-441b-97dc-6c5e59c1c407"],
Cell[692260, 14736, 114, 1, 24, "Output",ExpressionUUID->"27f940bb-a968-47c4-8be4-3fea9e0d339e"],
Cell[692377, 14739, 114, 1, 24, "Output",ExpressionUUID->"4f63ea25-4aaa-4936-9b21-6637e751eca6"]
}, Open  ]],
Cell[692506, 14743, 193, 5, 21, "Input",ExpressionUUID->"14080954-84ad-47fd-8592-872242637a4b"],
Cell[CellGroupData[{
Cell[692724, 14752, 351, 10, 21, "Input",ExpressionUUID->"1ad90270-719d-42bf-af20-a2d7eb7f62b4"],
Cell[693078, 14764, 966, 17, 34, "Message",ExpressionUUID->"61be9963-a2bf-4dc6-8470-ff0fa5817cc1"],
Cell[694047, 14783, 386, 10, 24, "Output",ExpressionUUID->"b59ab386-e73d-4389-9563-f9dd512ede54"]
}, Open  ]],
Cell[694448, 14796, 720, 25, 55, "Input",ExpressionUUID->"3862ba34-7b87-4fa8-b9a4-0e64cab273b7"],
Cell[CellGroupData[{
Cell[695193, 14825, 355, 10, 21, "Input",ExpressionUUID->"645fd7cf-4ce0-47c8-b931-be00a2dcc65b"],
Cell[695551, 14837, 2629, 40, 35, "Message",ExpressionUUID->"e0223857-ad60-4481-a051-3ca50e9622fd"],
Cell[698183, 14879, 405, 11, 24, "Output",ExpressionUUID->"dc27a46e-9fe0-4e2a-a512-1e161c834bee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[698625, 14895, 223, 5, 36, "Input",ExpressionUUID->"5a2444f1-eaa7-40c4-9d03-741817f4fe73"],
Cell[698851, 14902, 111, 1, 24, "Output",ExpressionUUID->"d2f0d78b-cf2f-47f5-9e65-22accee02ec3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[698999, 14908, 207, 5, 38, "Input",ExpressionUUID->"6b167e64-972d-44f2-bece-51f6171555c1"],
Cell[699209, 14915, 273, 7, 41, "Output",ExpressionUUID->"52377ddf-ad12-4aeb-ad60-20e010545055"]
}, Open  ]],
Cell[CellGroupData[{
Cell[699519, 14927, 309, 9, 21, "Input",ExpressionUUID->"3da156e0-c908-4d63-baff-58d0f6b5abcb"],
Cell[699831, 14938, 722, 22, 43, "Output",ExpressionUUID->"0a3e8268-cd7a-45dd-b9fa-bc9ea436b775"]
}, Open  ]],
Cell[700568, 14963, 930, 27, 40, "Input",ExpressionUUID->"dfe96bce-c469-4ac5-ab14-4d7c91481fee"],
Cell[CellGroupData[{
Cell[701523, 14994, 524, 14, 21, "Input",ExpressionUUID->"b149f0c1-ede2-43ae-b069-08cd8de74002"],
Cell[702050, 15010, 142, 2, 24, "Output",ExpressionUUID->"40550afc-5a27-4bd8-a3d3-20bc9f681608"]
}, Open  ]],
Cell[CellGroupData[{
Cell[702229, 15017, 448, 13, 21, "Input",ExpressionUUID->"817d83e9-b6fd-406c-83f8-a6cf78e398f8"],
Cell[702680, 15032, 141, 2, 24, "Output",ExpressionUUID->"1e116e94-3515-4260-b337-390fedb54812"]
}, Open  ]],
Cell[CellGroupData[{
Cell[702858, 15039, 200, 6, 21, "Input",ExpressionUUID->"988822ce-c901-46d5-a20b-99e53851d9c3"],
Cell[703061, 15047, 110, 1, 24, "Output",ExpressionUUID->"0ff5f241-8522-4d13-8e28-faf8539b2ebb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[703208, 15053, 1728, 60, 93, "Input",ExpressionUUID->"9337ca09-30dc-47f7-9f19-6530e9dd0b01"],
Cell[704939, 15115, 113, 2, 24, "Output",ExpressionUUID->"e8faa888-543d-432d-b385-ef201743169d"],
Cell[705055, 15119, 113, 2, 24, "Output",ExpressionUUID->"20d0a9af-1a18-4485-be60-44c42de9213b"],
Cell[705171, 15123, 113, 2, 24, "Output",ExpressionUUID->"5927fe8d-eff9-4d2e-b334-e4603d2bc683"],
Cell[705287, 15127, 113, 2, 24, "Output",ExpressionUUID->"f5071f2e-c401-4388-aedf-8e1d1500a0e1"],
Cell[705403, 15131, 113, 2, 24, "Output",ExpressionUUID->"e89bc12d-9537-47d8-9d65-3cf71f5f2836"],
Cell[705519, 15135, 113, 2, 24, "Output",ExpressionUUID->"08021a41-e049-4471-b73a-c33cf3d973ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[705669, 15142, 2091, 66, 107, "Input",ExpressionUUID->"87bdadcc-9a8c-4122-ab70-a6aecec6292a"],
Cell[707763, 15210, 186, 5, 24, "Output",ExpressionUUID->"ea795f0d-91cd-4880-9c81-77263f639746"],
Cell[707952, 15217, 111, 2, 24, "Output",ExpressionUUID->"bc56c7e0-5aac-443e-8e5a-bb8be4a21adf"],
Cell[708066, 15221, 179, 5, 40, "Output",ExpressionUUID->"47e1c1e8-3f46-4c05-9b1b-a65601b4a147"],
Cell[708248, 15228, 179, 5, 40, "Output",ExpressionUUID->"bfc5c1a7-08c0-4256-8f4d-821ec730c8b1"],
Cell[708430, 15235, 179, 5, 40, "Output",ExpressionUUID->"bd1d91c2-8d16-46b5-8647-783c02adf8ea"],
Cell[708612, 15242, 732, 18, 25, "Output",ExpressionUUID->"18a6827e-dae8-456c-8ecd-021a42b17870"],
Cell[709347, 15262, 730, 18, 25, "Output",ExpressionUUID->"341a6a65-95ba-46d1-be14-e887a067f08c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[710114, 15285, 771, 24, 36, "Input",ExpressionUUID->"5cbd09cc-e540-4827-87e7-46bd9e8f7039"],
Cell[710888, 15311, 209, 4, 24, "Output",ExpressionUUID->"704cadef-2f12-4580-b576-fb579d52baa0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[711134, 15320, 231, 6, 21, "Input",ExpressionUUID->"a3746302-2691-4336-bb4b-8907a3d05f7e"],
Cell[711368, 15328, 186, 5, 24, "Output",ExpressionUUID->"d1c9e007-096a-4cb2-a6e4-3eaf65b93707"]
}, Open  ]],
Cell[CellGroupData[{
Cell[711591, 15338, 316, 9, 54, "Input",ExpressionUUID->"ef5ffa8b-276d-418b-951d-311dadcb165c"],
Cell[711910, 15349, 112, 2, 24, "Output",ExpressionUUID->"c3cb16ba-021f-4dce-806f-9d2adb579465"],
Cell[712025, 15353, 112, 2, 24, "Output",ExpressionUUID->"d3ce507d-8e33-4a6f-aa1c-f7ce78159f8d"]
}, Open  ]],
Cell[712152, 15358, 145, 3, 21, "Input",ExpressionUUID->"8750891a-e329-4cf6-b25a-d11aea7ab457"],
Cell[712300, 15363, 81, 0, 21, "Input",ExpressionUUID->"8495d437-953a-4dc4-9148-39ec38bc8c66"],
Cell[CellGroupData[{
Cell[712406, 15367, 677, 21, 21, "Input",ExpressionUUID->"47bc25d8-562c-441b-9175-a401c6ddfec8"],
Cell[713086, 15390, 19535, 577, 850, "Output",ExpressionUUID->"8243f3b6-4517-4fee-afd4-bc31ce9e42f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[732658, 15972, 635, 20, 21, "Input",ExpressionUUID->"b204b77a-1f08-4a47-abb1-d8ee075b7742"],
Cell[733296, 15994, 8989, 299, 110, "Output",ExpressionUUID->"249240ac-b742-436b-bcd2-c3cfdba33319"]
}, Open  ]],
Cell[CellGroupData[{
Cell[742322, 16298, 854, 26, 50, "Input",ExpressionUUID->"bb637137-c2bb-4fa4-a3eb-482a0c824939"],
Cell[743179, 16326, 655, 11, 24, "Output",ExpressionUUID->"c3cebeb7-28bd-47a4-a494-3f1fd50c5136"]
}, Open  ]],
Cell[CellGroupData[{
Cell[743871, 16342, 8082, 266, 416, "Input",ExpressionUUID->"a55f73a7-4e5a-4241-9ebc-59e6d53fe4e0"],
Cell[751956, 16610, 166, 4, 24, "Output",ExpressionUUID->"d3a2e96d-3781-44e3-8811-aff7e0231bba"],
Cell[752125, 16616, 168, 4, 24, "Output",ExpressionUUID->"41ddcd8a-48fe-4178-8f83-ce4f1962b6de"],
Cell[752296, 16622, 169, 4, 24, "Output",ExpressionUUID->"79250d46-1d76-414c-805c-754f7a8af0dc"],
Cell[752468, 16628, 159, 4, 24, "Output",ExpressionUUID->"fe398403-8f17-4ac2-9c8e-471ec73cfc89"]
}, Open  ]],
Cell[752642, 16635, 1077, 33, 54, "Input",ExpressionUUID->"b96b77f8-96be-43b4-8863-9b2cfffdfe82"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[753768, 16674, 81, 0, 50, "Section",ExpressionUUID->"0f69c638-41b2-4eb1-b696-6cf1054d1818"],
Cell[CellGroupData[{
Cell[753874, 16678, 885, 24, 80, "Input",ExpressionUUID->"ba80d71e-9e08-4140-b4ce-034d41ee9e18"],
Cell[754762, 16704, 266, 8, 24, "Output",ExpressionUUID->"404fff25-01a7-4d74-94e7-330252c83887"],
Cell[755031, 16714, 267, 8, 24, "Output",ExpressionUUID->"304da592-2382-4d85-985d-9b57e49fe8f9"],
Cell[755301, 16724, 403, 12, 24, "Output",ExpressionUUID->"d4e3907a-7d55-42af-819c-872d85d6d63a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[755741, 16741, 660, 18, 50, "Input",ExpressionUUID->"a681e1c3-937c-43d4-a3ac-480d0b3d8a56"],
Cell[756404, 16761, 266, 8, 24, "Output",ExpressionUUID->"47c42a03-2b41-49fa-9394-9796773fe322"],
Cell[756673, 16771, 266, 8, 24, "Output",ExpressionUUID->"dfe39075-cd16-4eb5-82a5-d7fd14b52a2e"],
Cell[756942, 16781, 399, 12, 24, "Output",ExpressionUUID->"46a40eb5-0049-421c-8bf0-2dae62b719ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[757378, 16798, 934, 29, 83, "Input",ExpressionUUID->"7b48ac40-4522-4adb-aec9-678d49736f01"],
Cell[758315, 16829, 306, 9, 25, "Output",ExpressionUUID->"b6a37775-e6ec-41b2-b151-bd75a28810ef"],
Cell[758624, 16840, 306, 9, 25, "Output",ExpressionUUID->"4044ad8a-52dd-4886-9a54-7fc017a91f53"],
Cell[758933, 16851, 114, 2, 24, "Output",ExpressionUUID->"6ffde07f-8241-4c20-a770-89c759b09a70"],
Cell[759050, 16855, 114, 2, 24, "Output",ExpressionUUID->"63794bb0-5f4b-458b-b1f6-a7d023c31caa"],
Cell[759167, 16859, 1197, 36, 24, "Output",ExpressionUUID->"782d58c9-ef42-43ef-8f16-2a1933e68e04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[760401, 16900, 596, 18, 21, "Input",ExpressionUUID->"377d2b31-c202-4cef-a7af-98336e56d9d7"],
Cell[761000, 16920, 35987, 978, 368, "Output",ExpressionUUID->"2903cae8-1388-4853-b652-46d5803be7fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[797024, 17903, 337, 8, 36, "Input",ExpressionUUID->"db55da45-d8b7-4fa2-9e4f-4d45c422a94e"],
Cell[797364, 17913, 255, 8, 24, "Output",ExpressionUUID->"d5a08f51-4a6b-48c9-8242-b97754c62a98"],
Cell[797622, 17923, 267, 8, 24, "Output",ExpressionUUID->"324b3398-723e-42ed-b0cd-cee21d9f94ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[797926, 17936, 519, 16, 21, "Input",ExpressionUUID->"36a90de3-bf4a-4d96-9a7e-431389f3521f"],
Cell[798448, 17954, 35871, 1005, 1748, "Output",ExpressionUUID->"5cabc566-4d01-4e7e-a669-be6e892b219f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[834356, 18964, 192, 5, 25, "Input",ExpressionUUID->"a8fb961d-a202-4086-984e-975eb40b975f"],
Cell[834551, 18971, 114, 2, 24, "Output",ExpressionUUID->"113db6cf-937b-4956-a5d0-87b15c7cdaee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[834702, 18978, 144, 3, 21, "Input",ExpressionUUID->"922c4d3a-d320-47e4-8232-31e10d5de45a"],
Cell[834849, 18983, 114, 2, 24, "Output",ExpressionUUID->"a1acd7cc-cd99-4ff1-9d37-2d2abcf74d2e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[835012, 18991, 81, 0, 50, "Section",ExpressionUUID->"9504b33e-2216-4340-afd3-f2128b5161a0"],
Cell[CellGroupData[{
Cell[835118, 18995, 697, 17, 54, "Input",ExpressionUUID->"145108d5-92cc-4e06-b0cf-c702c147fa72"],
Cell[835818, 19014, 110, 1, 24, "Output",ExpressionUUID->"579ee68c-200b-47ec-88fc-9e07f8c9df3f"],
Cell[835931, 19017, 119, 1, 24, "Output",ExpressionUUID->"7503aecd-b7bf-413f-8dfa-4dffc3c751e3"],
Cell[836053, 19020, 472, 8, 24, "Output",ExpressionUUID->"c2b5fd47-d86d-47bf-a39d-9933896b1e86"]
}, Open  ]]
}, Open  ]]
}
]
*)

